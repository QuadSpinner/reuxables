<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <!--
  REUXABLES THEMES
  
  Copyright (C) 2007-2009 Nukeation Studios. All rights reserved.
  
  This file is protected by the End-User License Agreement provided at:
  http://reuxables.nukeation.com/files/license.txt
  
  THIS FILE MUST BE COMPILED WITH YOUR EXECUTABLE / ASSEMBLY BEFORE BEING DISTRIBUTED
  THIS NOTICE MUST REMAIN INTACT. DO NOT REMOVE!
  -->

    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>
    <Color x:Key="ScrollBarButtonBorderColor">#FFB6BABF</Color>

    <SolidColorBrush x:Key="WhiteBrush" Color="{DynamicResource WhiteColor}" />

    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFF8F8F9" Offset="1" />
        <GradientStop Color="#FFF8F8F9" Offset="0.332" />
        <GradientStop Color="#FFF1F2F4" Offset="0.341" />
        <GradientStop Color="#FFF1F2F4" Offset="0.349" />
        <GradientStop Color="#FFE8EAEC" Offset="0.358" />
        <GradientStop Color="#FFF3F4F5" Offset="0.75" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF828790" />

    <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFCBAB52" />

    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFFFDE1" Offset="0" />
        <GradientStop Color="#FFFFE7A0" Offset="1" />
        <GradientStop Color="#FFFFE8A5" Offset="0.332" />
        <GradientStop Color="#FFFFE18B" Offset="0.341" />
        <GradientStop Color="#FFFFE18B" Offset="0.349" />
        <GradientStop Color="#FFFFD768" Offset="0.358" />
        <GradientStop Color="#FFFFE394" Offset="0.75" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFFBC67" Offset="0" />
        <GradientStop Color="#FFFFD6A3" Offset="1" />
        <GradientStop Color="#FFFFAB41" Offset="0.332" />
        <GradientStop Color="#FFFD9E3F" Offset="0.341" />
        <GradientStop Color="#FFFD9E3F" Offset="0.349" />
        <GradientStop Color="#FFFB9143" Offset="0.358" />
        <GradientStop Color="#FFFECB95" Offset="0.75" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFB29648" />


    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <LinearGradientBrush x:Key="ListItemHoverBrush" EndPoint="0.5,0.907" StartPoint="0.5,0.103">
        <GradientStop Color="#FFFDEEB3" Offset="0" />
        <GradientStop Color="#FFFDFAE0" Offset="1" />
        <GradientStop Color="#FFFDE38A" Offset="0.306" />
        <GradientStop Color="#FFFDEAA1" Offset="0.707" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="FocusedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFE6E8EB" Offset="0" />
        <GradientStop Color="#FFDCDFE3" Offset="1" />
        <GradientStop Color="#FFDDE0E3" Offset="0.332" />
        <GradientStop Color="#FFD4D7DB" Offset="0.341" />
        <GradientStop Color="#FFD4D7DB" Offset="0.349" />
        <GradientStop Color="#FFC7CBD1" Offset="0.358" />
        <GradientStop Color="#FFD7DBDE" Offset="0.75" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedListItemBorderBrush" EndPoint="0.5,0.932" StartPoint="0.5,0.083">
        <GradientStop Color="#FFC2762B" Offset="0" />
        <GradientStop Color="#FFC29E47" Offset="1" />
        <GradientStop Color="#FFC28838" Offset="0.478" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedBackgroundBrush" EndPoint="0.5,0.902" StartPoint="0.5,0.134">
        <GradientStop Color="#FFFFE575" Offset="0" />
        <GradientStop Color="#FFFEE287" Offset="1" />
        <GradientStop Color="#FFFFE48A" Offset="0.086" />
        <GradientStop Color="#FFFFE48A" Offset="0.435" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ListItemSelectedInsiderBorderBrush" Color="#FFF8D172" />



    <LinearGradientBrush x:Key="ScrollBarButtonBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
        <GradientStop Color="#FFF2F3F3" Offset="0" />
        <GradientStop Color="#FFF1F1F1" Offset="0.668" />
        <GradientStop Color="#FFE6E7E8" Offset="1" />
        <GradientStop Color="#FFE7E8E9" Offset="0.677" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarButtonBorderBrush" Color="{DynamicResource ScrollBarButtonBorderColor}" />
    <LinearGradientBrush x:Key="ScrollBarButtonHoverBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFFBFBFB" Offset="0.668" />
        <GradientStop Color="#FFF8F8F9" Offset="1" />
        <GradientStop Color="#FFF5F6F7" Offset="0.677" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#FFE1E2E3" />


    <LinearGradientBrush x:Key="TextBoxBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFABAFB2" Offset="0" />
        <GradientStop Color="#FFE1E6EC" Offset="1" />
        <GradientStop Color="#FFD1D5DA" Offset="0.332" />
        <GradientStop Color="#FFDDE2E7" Offset="0.754" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TextBoxHoverBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD69E69" Offset="0" />
        <GradientStop Color="#FFF5DEAC" Offset="1" />
        <GradientStop Color="#FFE7C899" Offset="0.332" />
        <GradientStop Color="#FFF0D6A8" Offset="0.754" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="ComboBoxToggleBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFEFEFE" Offset="0" />
        <GradientStop Color="#FFF4F6F7" Offset="1" />
        <GradientStop Color="#FFF8F8FA" Offset="0.75" />
        <GradientStop Color="#FFFBFBFC" Offset="0.194" />
        <GradientStop Color="#FFFBFBFB" Offset="0.478" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE4E4E5" Offset="0" />
        <GradientStop Color="#FFEBEEF1" Offset="1" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#777" Offset="0.0" />
        <GradientStop Color="#000" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource BlackColor}" />

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />

    <Style x:Key="NuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearButton}" />
    </Style>

    <ControlTemplate x:Key="NuclearButton" TargetType="{x:Type Button}">

        <Grid x:Name="Grid">
            <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3" />

            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="{DynamicResource FocusedBrush}" TargetName="Border" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ScrollViewer Margin="1" Focusable="false" Background="{TemplateBinding Background}">

                            <StackPanel Margin="2" IsItemsHost="true" />

                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
                            <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
				<ControlTemplate.Resources>
				<Storyboard x:Key="IndeterminateOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
							
							<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>

                        </Storyboard>
						
						<Storyboard x:Key="ValueChangedOn" >
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
							
							<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
						
				</ControlTemplate.Resources>
                    <Grid x:Name="grid">
                    	<Grid.LayoutTransform>
                    		<TransformGroup>
                    			<ScaleTransform/>
                    			<SkewTransform/>
                    			<RotateTransform/>
                    			<TranslateTransform/>
                    		</TransformGroup>
                    	</Grid.LayoutTransform>

                        <Border BorderThickness="1" Margin="-1" CornerRadius="2" BorderBrush="#4CFFFFFF" />

                        <Border x:Name="PART_Track" BorderBrush="Silver" BorderThickness="1" CornerRadius="1">
                        	<Border.LayoutTransform>
                        		<TransformGroup>
                        			<ScaleTransform/>
                        			<SkewTransform/>
                        			<RotateTransform/>
                        			<TranslateTransform/>
                        		</TransformGroup>
                        	</Border.LayoutTransform>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.974" StartPoint="0.5,0.031">
                                    <GradientStop Color="#FFC6CBD5" Offset="0" />
                                    <GradientStop Color="#FFE0E4ED" Offset="1" />
                                    <GradientStop Color="#FFCED2DC" Offset="0.142" />
                                    <GradientStop Color="#FFD5D9E3" Offset="0.293" />
                                    <GradientStop Color="#FFE0E4ED" Offset="0.629" />
                                    <GradientStop Color="#FFDBE0E9" Offset="0.444" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <Border HorizontalAlignment="Left" x:Name="PART_Indicator" BorderThickness="0,0,1,0" CornerRadius="0" Margin="1,1,1.5,1">
                        	<Border.LayoutTransform>
                        		<TransformGroup>
                        			<ScaleTransform/>
                        			<SkewTransform/>
                        			<RotateTransform/>
                        			<TranslateTransform/>
                        		</TransformGroup>
                        	</Border.LayoutTransform>

                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFC4D4AE" Offset="0" />
                                    <GradientStop Color="#FFD8EBB7" Offset="1" />
                                    <GradientStop Color="#FFFBFFF5" Offset="0.341" />
                                    <GradientStop Color="#FFF7FBF0" Offset="0.724" />
                                    <GradientStop Color="White" Offset="0.534" />
                                    <GradientStop Color="#FFE7F2D4" Offset="0.845" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.954,0.503" StartPoint="0.054,0.502">
                                    <GradientStop Color="#FF659120" Offset="0" />
                                    <GradientStop Color="#FFCCE49F" Offset="1" />
                                    <GradientStop Color="#FF6DA51E" Offset="0.25" />
                                    <GradientStop Color="#FF84C421" Offset="0.478" />
                                    <GradientStop Color="#FF90CC33" Offset="0.659" />
                                    <GradientStop Color="#FFB4DB72" Offset="0.799" />
                                    <GradientStop Color="#FFC0E08B" Offset="0.845" />
                                    <GradientStop Color="#FFC6E296" Offset="0.897" />
                                    <GradientStop Color="#FFCCE49F" Offset="0.944" />
                                </LinearGradientBrush>
                            </Border.Background>
							<Grid>
                            <Border x:Name="border" BorderThickness="0,1,0,0" Margin="0,0,-1,-1" BorderBrush="#7FFFFFFF">
                            	<Border.LayoutTransform>
                            		<TransformGroup>
                            			<ScaleTransform/>
                            			<SkewTransform/>
                            			<RotateTransform/>
                            			<TranslateTransform/>
                            		</TransformGroup>
                            	</Border.LayoutTransform>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#33FFFFFF" Offset="0" />
                                        <GradientStop Offset="1" />
                                        <GradientStop Color="#66FFFFFF" Offset="0.401" />
                                        <GradientStop Color="#4CFFFFFF" Offset="0.103" />
                                        <GradientStop Color="#66FFFFFF" Offset="0.22" />
                                        <GradientStop Color="#7FFFFFFF" Offset="0.332" />
                                        <GradientStop Offset="0.422" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderBrush="#14000000" BorderThickness="0,0,1,0" Margin="0,0,-2,0">
                                    <Border Margin="0,0,-2,0" BorderBrush="#11000000" BorderThickness="0,0,1,0">
                                        <Border Margin="0,0,-2,0" BorderBrush="#0F000000" BorderThickness="0,0,1,0" />
                                    </Border>
                                </Border>
                            </Border>
                            <Border x:Name="IndeterminateBorder" Margin="0,0,1,0" >
                            	<Border.OpacityMask>
                            		<LinearGradientBrush EndPoint="0.996,0.5" StartPoint="0.005,0.5">
                            			<GradientStop Color="#00000000" Offset="0"/>
                            			<GradientStop Color="#00000000" Offset="1"/>
                            			<GradientStop Color="#00000000" Offset="0.48"/>
                            		</LinearGradientBrush>
                            	</Border.OpacityMask>
                            	<Border.Background>
                            		<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            			<GradientStop Color="{DynamicResource WhiteColor}" Offset="0"/>
                            			<GradientStop Color="#00F9F9F9" Offset="1"/>
                            		</LinearGradientBrush>
                            	</Border.Background>
                            </Border>
                            <Border CornerRadius="2,2,2,2" x:Name="ValueChangedBorder" Margin="0,0,1,0">
                            	<Border.OpacityMask>
                            		<LinearGradientBrush EndPoint="0.996,0.5" StartPoint="0.005,0.5">
                            			<GradientStop Color="#00000000" Offset="0"/>
                            			<GradientStop Color="#00000000" Offset="1"/>
                            			<GradientStop Color="#00000000" Offset="0.48"/>
                            		</LinearGradientBrush>
                            	</Border.OpacityMask>
                            	<Border.Background>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Border.Background>
                            </Border>
                            <Border x:Name="IndeterminateBorder_Vertical" Visibility="Visible" Margin="0,0,1,0" >
                            	<Border.LayoutTransform>
                            		<TransformGroup>
                            			<ScaleTransform/>
                            			<SkewTransform/>
                            			<RotateTransform Angle="0"/>
                            			<TranslateTransform/>
                            		</TransformGroup>
                            	</Border.LayoutTransform>
                            	<Border.OpacityMask>
                            		<LinearGradientBrush EndPoint="0.5,-0.408" StartPoint="0.5,1.408">
                            			<GradientStop Color="#00000000" Offset="0"/>
                            			<GradientStop Color="#00000000" Offset="1"/>
                            			<GradientStop Color="#00000000" Offset="0.48"/>
                            		</LinearGradientBrush>
                            	</Border.OpacityMask>
                            	<Border.Background>
                            		<LinearGradientBrush EndPoint="0.773,0.5" StartPoint="0.227,0.5">
                            			<GradientStop Color="{DynamicResource WhiteColor}" Offset="0"/>
                            			<GradientStop Color="#00F9F9F9" Offset="1"/>
                            		</LinearGradientBrush>
                            	</Border.Background>
                            </Border>
                            <Border CornerRadius="2,2,2,2" x:Name="ValueChangedBorder_Vertical" Visibility="Collapsed" Margin="0,0,1,0">
                            	<Border.LayoutTransform>
                            		<TransformGroup>
                            			<ScaleTransform/>
                            			<SkewTransform/>
                            			<RotateTransform Angle="0"/>
                            			<TranslateTransform/>
                            		</TransformGroup>
                            	</Border.LayoutTransform>
                            	<Border.OpacityMask>
                            		<LinearGradientBrush EndPoint="0.5,-0.408" StartPoint="0.5,1.408">
                            			<GradientStop Color="#00000000" Offset="0"/>
                            			<GradientStop Color="#00000000" Offset="1"/>
                            			<GradientStop Color="#00000000" Offset="0.48"/>
                            		</LinearGradientBrush>
                            	</Border.OpacityMask>
                            	<Border.Background>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Border.Background>
                            </Border>
                        </Grid>
						</Border>
						
                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                        	<Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="IndeterminateSolidFill" Opacity="1" RenderTransformOrigin="0.5,0.5" RadiusX="2" RadiusY="2" Stroke="#FF448DCA" StrokeThickness="0"/>
                        	<Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="IndeterminateGradientFill" Opacity="0.7" RadiusX="2" RadiusY="2" StrokeThickness="1">
                        		<Rectangle.Fill>
                        			<LinearGradientBrush EndPoint="0,1" StartPoint="20,1" MappingMode="Absolute" SpreadMethod="Repeat">
                        				<LinearGradientBrush.Transform>
                        					<TransformGroup>
                        						<TranslateTransform X="0"/>
                        						<SkewTransform AngleX="0"/>
                        					</TransformGroup>
                        				</LinearGradientBrush.Transform>
                        				<GradientStop Color="#FFFFFFFF" Offset="0"/>
                        				<GradientStop Color="#00FFFFFF" Offset=".25"/>
                        				<GradientStop Color="#FFFFFFFF" Offset="0.85"/>
                        			</LinearGradientBrush>
                        		</Rectangle.Fill>
                        	</Rectangle>
                        </Grid>

                    </Grid>
                	<ControlTemplate.Triggers>
					<EventTrigger RoutedEvent="RangeBase.ValueChanged">
                            <BeginStoryboard Storyboard="{StaticResource ValueChangedOn}" />
                        </EventTrigger>
                		<Trigger Property="IsIndeterminate" Value="True">
                			<Trigger.EnterActions>
                				<BeginStoryboard Storyboard="{StaticResource IndeterminateOn}"/>
                			</Trigger.EnterActions>
                		</Trigger>
                		<Trigger Property="Orientation" Value="Vertical">
						<Setter Property="Visibility" TargetName="IndeterminateBorder_Vertical" Value="Visible"/>
								<Setter Property="Visibility" TargetName="ValueChangedBorder_Vertical" Value="Visible"/>
								<Setter Property="Visibility" TargetName="IndeterminateBorder" Value="Hidden"/>
								<Setter Property="Visibility" TargetName="ValueChangedBorder" Value="Hidden"/>
                			<Setter Property="LayoutTransform" TargetName="grid">
                				<Setter.Value>
                					<TransformGroup>
                						<ScaleTransform/>
                						<SkewTransform/>
                						<RotateTransform Angle="-90"/>
                						<TranslateTransform/>
                					</TransformGroup>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="LayoutTransform" TargetName="PART_Track">
                				<Setter.Value>
                					<TransformGroup>
                						<ScaleTransform/>
                						<SkewTransform/>
                						<RotateTransform Angle="90"/>
                						<TranslateTransform/>
                					</TransformGroup>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="LayoutTransform" TargetName="PART_Indicator">
                				<Setter.Value>
                					<TransformGroup>
                						<ScaleTransform/>
                						<SkewTransform/>
                						<RotateTransform Angle="90"/>
                						<TranslateTransform/>
                					</TransformGroup>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="LayoutTransform" TargetName="border">
                				<Setter.Value>
                					<TransformGroup>
                						<ScaleTransform/>
                						<SkewTransform/>
                						<RotateTransform Angle="-90"/>
                						<TranslateTransform/>
                					</TransformGroup>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="Background" TargetName="PART_Indicator">
                				<Setter.Value>
                					<LinearGradientBrush EndPoint="0.504,0.274" StartPoint="0.504,0.731">
                						<GradientStop Color="#FF659120" Offset="0"/>
                						<GradientStop Color="#FFCCE49F" Offset="1"/>
                						<GradientStop Color="#FF6DA51E" Offset="0.25"/>
                						<GradientStop Color="#FF84C421" Offset="0.478"/>
                						<GradientStop Color="#FF90CC33" Offset="0.659"/>
                						<GradientStop Color="#FFB4DB72" Offset="0.799"/>
                						<GradientStop Color="#FFC0E08B" Offset="0.845"/>
                						<GradientStop Color="#FFC6E296" Offset="0.897"/>
                						<GradientStop Color="#FFCCE49F" Offset="0.944"/>
                					</LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="BorderBrush" TargetName="PART_Indicator">
                				<Setter.Value>
                					<LinearGradientBrush EndPoint="1.484,0.5" StartPoint="-0.484,0.5">
                						<GradientStop Color="#FFC4D4AE" Offset="0"/>
                						<GradientStop Color="#FFD8EBB7" Offset="1"/>
                						<GradientStop Color="#FFFBFFF5" Offset="0.341"/>
                						<GradientStop Color="#FFF7FBF0" Offset="0.724"/>
                						<GradientStop Color="White" Offset="0.534"/>
                						<GradientStop Color="#FFE7F2D4" Offset="0.845"/>
                					</LinearGradientBrush>
                				</Setter.Value>
                			</Setter>
                			<Setter Property="BorderThickness" TargetName="PART_Indicator" Value="0"/>
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NuclearRepeatButton" d:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonBrush}" />
                        <Border x:Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0" />
                        <Border x:Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border" />
                            <Setter Property="Opacity" TargetName="PressedBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Border BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" Background="{DynamicResource ScrollBarButtonBrush}" CornerRadius="1" />
                        <Border x:Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0" />
                        <Border x:Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0" />
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Opacity" TargetName="PressedBorder" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>

                        <Border BorderBrush="{x:Null}" Grid.ColumnSpan="11" Grid.RowSpan="3" CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1.016,0.5" StartPoint="0.017,0.5">
                                    <GradientStop Color="#FFEBEDEF" Offset="0" />
                                    <GradientStop Color="#FFD8DADC" Offset="1" />
                                    <GradientStop Color="#FFF4F4F4" Offset="0.047" />
                                    <GradientStop Color="WhiteSmoke" Offset="0.086" />
                                    <GradientStop Color="#FFFCFCFC" Offset="0.802" />
                                    <GradientStop Color="#FFEBEDEF" Offset="0.897" />
                                    <GradientStop Color="#FFF1F3F5" Offset="0.931" />
                                    <GradientStop Color="#FFE8EAEC" Offset="0.966" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand">
                            <Grid>
                                <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </RepeatButton>

                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand">
                            <Grid>
                                <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">

                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />

                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Path x:Name="path" Fill="{DynamicResource NormalBrush}" Stretch="Fill" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" Margin="-0.06,0.312,0.112,0.446" VerticalAlignment="Stretch" Height="Auto" Data="M0.041776327,0.31279057 L18.887959,0.34013605 18.75703,11.243745 8.8410569,18.553436 -0.05962883,11.176062 z" />
                        <Path x:Name="path_Copy" Fill="{x:Null}" Stretch="Fill" StrokeThickness="1" Margin="1" VerticalAlignment="Stretch" Height="Auto" Data="M0.041776327,0.31279057 L18.887959,0.34013605 18.75703,11.243745 8.8410569,18.553436 -0.05962883,11.176062 z">
                            <Path.Stroke>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Path.Stroke>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource ListItemHoverBrush}" />
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" />
                        <Border Grid.Row="1" Margin="0" x:Name="Border" Height="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="#FFCCCCCC" Offset="1" />
                                    <GradientStop Color="Black" Offset="0.509" />
                                    <GradientStop Color="#FFCCCCCC" Offset="0.517" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearSliderThumb}" Margin="0,2,0,0" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="NormalBorderBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD6D8D9" Offset="0" />
        <GradientStop Color="#FFA1A2A4" Offset="1" />
        <GradientStop Color="#FFCCCDCE" Offset="0.733" />
        <GradientStop Color="#FFD7D8D9" Offset="0.254" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Stroke="{DynamicResource NormalBorderBrushExtSimple}" Fill="{DynamicResource ComboBoxToggleBg}" />
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle_Copy" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{x:Null}" Margin="1">
                <Rectangle.Stroke>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Stroke>
            </Rectangle>
            <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource SelectedListItemBorderBrush}" />
                <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="Rectangle_Copy" Value="{DynamicResource ListItemSelectedInsiderBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" />
                <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>


    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
    </Style>

    <ControlTemplate x:Key="NuclearComboBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />

            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" />

            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource WhiteBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" CornerRadius="2" />
                    <ScrollViewer x:Name="DropDownScrollViewer"  Margin="4,6,4,6" >
                        <Grid>
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>

                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                <Setter Property="Margin" Value="0,1,0,0" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style d:IsControlPart="True" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>

                            </TabPanel>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Border.Background>
                            <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0" />

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                        <GradientStop Offset="0.892" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                            <GradientStop Offset="1" Color="White" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                            <GradientStop Offset="0.927" Color="White" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>

                                </Border>
                            </Border>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" Margin="12,4" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
    </Style>

    <ControlTemplate x:Key="NuclearTextBox" TargetType="{x:Type TextBox}">
        <Grid>
            <Border x:Name="Border" BorderThickness="1" Padding="2" CornerRadius="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Border.Background>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" CornerRadius="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxHoverBorderBrush}" />



            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Grid>
                        <Border x:Name="Border" BorderThickness="1" Padding="2" CornerRadius="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" CornerRadius="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxHoverBorderBrush}" />



                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Grid>
                        <Border x:Name="Border" BorderThickness="1" Padding="2" CornerRadius="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" CornerRadius="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxHoverBorderBrush}" />
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="CheckBoxBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFF2F3F5" Offset="0" />
        <GradientStop Color="#FFF2F3F5" Offset="1" />
        <GradientStop Color="#FFE8E9EB" Offset="0.197" />
        <GradientStop Color="#FFE8E9EB" Offset="0.522" />
        <GradientStop Color="#FFF0F1F2" Offset="0.723" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB6B8BA" Offset="0" />
        <GradientStop Color="#FFDEDFE0" Offset="1" />
        <GradientStop Color="#FFB6B8BA" Offset="0.502" />
        <GradientStop Color="#FFBEC0C2" Offset="0.518" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCAD5D" Offset="0" />
        <GradientStop Color="#FFFEDEBE" Offset="1" />
        <GradientStop Color="#FFFCAD5D" Offset="0.502" />
        <GradientStop Color="#FFFCB771" Offset="0.518" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="#FFD6A259" />

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
    </Style>

    <ControlTemplate x:Key="NuclearCheckBox" TargetType="{x:Type CheckBox}">

        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid Width="13" Height="13">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="border" BorderThickness="1" Margin="1" BorderBrush="{DynamicResource CheckBoxInnerBorderBrush}" />
                    </Border>
                    <Path Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" x:Name="CheckMark" Width="Auto" Data="M-0.32455936,5.7168726 L3.1785986,10.519821 10.465148,2.9112485" Margin="1.639,2.318,2.043,2.5" />
                    <Rectangle Visibility="Hidden" Fill="{DynamicResource CheckBoxInnerBorderHoverBrush}" Stroke="#FFB36414" x:Name="ThreeState" Margin="2,2,2,2" RadiusX="1" RadiusY="1" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsThreeState" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="ThreeState" Value="Visible" />
                <Setter Property="Visibility" TargetName="CheckMark" Value="Hidden" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
    </Style>

    <ControlTemplate x:Key="NuclearRadioButton" TargetType="{x:Type RadioButton}">

        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid Width="13" Height="13">
                    <Ellipse x:Name="Ellipse_Border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                    <Ellipse x:Name="InnerBorder" StrokeThickness="1" Stroke="{DynamicResource CheckBoxInnerBorderBrush}" Margin="2" />
                    <Ellipse Margin="3" x:Name="CheckMark" Stroke="#FFAA5B0B">
                        <Ellipse.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFFAF" Offset="0" />
                                <GradientStop Color="#FFFE9E45" Offset="1" />
                                <GradientStop Color="#FFFFE38A" Offset="0.325" />
                                <GradientStop Color="#FFFFBA61" Offset="0.663" />
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse_Border" />
                <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" />
                <Setter Property="Stroke" TargetName="Ellipse_Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Ellipse_Border" />
                <Setter Property="Stroke" Value="{DynamicResource GlyphBrush}" TargetName="Ellipse_Border" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse_Border" />
                <Setter Property="Stroke" Value="#40000000" TargetName="Ellipse_Border" />
                <Setter Property="Foreground" Value="#80000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFBFBFBF" Offset="0.5" />
        <GradientStop Color="#FF878787" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F8FE" Offset="0" />
        <GradientStop Color="#FFE0F3FE" Offset="0.3" />
        <GradientStop Color="#FF6FA7C5" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDCF0FA" Offset="0" />
        <GradientStop Color="#FFC5E6F7" Offset="0.2" />
        <GradientStop Color="#FF5690D0" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource ComboBoxToggleBg}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource NormalBrushExtSimple}" Stroke="{DynamicResource NormalBorderBrushExtSimple}" StrokeThickness="0" RadiusX="2" RadiusY="2" Grid.ColumnSpan="2" />
                            <ContentPresenter x:Name="contentPresenter" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,1,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                            <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Grid.Column="0" Margin="0,7,0,6" Width="7.8" Height="7.7">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="path" Value="0.5" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.RowSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource ComboBoxToggleBg}" Stroke="{DynamicResource NormalBorderBrushExtSimple}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                                <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Margin="0,5,5,6" Width="7.8" Height="7.7" Grid.Column="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,4,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="2,2,2,2" BorderThickness="1,1,1,1" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.ColumnSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource ComboBoxToggleBg}" Stroke="{DynamicResource NormalBorderBrushExtSimple}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                                <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Margin="0,5,5,6" Width="7.8" Height="7.7" Grid.Column="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="2,2,2,2" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1,1,1,1">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.RowSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource ComboBoxToggleBg}" Stroke="{DynamicResource NormalBorderBrushExtSimple}" StrokeThickness="0" RadiusX="2" RadiusY="2" />
                                <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Margin="5,5,0,6" Width="7.8" Height="7.7" Grid.Column="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="4,4,2,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3">
                        <DockPanel>
                            <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" />
                            <Border Visibility="Collapsed" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" CornerRadius="1" x:Name="border" Margin="1,0,1,1">
                                <ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="border" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" />
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="0,1,1,1" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="1,1,1,0" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="1,1,0,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="1" Opacity="0.2" />

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="columnDefinition" Width="37"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="border1" BorderBrush="#FFE2E4E7" BorderThickness="1,0,0,0" Grid.Column="1" Visibility="Collapsed">
                                <Border HorizontalAlignment="Left" VerticalAlignment="Top" Width="0" Height="0" BorderBrush="WhiteSmoke" BorderThickness="1,0,0,0" />
                            </Border>

                            <Border x:Name="border" BorderBrush="{DynamicResource MouseOverBorderBrush}" BorderThickness="1" Grid.Column="0" Grid.ColumnSpan="5" Opacity="0" Margin="2,0" Background="{DynamicResource ListItemHoverBrush}">
                                <Border BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>

                            <ContentPresenter Margin="4,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Width="16" Height="16" />

                            <Grid Visibility="Hidden" Margin="4,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Border Background="#FFFEE388" CornerRadius="2" BorderThickness="1" BorderBrush="#FFF29536">
                                    <Path Stroke="{StaticResource GlyphBrush}" VerticalAlignment="Center" StrokeThickness="2" x:Name="GlyphPanelpath" Width="Auto" Data="M1.0924787,5.372821 L3.1785986,10.519821 10.528543,2.5198207" Margin="3" />
                                </Border>
                            </Grid>

                            <ContentPresenter Grid.Column="1" Margin="2,4" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" />
                            <TextBlock Margin="{TemplateBinding Padding}" Grid.Column="3" Text="{TemplateBinding InputGestureText}"/>
                            <Grid Grid.Column="4" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                            </Grid>

                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource WhiteBrush}" BorderBrush="#FFA7ABB0" BorderThickness="1">
                                        <Border BorderBrush="WhiteSmoke" BorderThickness="1" />
                                    </Border>

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,2" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsCheckable" Value="True" />

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Visibility" TargetName="border1" Value="Visible" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Visibility" TargetName="border1" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" CornerRadius="1">
                            <ScrollViewer Focusable="False" Background="{TemplateBinding Background}" Padding="4" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path Visibility="Collapsed" HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" x:Name="IsExpandedPath" VerticalAlignment="Stretch" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 8 4 L 4 8 Z" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-46.576" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" x:Name="IsExpandedPathHover" VerticalAlignment="Stretch" Fill="{x:Null}" Data="M 0 4 L 8 4 L 4 8 Z" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height" Stroke="#FF27C7F7" Opacity="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-46.576" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="ExpandPath" VerticalAlignment="Center" Fill="{x:Null}" Data="M 4 0 L 8 4 L 4 8 Z" Stroke="#FFA5A5A5" />
                        <Path HorizontalAlignment="Left" Margin="1,1,0,1" x:Name="ExpandPathHover" VerticalAlignment="Center" Fill="{x:Null}" Data="M 4 0 L 8 4 L 4 8 Z" Stroke="#FF27C7F7" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="IsExpandedPathHover" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="ExpandPathHover" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="IsExpandedPath" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ExpandPath" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <Border Grid.Column="1" x:Name="Selection_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>

                                <Border x:Name="border" BorderBrush="{DynamicResource SelectedListItemBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                                    <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" CornerRadius="1" />
                                </Border>
                                <Border x:Name="border1" BorderBrush="{DynamicResource MouseOverBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                                    <Border BorderThickness="1" Background="{DynamicResource ListItemHoverBrush}" CornerRadius="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header" Margin="2" />
                            </Grid>
                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="Selection_Border">
                            <Setter Property="Opacity" TargetName="border1" Value="1" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Selection_Border" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,0,2,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" />

                            </ScrollViewer>
                            <ScrollContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
                            <Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" Fill="White" DockPanel.Dock="Left" />
                            <Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Height="1" Fill="White" DockPanel.Dock="Top" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" BorderBrush="{DynamicResource DefaultedBorderBrush}" Background="{DynamicResource WhiteBrush}">

                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" x:Name="border">

                        <Grid Margin="2,0,2,0">
                            <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
                                <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" />
                            </Border>
                            <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                                <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,2,0,2" VerticalAlignment="Stretch" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Rectangle HorizontalAlignment="Center" Width="0.5">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Margin="0,1,0,1">
                        <Grid>

                            <Border x:Name="Main" BorderThickness="1,1,0,1" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="0,0,0,0" />

                            <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />
                            </Border>
                        </Grid>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Margin="0,0,7,0" Width="Auto" HorizontalAlignment="Stretch" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource MouseOverBrush}" />
                            <Setter Property="BorderBrush" TargetName="Main" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
                            <Setter Property="Background" Value="SkyBlue" />
                            <Setter Property="BorderBrush" TargetName="Main" Value="{DynamicResource PressedBorderBrush}" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource LightBrush}" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Yellow" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearButton}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
    </Style>

    <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="#ffcc00" />
    <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6" />
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" CornerRadius="0,0,0,0" Background="{DynamicResource LightBrush}">
                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                            <Path Stroke="White" Data="M 1 1.5 L 6 1.5" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0 0.5 L 5 0.5" />
                            <Path Fill="White" Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFFDFDFD" />
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFFFFFFF" />
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="0,0,0,0">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
                            <Path Stroke="White" Data="M 1.5 1 L 1.5 6" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5" />
                            <Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarPanelBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFEFEFE" Offset="0" />
        <GradientStop Color="#FFE5E9EE" Offset="1" />
        <GradientStop Color="#FFFDFDFD" Offset="0.292" />
        <GradientStop Color="#FFFCFCFC" Offset="0.388" />
        <GradientStop Color="#FFFBFBFB" Offset="0.48" />
        <GradientStop Color="#FFFAFAFA" Offset="0.568" />
        <GradientStop Color="#FFF8F8F8" Offset="0.636" />
        <GradientStop Color="#FFF3F4F5" Offset="0.816" />
        <GradientStop Color="#FFEFF1F3" Offset="0.872" />
        <GradientStop Color="#FFEDF0F2" Offset="0.928" />
        <GradientStop Color="#FFF5F6F6" Offset="0.7" />
        <GradientStop Color="#FFF3F4F5" Offset="0.76" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid SnapsToDevicePixels="true" Margin="3,1,1,1" x:Name="Grid">
                        <Grid HorizontalAlignment="Right" x:Name="OverflowGrid">
                            <ToggleButton IsEnabled="{TemplateBinding HasOverflowItems}" FocusVisualStyle="{x:Null}" x:Name="OverflowButton" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Popup Focusable="false" AllowsTransparency="true" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False" x:Name="OverflowPopup">
                                <Border x:Name="Shdw">
                                    <Border BorderThickness="1,1,1,1" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource LightBrush}">
                                        <ToolBarOverflowPanel Focusable="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" Margin="2" x:Name="PART_ToolBarOverflowPanel" WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border Margin="0,0,11,0" x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" Padding="{TemplateBinding Padding}" Background="{DynamicResource ToolBarPanelBrush}">
                            <Grid>

                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb Padding="6,5,1,6" Margin="-3,-1,0,0" x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="10" />
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" VerticalAlignment="Center" ContentSource="Header" />
                                    <Grid>
                                        <ToolBarPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,1,2,2" x:Name="PART_ToolBarPanel" IsItemsHost="true" Background="{DynamicResource ToolBarPanelBrush}" />
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true" />
                            <Setter Property="Background" TargetName="Shdw" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                            <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
                            <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                            <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF000000" />
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="4" Background="{DynamicResource LightBrush}" BorderThickness="1,1,1,1" />
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}">

                                <Border BorderThickness="{TemplateBinding BorderThickness}" />
                            </Border>
                        </Border>
                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="2" Background="{DynamicResource NormalBrush}" BorderThickness="1" x:Name="Main" BorderBrush="{DynamicResource NormalBorderBrush}" />

                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <LinearGradientBrush x:Key="NormalBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFEDEFF1" Offset="1" />
        <GradientStop Color="#FFFDFDFD" Offset="0.332" />
        <GradientStop Color="#FFFBFBFC" Offset="0.741" />
        <GradientStop Color="#FFF6F7F8" Offset="0.875" />
    </LinearGradientBrush>

    <Style x:Key="Button2" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrushExtSimple}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3" Background="{DynamicResource NormalBrushExtSimple}" />
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBorder_Copy" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemSelectedBackgroundBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder_Copy" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
    </Style>

    <LinearGradientBrush x:Key="ShineFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#CC000000" Offset="0" />
        <GradientStop Color="#CC000000" Offset="1" />
        <GradientStop Color="#33C3C3C3" Offset="0.5" />
        <GradientStop Color="#33C8C8C8" Offset="0.525" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineOpacity" EndPoint="1.012,0.887" StartPoint="0.012,0.887">
        <GradientStop Color="#E5000000" Offset="0" />
        <GradientStop Color="#E5FFFFFF" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.465,0.869" StartPoint="0.465,0.143">
        <GradientStop Color="#CCFFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="1" />
        <GradientStop Color="#4CFFFFFF" Offset="0.56" />
        <GradientStop Color="#99FFFFFF" Offset="0.555" />
    </LinearGradientBrush>

    <Style x:Key="BlueButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FF6A8CED">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FF19337B" Offset="0.013" />
                                    <GradientStop Color="#FF19337B" Offset="0.987" />
                                    <GradientStop Color="#FF203B86" Offset="0.185" />
                                    <GradientStop Color="#FF203B86" Offset="0.858" />
                                    <GradientStop Color="#FF2A4694" Offset="0.289" />
                                    <GradientStop Color="#FF2A4694" Offset="0.75" />
                                    <GradientStop Color="#FF3A59AD" Offset="0.643" />
                                    <GradientStop Color="#FF3A59AD" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FF42A848">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FF116516" Offset="0.013" />
                                    <GradientStop Color="#FF116516" Offset="0.987" />
                                    <GradientStop Color="#FF186E1E" Offset="0.185" />
                                    <GradientStop Color="#FF186E1E" Offset="0.858" />
                                    <GradientStop Color="#FF217827" Offset="0.289" />
                                    <GradientStop Color="#FF217827" Offset="0.75" />
                                    <GradientStop Color="#FF2B8431" Offset="0.643" />
                                    <GradientStop Color="#FF2B8431" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OrangeButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FFF6C21E">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FFC36301" Offset="0.013" />
                                    <GradientStop Color="#FFC36301" Offset="0.987" />
                                    <GradientStop Color="#FFCA6E02" Offset="0.185" />
                                    <GradientStop Color="#FFCA6E02" Offset="0.858" />
                                    <GradientStop Color="#FFCF7503" Offset="0.289" />
                                    <GradientStop Color="#FFCF7503" Offset="0.75" />
                                    <GradientStop Color="#FFDE8A05" Offset="0.643" />
                                    <GradientStop Color="#FFDE8A05" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MagentaButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FFD069CE">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FF6B066B" Offset="0.013" />
                                    <GradientStop Color="#FF6B066B" Offset="0.987" />
                                    <GradientStop Color="#FF740E75" Offset="0.185" />
                                    <GradientStop Color="#FF740E75" Offset="0.858" />
                                    <GradientStop Color="#FF801781" Offset="0.289" />
                                    <GradientStop Color="#FF801781" Offset="0.75" />
                                    <GradientStop Color="#FF9A2D9C" Offset="0.643" />
                                    <GradientStop Color="#FF9A2D9C" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="2" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0" />
        <GradientStop Color="#EBEBEB" Offset="0.5" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource BlackColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                    </ControlTemplate.Resources>
                    <Grid>

                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource LightBorderBrush}" Opacity="0.8" />
                        <Border x:Name="Selected" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource MouseOverBrush}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource MouseOverBorderBrush}" Opacity="0" />
                        <Border x:Name="Hover" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource LightBorderBrush}" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="Pressed" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource LightBorderBrush}" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Border.Background>
                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,4,4,4" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Pressed" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Hover" Value="0.1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsChecked" Value="true">

                            <Setter Property="Opacity" TargetName="Selected" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                            <Setter Property="Background" TargetName="Selected" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Selected" Value="{DynamicResource DisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



</ResourceDictionary>