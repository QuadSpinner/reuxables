<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

    <!--
  REUXABLES THEMES
  
  Copyright (C) 2007-2010 Nukeation Studios. All rights reserved.
  
  This file is protected by the End-User License Agreement provided at:
  http://reuxables.nukeation.com/files/license.txt
  
  THIS FILE MUST BE COMPILED WITH YOUR EXECUTABLE / ASSEMBLY BEFORE BEING DISTRIBUTED
  THIS NOTICE MUST REMAIN INTACT. DO NOT REMOVE!
  -->

    <Color x:Key="EffectGreen1">#0000264D</Color>
	<Color x:Key="EffectGreen2">#0000264D</Color>
	<Color x:Key="EffectGreen3">#FF0A69AD</Color>
	<Color x:Key="EffectGreen4">#FF0D2E45</Color>
	
	<Color x:Key="EffectRed1">#004D0000</Color>
	<Color x:Key="EffectRed2">#004D0000</Color>
	<Color x:Key="EffectRed3">#FF721111</Color>
	<Color x:Key="EffectRed4">#FF450D0D</Color>
		
	<Color x:Key="Effect1">#00004D1F</Color>
	<Color x:Key="Effect2">#00004D26</Color>
	<Color x:Key="Effect3">#FF1E7052</Color>
	<Color x:Key="Effect4">#FF0B3324</Color>
	
	
	<SolidColorBrush x:Key="BaseBrush" Color="#FF1B2518"/>
	<SolidColorBrush x:Key="TextBrush" Color="#FFFFFFFF"/>
	
	<LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#54FFFFFF" Offset="1"/>
		<GradientStop Color="#26FFFFFF" Offset="0"/>
	</LinearGradientBrush>
	
	<Color x:Key="GlyphBrushTopGradient">#FF1A5900</Color>
	<Color x:Key="GlyphBrushMiddleGradient">#FF2B6400</Color>
	<Color x:Key="GlyphBrushBottomGradient">#FF628C3C</Color>
	
	
				<LinearGradientBrush x:Key="GlyphBrush" EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="{StaticResource GlyphBrushTopGradient}" Offset="0"/>
					<GradientStop Color="{StaticResource GlyphBrushBottomGradient}" Offset="1"/>
					<GradientStop Color="{StaticResource GlyphBrushMiddleGradient}" Offset="0.769"/>
				</LinearGradientBrush>
			
		<LinearGradientBrush x:Key="ControlBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0.0">
			<GradientStop Color="{DynamicResource BlackColor}" Offset="0"/>
			<GradientStop Color="#FF3F3F3F" Offset="1"/>
			<GradientStop Color="#FF0F0F0F" Offset="0.353"/>
			<GradientStop Color="#FF1E1E1E" Offset="0.475"/>
			<GradientStop Color="#FF303030" Offset="0.735"/>
		</LinearGradientBrush>
			
	<SolidColorBrush x:Key="ButtonBaseRed" Color="#FF311818"/>
<SolidColorBrush x:Key="ButtonBaseGreen" Color="#FF0E261D"/>
<SolidColorBrush x:Key="ButtonBaseBlue" Color="#FF182031"/>	

    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>	
	
	<LinearGradientBrush x:Key="NormalBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#EEE" Offset="0.0"/>
		<GradientStop Color="#CCC" Offset="1.0"/>
	</LinearGradientBrush>
	
	
	<LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF" Offset="0.0"/>
		<GradientStop Color="#EEE" Offset="1.0"/>
	</LinearGradientBrush>
	
	
	<LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFF" Offset="0.0"/>
		<GradientStop Color="#AAA" Offset="1.0"/>
	</LinearGradientBrush>
	
	<LinearGradientBrush x:Key="PressedBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#BBB" Offset="0.0"/>
		<GradientStop Color="#EEE" Offset="0.1"/>
		<GradientStop Color="#EEE" Offset="0.9"/>
		<GradientStop Color="#FFF" Offset="1.0"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="PressedBorderBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#444" Offset="0.0"/>
		<GradientStop Color="#888" Offset="1.0"/>
	</LinearGradientBrush>

	
	<SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD"/>	

	
	<SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888"/>
	<SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE"/>
	<SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA"/>

	
	<LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#FF414141" Offset="0"/>
		<GradientStop Color="#FF181D17" Offset="1"/>
	</LinearGradientBrush>
	
	
	<LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#777" Offset="0.0"/>
		<GradientStop Color="#000" Offset="1.0"/>
	</LinearGradientBrush>

	<SolidColorBrush x:Key="SolidBorderBrush" Color="#888"/>
	<SolidColorBrush x:Key="LightBorderBrush" Color="#AAA"/>
	<SolidColorBrush x:Key="LightColorBrush" Color="#DDD"/>
	
	<Style x:Key="NuclearButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<LinearGradientBrush x:Key="ShineBrush" EndPoint="0.5,1" StartPoint="0.5,0">
		<GradientStop Color="#BFFFFFFF" Offset="0"/>
		<GradientStop Color="#44FFFFFF" Offset="0.45"/>
		<GradientStop Color="#00FFFFFF" Offset="0.46"/>
	</LinearGradientBrush>
	<RadialGradientBrush x:Key="ShineOpacity">
		<RadialGradientBrush.RelativeTransform>
			<TransformGroup>
				<ScaleTransform ScaleX="1" ScaleY="1"/>
				<SkewTransform AngleX="0" AngleY="0"/>
				<RotateTransform Angle="0"/>
				<TranslateTransform X="0" Y="-0.5"/>
			</TransformGroup>
		</RadialGradientBrush.RelativeTransform>
		<GradientStop Color="#FF000000" Offset="0"/>
		<GradientStop Color="#33FFFFFF" Offset="1"/>
	</RadialGradientBrush>
	
	<Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template" Value="{DynamicResource NuclearButton}" />
				<Setter Property="Foreground" Value="#FFFFFFFF"/>
	</Style>
	
	<ControlTemplate x:Key="NuclearButton" TargetType="{x:Type Button}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="DefaultHoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="DefaultHoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="CancelHoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource EffectRed3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource EffectRed2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource EffectRed4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="CancelHoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource EffectRed2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource EffectRed1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0200000" Value="0,2,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
							<Grid x:Name="ButtonRoot">
								<Border x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
								</Border>
								<Border Margin="1,1,1,0" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter x:Name="ButtonContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsDefault" Value="True">
									<Setter Property="Background" TargetName="ButtonBase" Value="{DynamicResource ButtonBaseGreen}"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource CancelHoverOff}" x:Name="CancelHoverOff_BeginStoryboard"/>
									</MultiTrigger.ExitActions>
									<MultiTrigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource CancelHoverOn}" x:Name="CancelHoverOn_BeginStoryboard"/>
									</MultiTrigger.EnterActions>
									<MultiTrigger.Conditions>
										<Condition Property="IsCancel" Value="True"/>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource DefaultHoverOff}" x:Name="DefaultHoverOff_BeginStoryboard"/>
									</MultiTrigger.ExitActions>
									<MultiTrigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource DefaultHoverOn}" x:Name="DefaultHoverOn_BeginStoryboard"/>
									</MultiTrigger.EnterActions>
									<MultiTrigger.Conditions>
										<Condition Property="IsDefault" Value="True"/>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
								</MultiTrigger>
								<Trigger Property="IsCancel" Value="True">
									<Setter Property="Background" TargetName="ButtonBase" Value="{DynamicResource ButtonBaseRed}"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
									</MultiTrigger.EnterActions>
									<MultiTrigger.ExitActions>
										<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
									</MultiTrigger.ExitActions>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True"/>
										<Condition Property="IsDefault" Value="False"/>
										<Condition Property="IsCancel" Value="False"/>
									</MultiTrigger.Conditions>
								</MultiTrigger>
								<Trigger Property="IsPressed" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Effect" TargetName="ButtonBase">
										<Setter.Value>
											<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.2" ShadowDepth="3"/>
										</Setter.Value>
									</Setter>
									<Setter Property="Opacity" TargetName="ButtonBase" Value="0.35"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
	
	<Style x:Key="RadioButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style x:Key="CheckBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type CheckBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template" Value="{DynamicResource NuclearCheckBox}"/>
		<Setter Property="Padding" Value="5,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	
	<ControlTemplate TargetType="{x:Type CheckBox}" x:Key="NuclearCheckBox">
					<ControlTemplate.Resources>
					<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
						<Storyboard x:Key="CheckedFalse">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxCheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid1" Storyboard.TargetProperty="(FrameworkElement.Height)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="CheckedTrue">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxCheckIcon" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid1" Storyboard.TargetProperty="(FrameworkElement.Height)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="13"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="ThreeStateOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxThreeState" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid1" Storyboard.TargetProperty="(FrameworkElement.Height)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="13"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="ThreeStateOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckBoxThreeState" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid1" Storyboard.TargetProperty="(FrameworkElement.Height)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					
					<BulletDecorator Background="Transparent" x:Name="bulletDecorator">
						<BulletDecorator.Bullet>
							<Grid Width="25" Height="13" x:Name="grid" VerticalAlignment="Center">
								<Border x:Name="CheckBoxHover" Width="Auto" Height="Auto">
									<Border.Background>
										<RadialGradientBrush>
											<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
											<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
									<Grid Margin="1,1,1,1" Height="0" VerticalAlignment="Center" x:Name="grid1">
										<Border Background="{DynamicResource GlyphBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" x:Name="CheckBoxCheckIcon" Opacity="0">
											<Border Background="{DynamicResource ShineBrush}" x:Name="ChecklIconShineBorder"/>
										</Border>
										<Border Opacity="0" x:Name="CheckBoxThreeState">
											<Border.Background>
												<SolidColorBrush Color="{DynamicResource EffectGreen3}"/>
											</Border.Background>
											<Border Background="{DynamicResource ShineBrush}" x:Name="ThreeStateShineBorder"/>
										</Border>
									</Grid>
								</Border>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</BulletDecorator>
					
					<ControlTemplate.Triggers>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsChecked" Value="True" />
							<Condition Property="IsThreeState" Value="True" />
						</MultiTrigger.Conditions>
						<MultiTrigger.EnterActions>
							
							<BeginStoryboard Storyboard="{StaticResource CheckedTrue}" x:Name="CheckedTrue_BeginStoryboard1"/>
							
						</MultiTrigger.EnterActions>
						<MultiTrigger.ExitActions>
							
							<BeginStoryboard Storyboard="{StaticResource CheckedFalse}"/>
							
						</MultiTrigger.ExitActions>
					</MultiTrigger>
					<MultiTrigger>
						<MultiTrigger.Conditions>
							<Condition Property="IsChecked" Value="{x:Null}" />
							<Condition Property="IsThreeState" Value="True" />
						</MultiTrigger.Conditions>
						<MultiTrigger.EnterActions>
							
							<BeginStoryboard Storyboard="{StaticResource ThreeStateOn}" x:Name="ThreeStateOn_BeginStoryboard"/>
							
						</MultiTrigger.EnterActions>
						<MultiTrigger.ExitActions>
							
							<BeginStoryboard Storyboard="{StaticResource ThreeStateOff}" x:Name="ThreeStateOff_BeginStoryboard"/>
							
						</MultiTrigger.ExitActions>
						<Setter Property="Visibility" TargetName="CheckBoxCheckIcon" Value="Hidden"/>

					</MultiTrigger>
						<Trigger Property="IsChecked" Value="false">
							<Trigger.ExitActions>
								
								<BeginStoryboard Storyboard="{StaticResource CheckedTrue}" x:Name="CheckedTrue_BeginStoryboard"/>
								
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								
								<BeginStoryboard Storyboard="{StaticResource CheckedFalse}"/>
								
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="bulletDecorator" Value="0.35"/>
						</Trigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
	
	<Style TargetType="{x:Type RadioButton}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
		<Setter Property="Padding" Value="5,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	
	<ControlTemplate TargetType="{x:Type RadioButton}" x:Key="NuclearRadioButton">
					<ControlTemplate.Resources>
					<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RadioButtonHover" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RadioButtonHover" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RadioButtonHover" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="RadioButtonHover" Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
						<Storyboard x:Key="CheckedFalse">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMarkShine" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMarkShine" Storyboard.TargetProperty="(FrameworkElement.Width)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="CheckedTrue">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMarkShine" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(FrameworkElement.Width)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0"/>
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="9"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMarkShine" Storyboard.TargetProperty="(FrameworkElement.Width)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="9"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="PressedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
				
					<BulletDecorator Background="Transparent" x:Name="bulletDecorator">
						<BulletDecorator.Bullet>
							<Grid Width="15" Height="15" x:Name="grid">
								<Ellipse x:Name="RadioButtonHover" StrokeThickness="1">
								<Ellipse.Fill>
								<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
								</Ellipse.Fill>
																</Ellipse>
								<Ellipse x:Name="RadioButtonEllipse" StrokeThickness="1" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}"/>
								
								<Ellipse x:Name="CheckMark" Fill="{DynamicResource GlyphBrush}" Width="0" Height="9" Opacity="1"/>
								<Ellipse x:Name="CheckMarkShine" Fill="{DynamicResource ShineBrush}" Width="0" Height="9" Margin="3,3,3,3" Opacity="1"/>
							</Grid>
						</BulletDecorator.Bullet>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</BulletDecorator>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="false">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource CheckedTrue}" x:Name="CheckedTrue_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource CheckedFalse}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="bulletDecorator" Value="0.35"/>
						</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
	
	<Style x:Key="NuclearRepeatButton" d:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
		<Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				</ControlTemplate.Resources>
					<Grid x:Name="grid">
						<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
						<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
										</Border>
										</Border>
						<Border Margin="1,1,1,1" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
						<ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
						
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="true"/>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							<Setter Property="Opacity" TargetName="grid" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	
	<Style x:Key="NuclearThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NuclearThumbHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NuclearThumbHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NuclearThumbHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="NuclearThumbHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Grid" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				</ControlTemplate.Resources>
					<Grid Margin="0,0,0,0" x:Name="Grid">
						<Border x:Name="NuclearThumbBase" Background="{DynamicResource BaseBrush}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="NuclearThumbHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" Opacity="0.6" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" />
									</Border>
								</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True"/>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False"/>
						<Trigger Property="IsDragging" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
	</Style>
	
	<Style x:Key="NuclearScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid>
						<Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<Style TargetType="{x:Type ScrollBar}">
		<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{TemplateBinding Background}">
						<Grid.RowDefinitions>
							<RowDefinition MaxHeight="18"/>
							<RowDefinition Height="0.00001*"/>
							<RowDefinition MaxHeight="18"/>
						</Grid.RowDefinitions>
						
						<Border Grid.RowSpan="4">
							<Border.Background>
								<LinearGradientBrush EndPoint="0.86,0.506" StartPoint="0.007,0.506">
									<GradientStop Color="#FF000000" Offset="0"/>
									<GradientStop Color="#FF3F3F3F" Offset="1"/>
									<GradientStop Color="#FF0F0F0F" Offset="0.353"/>
									<GradientStop Color="#FF1E1E1E" Offset="0.475"/>
									<GradientStop Color="#FF303030" Offset="0.735"/>
								</LinearGradientBrush>
							</Border.Background>
						</Border>
						
						<RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand">
							<Grid>
								<Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" Fill="#FFFFFFFF"/>
							</Grid>
						</RepeatButton>
						
						<Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
							<Track.Thumb>
								<Thumb Style="{DynamicResource NuclearThumbStyle}"/>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand"/>
							</Track.DecreaseRepeatButton>
						</Track>
						
						<RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand">
							<Grid>
								<Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" Fill="#FFFFFFFF"/>
							</Grid>
						</RepeatButton>
					</Grid>
					
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="GridRoot" Value="0.3"/>
						</Trigger>
						<Trigger Property="Orientation" Value="Horizontal">

							<Setter Property="LayoutTransform" TargetName="GridRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
							
							<Setter TargetName="PART_Track" Property="Orientation" Value="Vertical"/>
					
							<Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat"/>
							<Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat"/>
							<Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown"/>
							<Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
	</Style>
	
	<Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						<ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}"/>
						
						<ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar"   Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar"/>
						<ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar"   Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type ListBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Grid>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
						<ScrollViewer Margin="1"   Focusable="false" Background="{TemplateBinding Background}">
							
							<StackPanel Margin="2" IsItemsHost="true"/>
							
						</ScrollViewer>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	
	<Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.8000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:03.5000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedHoverOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemSelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedHoverOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListBoxItemSelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
					</ControlTemplate.Resources>
					<Grid SnapsToDevicePixels="true" Margin="0,2,0,2">
						<Border x:Name="ListBoxItemBaseBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border x:Name="ListBoxItemHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
						</Border>
						<Border x:Name="ListBoxItemSelectedBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ListBoxItemSelectedShineBorder"/>
						</Border>
						<Border x:Name="ListBoxItemSelectedHoverBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ListBoxItemSelectedHoverShineBorder"/>
						</Border>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,3,0,3"/>
					</Grid>
					<ControlTemplate.Triggers>
						
						<MultiTrigger>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelected" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						
						<MultiTrigger>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelected" Value="False"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						
						<Trigger Property="IsSelected" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
	</Style>
	
    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFBFBFBF" Offset="0.5" />
        <GradientStop Color="#FF878787" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F8FE" Offset="0" />
        <GradientStop Color="#FFE0F3FE" Offset="0.3" />
        <GradientStop Color="#FF6FA7C5" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDCF0FA" Offset="0" />
        <GradientStop Color="#FFC5E6F7" Offset="0.2" />
        <GradientStop Color="#FF5690D0" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>

							</ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
                        <Grid SnapsToDevicePixels="False" Background="Transparent" x:Name="ExpanderDownRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" Background="{DynamicResource BaseBrush}" x:Name="ComboBoxToggleMainButton" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
									<Border x:Name="ComboBoxToggleButtonHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ComboBoxToggleButtonShineBorder" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
			</Border>
			</Border>
                            <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" >
                            	<Path.Fill>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Path.Fill>
                            </Path>
                            <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Data="M 0 4 L 4 0 L 8 4 Z" >
                            	<Path.Fill>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Path.Fill>
                            </Path>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                        	<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</Trigger.EnterActions>
                            

                        </Trigger>
                    	<Trigger Property="IsPressed" Value="true">
<Trigger.EnterActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
</Trigger.EnterActions>
<Trigger.ExitActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
</Trigger.ExitActions>

                    	</Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" >
                        <Grid SnapsToDevicePixels="False" Background="Transparent" x:Name="ExpanderDownRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border Grid.Column="0" Background="{DynamicResource BaseBrush}" x:Name="ComboBoxToggleMainButton" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
									<Border x:Name="ComboBoxToggleButtonHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ComboBoxToggleButtonShineBorder" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
			</Border>
			</Border>
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center"  Data="M 0 0 L 4 4 L 8 0 Z" >
								                            	<Path.Fill>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Path.Fill>
                            </Path>
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Data="M 0 4 L 4 0 L 8 4 Z" >
								                            	<Path.Fill>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Path.Fill>
                            </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,4,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                       <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />

                        </Trigger>
                    	<Trigger Property="IsMouseOver" Value="true">
                    		<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</Trigger.EnterActions>
                            
                    	</Trigger>
                    	<Trigger Property="IsPressed" Value="true">
<Trigger.EnterActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
</Trigger.EnterActions>
<Trigger.ExitActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
</Trigger.ExitActions>

                    	</Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" BorderThickness="1,1,1,1" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent"  x:Name="ExpanderDownRoot">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="19" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border Grid.Column="0" Background="{DynamicResource BaseBrush}" x:Name="ComboBoxToggleMainButton" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
									<Border x:Name="ComboBoxToggleButtonHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ComboBoxToggleButtonShineBorder" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
			</Border>
			</Border>
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Fill="{DynamicResource TextBrush}" Data="M 0 4 L 4 0 L 8 4 Z" />
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                   <ControlTemplate.Triggers>
                       <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />

                        </Trigger>
                    	<Trigger Property="IsMouseOver" Value="true">
                    		<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</Trigger.EnterActions>
                            
                    	</Trigger>
                    	<Trigger Property="IsPressed" Value="true">
<Trigger.EnterActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
</Trigger.EnterActions>
<Trigger.ExitActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
</Trigger.ExitActions>

                    	</Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
         <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpanderDownRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
                    <Border Padding="{TemplateBinding Padding}" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" >
                        <Grid SnapsToDevicePixels="False" Background="Transparent" x:Name="ExpanderDownRoot">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid>
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Border Grid.Column="0" Background="{DynamicResource BaseBrush}" x:Name="ComboBoxToggleMainButton" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
									<Border x:Name="ComboBoxToggleButtonHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ComboBoxToggleButtonShineBorder" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
			</Border>
			</Border>
                                <Path HorizontalAlignment="Center" x:Name="Up_Arrow" VerticalAlignment="Center"  Data="M 0 0 L 4 4 L 8 0 Z" >
								                            	<Path.Fill>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Path.Fill>
                            </Path>
                                <Path Visibility="Collapsed" HorizontalAlignment="Center" x:Name="Down_Arrow" VerticalAlignment="Center" Data="M 0 4 L 4 0 L 8 4 Z" >
								                            	<Path.Fill>
                            		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                            	</Path.Fill>
                            </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,4,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                       <Trigger Property="IsChecked" Value="true">

                            <Setter Property="Visibility" TargetName="Down_Arrow" Value="Visible" />
                            <Setter Property="Visibility" TargetName="Up_Arrow" Value="Collapsed" />

                        </Trigger>
                    	<Trigger Property="IsMouseOver" Value="true">
                    		<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</Trigger.EnterActions>
                            
                    	</Trigger>
                    	<Trigger Property="IsPressed" Value="true">
<Trigger.EnterActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOn}" />
</Trigger.EnterActions>
<Trigger.ExitActions>
	<BeginStoryboard Storyboard="{StaticResource PressedOff}" />
</Trigger.ExitActions>

                    	</Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                        <DockPanel>
                            <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" />
                            <Border Visibility="Collapsed" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" x:Name="border" Margin="1,1,1,1">
                                <ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,5,5,5" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                            </Border>
                        </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="border" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down" />
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Opacity" TargetName="HeaderSite" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0300000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleMainButton" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0300000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleMainButton" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0300000" Value="0,1,0,-1"/>
									</ThicknessAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Duration="00:00:00.0010000" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,1,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleMainButton" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleButtonRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxToggleMainButton" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.2000000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
		<Grid x:Name="ComboBoxToggleButtonRoot">
			<Grid.ColumnDefinitions>
				<ColumnDefinition/>
				<ColumnDefinition Width="25"/>
			</Grid.ColumnDefinitions>
			<Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="{DynamicResource ControlBackgroundBrush}" Stroke="{DynamicResource NormalBorderBrush}"/>
			<Border Grid.Column="1" Background="{DynamicResource BaseBrush}" x:Name="ComboBoxToggleMainButton" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1">
			<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ComboBoxToggleButtonHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ComboBoxToggleButtonShineBorder" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
			</Border>
			</Border>
			<Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5">
			<Path.Stroke>
					<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
				</Path.Stroke>
			</Path>
			
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Trigger.ExitActions>
					<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
				</Trigger.ExitActions>
				<Trigger.EnterActions>
					<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
				</Trigger.EnterActions>
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" TargetName="ComboBoxToggleButtonRoot" Value="0.3"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	
	
	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
	</ControlTemplate>
	
	
	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	
	<ControlTemplate TargetType="{x:Type ComboBox}" x:Key="NuclearComboBox">
					<Grid>
						<ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}"/>
						<ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>
						
						<TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>
						
						<Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
							<Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
								<Border x:Name="DropDownBorder" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1"/>
                    <ScrollViewer x:Name="DropDownScrollViewer"  Margin="4,6,4,6" >
                        <Grid>
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>

                </Grid>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>						
						<Trigger Property="HasItems" Value="false">
							<Setter Property="MinHeight" Value="95" TargetName="DropDownBorder"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
							<Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder"/>
						</Trigger>
						<Trigger Property="IsEditable" Value="true">
							<Setter Property="IsTabStop" Value="false"/>
							<Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox"/>
							<Setter Property="Visibility" Value="Hidden" TargetName="ContentSite"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
	
	<Style d:IsControlPart="True" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
				<ControlTemplate.Resources>
				<Storyboard x:Key="HighlightOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HighlightOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ComboBoxItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				</ControlTemplate.Resources>
					<Grid SnapsToDevicePixels="true" Margin="0,2,0,2">
						<Border x:Name="ComboBoxBoxItemBaseBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border x:Name="ComboBoxItemShineBorder" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}" />
						</Border>
						<Border x:Name="ComboBoxItemSelectedBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ComboBoxItemSelectedShineBorder"/>
						</Border>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,2,0,2"/>
					</Grid>
					<ControlTemplate.Triggers>
					
						<Trigger Property="IsHighlighted" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HighlightOff}" x:Name="HighlightOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HighlightOn}"/>
							</Trigger.EnterActions>
							
						</Trigger>
						
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
	</Style>
	
	<Style TargetType="{x:Type ProgressBar}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Indeterminate">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.55"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.56"/>
							</DoubleAnimationUsingKeyFrames>
							
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.0"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.5"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.55"/>
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" RepeatBehavior="Forever">
								<SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.56"/>
							</DoubleAnimationUsingKeyFrames>
							
						</Storyboard>
						
						<Storyboard x:Key="ValueChangedOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"  >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)"  >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)"  >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
							
							<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)"  >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)"  >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)"  >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>

                        </Storyboard>
						
					</ControlTemplate.Resources>
					<Grid x:Name="Background">
					
						<Border x:Name="PART_Track" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1">
						<Border.LayoutTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.LayoutTransform>
							</Border>
						<Grid x:Name="PART_Indicator" HorizontalAlignment="Left">
						<Border x:Name="border"  Background="{DynamicResource GlyphBrush}" BorderThickness="1" Margin="1,1,1,1">
							<Border.LayoutTransform>
								<TransformGroup>
									<ScaleTransform/>
									<SkewTransform/>
									<RotateTransform/>
									<TranslateTransform/>
								</TransformGroup>
							</Border.LayoutTransform>
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource GlyphBrushBottomGradient}"/>
							</Border.BorderBrush>
								<Border Background="{DynamicResource ShineBrush}">
							</Border>
						</Border>
						<Border x:Name="ValueChangedBorder" BorderThickness="1" >
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.996,0.5" StartPoint="0.005,0.5">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#00000000" Offset="0.48"/>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="{DynamicResource WhiteColor}" Offset="0"/>
                                        <GradientStop Color="#00F9F9F9" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
							<Border x:Name="ValueChangedBorder_Vertical" Visibility="Hidden" BorderThickness="1" >
                                <Border.OpacityMask>
                                    <LinearGradientBrush EndPoint="0.5,0.129" StartPoint="0.501,0.856">
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                        <GradientStop Color="#00000000" Offset="0.48"/>
                                    </LinearGradientBrush>
                                </Border.OpacityMask>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.936,0.5" StartPoint="0.096,0.5">
                                        <GradientStop Color="{DynamicResource WhiteColor}" Offset="0"/>
                                        <GradientStop Color="#00F9F9F9" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
						<Rectangle Fill="#FFB6D7FF" Stroke="{x:Null}" StrokeThickness="0" x:Name="IndeterminateBorder" Margin="2">
									<Rectangle.OpacityMask>
										<LinearGradientBrush EndPoint="1,0.5" StartPoint="0.0,0.5">
											<GradientStop Color="#00000000" Offset="-0.99"/>
											<GradientStop Color="#4D000000" Offset="-0.99"/>
											<GradientStop Color="#FF000000" Offset="-0.99"/>
											<GradientStop Color="#00000000" Offset="-0.99"/>
										</LinearGradientBrush>
									</Rectangle.OpacityMask>
						</Rectangle>
						<Rectangle Fill="#FFB6D7FF" Stroke="{x:Null}" StrokeThickness="0" x:Name="IndeterminateBorder_Vertical" Visibility="Hidden" Margin="2">
									<Rectangle.OpacityMask>
										<LinearGradientBrush EndPoint="0.5,-0.444" StartPoint="0.5,1.444">
											<GradientStop Color="#00000000" Offset="-0.99"/>
											<GradientStop Color="#4D000000" Offset="-0.99"/>
											<GradientStop Color="#FF000000" Offset="-0.99"/>
											<GradientStop Color="#00000000" Offset="-0.99"/>
										</LinearGradientBrush>
									</Rectangle.OpacityMask>
						</Rectangle>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
					<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="LayoutTransform" TargetName="Background">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="PART_Track">
									<Setter.Value>
										<RotateTransform Angle="90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="PART_Indicator">
									<Setter.Value>
										<RotateTransform Angle="90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="border">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="-90"/>
											<TranslateTransform/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
								<Setter Property="Background" TargetName="PART_Track">
									<Setter.Value>
										<LinearGradientBrush EndPoint="0.838,0.5" StartPoint="0.2,0.5">
											<GradientStop Color="Black" Offset="0"/>
											<GradientStop Color="#FF3F3F3F" Offset="1"/>
											<GradientStop Color="#FF0F0F0F" Offset="0.353"/>
											<GradientStop Color="#FF1E1E1E" Offset="0.475"/>
											<GradientStop Color="#FF303030" Offset="0.735"/>
										</LinearGradientBrush>
									</Setter.Value>
								</Setter>
								<Setter Property="Visibility" TargetName="IndeterminateBorder_Vertical" Value="Visible"/>
								<Setter Property="Visibility" TargetName="IndeterminateBorder" Value="Hidden"/>
								<Setter Property="Visibility" TargetName="ValueChangedBorder_Vertical" Value="Visible"/>
								<Setter Property="Visibility" TargetName="ValueChangedBorder" Value="Hidden"/>
							</Trigger>
						<MultiTrigger>
							<MultiTrigger.ExitActions>
								<ResumeStoryboard BeginStoryboardName="Indeterminate_BeginStoryboard"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<PauseStoryboard BeginStoryboardName="Indeterminate_BeginStoryboard"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.Conditions>
								<Condition Property="IsEnabled" Value="False"/>
								<Condition Property="IsIndeterminate" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Opacity" TargetName="Background" Value="0.5"/>
						</MultiTrigger>
						<Trigger Property="IsIndeterminate" Value="True">
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Indeterminate_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource Indeterminate}" x:Name="Indeterminate_BeginStoryboard"/>
							</Trigger.EnterActions>
							<Setter Property="Fill" TargetName="IndeterminateBorder" Value="#FFC8FF8A"/>
							<Setter Property="Fill" TargetName="IndeterminateBorder_Vertical" Value="#FFC8FF8A"/>
							<Setter Property="Background" TargetName="PART_Indicator" Value="{DynamicResource ButtonBaseGreen}"/>
						</Trigger>
						<EventTrigger RoutedEvent="RangeBase.ValueChanged">
                            <BeginStoryboard Storyboard="{StaticResource ValueChangedOn}" />
                        </EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type TextBox}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
	</Style>
	
	<ControlTemplate TargetType="{x:Type TextBox}" x:Key="NuclearTextBox">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid">
						<Border x:Name="HoverBorder" Background="{x:Null}" BorderThickness="1" Padding="2" Margin="-1,-1,-1,-1" Opacity="0">
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource Effect3}"/>
							</Border.BorderBrush>
						</Border>
						<Border x:Name="FocusedBorder" Background="{x:Null}" BorderThickness="1" Padding="2" Margin="-2,-2,-2,-2" Opacity="0">
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource Effect3}"/>
							</Border.BorderBrush>
						</Border>
						<Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" Padding="2"/>
							
						<ScrollViewer x:Name="PART_ContentHost"   Background="{TemplateBinding Background}" Margin="1,1,1,1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsFocused" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</MultiTrigger.EnterActions>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							<Setter Property="Opacity" TargetName="grid" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
	
		<Style TargetType="{x:Type PasswordBox}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="HoverOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HoverOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusedOn">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="FocusedOff">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid x:Name="grid">
						<Border x:Name="HoverBorder" Background="{x:Null}" BorderThickness="1" Padding="2" Margin="-1,-1,-1,-1" Opacity="0">
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource Effect3}"/>
							</Border.BorderBrush>
						</Border>
						<Border x:Name="FocusedBorder" Background="{x:Null}" BorderThickness="1" Padding="2" Margin="-2,-2,-2,-2" Opacity="0">
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource Effect3}"/>
							</Border.BorderBrush>
						</Border>
						<Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" Padding="2"/>
							
						<ScrollViewer x:Name="PART_ContentHost"   Background="{TemplateBinding Background}" Margin="1,1,1,1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource FocusedOff}" x:Name="FocusedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource FocusedOn}" x:Name="FocusedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsFocused" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</MultiTrigger.EnterActions>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
							<Setter Property="Opacity" TargetName="grid" Value="0.3"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	
	<Style TargetType="{x:Type Label}">
		<Setter Property="HorizontalContentAlignment" Value="Left"/>
		<Setter Property="VerticalContentAlignment" Value="Top"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Grid>
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Grid>
						<Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
						<StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="SnapsToDevicePixels" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Grid>
						<Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border"/>
							<Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	<DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15"/>
	
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:02.5000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
					</ControlTemplate.Resources>
					<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1">
					<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
						<Grid>
							
							<Grid.ColumnDefinitions>
								<ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup"/>
								<ColumnDefinition Width="*"/>
                                <ColumnDefinition x:Name="columnDefinition" Width="37"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup"/>
								<ColumnDefinition Width="14"/>
							</Grid.ColumnDefinitions>
							
							<ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon"/>
							
							<Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
								<Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
							</Grid>
							
							<ContentPresenter Grid.Column="1" Margin="{TemplateBinding Padding}" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header"/>
							<TextBlock Margin="{TemplateBinding Padding}" Grid.Column="3" Text="{TemplateBinding InputGestureText}"/>							
							<Grid Grid.Column="4" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
								<Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
							</Grid>
							
							<Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
								<Grid x:Name="SubMenu">
									<Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
									
									<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
								</Grid>
							</Popup>
							
						</Grid>
					</Border>
					
					<ControlTemplate.Triggers>
					
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Margin" Value="0,1,0,1"/>
							<Setter Property="Padding" Value="6,3,6,3"/>
							<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
							<Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
						</Trigger>
						
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Margin" Value="0,1,0,1"/>
							<Setter Property="Padding" Value="6,3,6,3"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
						</Trigger>
						
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Grid.IsSharedSizeScope" Value="true"/>
						</Trigger>
						
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
						</Trigger>
						
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>
						
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>
						
						<Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
							<Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu"/>
							<Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu"/>
							<Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder"/>
						</Trigger>
						
						<Trigger Property="IsHighlighted" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1"/>
		<Setter Property="Margin" Value="0,2,0,2"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="3,0,0,-4">
                    		<TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                    			<TabPanel.LayoutTransform>
                    				<TransformGroup>
                    					<ScaleTransform ScaleX="1" ScaleY="1" />
                    					<SkewTransform AngleX="0" AngleY="0" />
                    					<RotateTransform Angle="0" />
                    					<TranslateTransform X="0" Y="0" />
                    				</TransformGroup>
                    			</TabPanel.LayoutTransform>
                    			<TabPanel.RenderTransform>
                    				<TransformGroup>
                    					<ScaleTransform ScaleX="1" ScaleY="1" />
                    					<SkewTransform AngleX="0" AngleY="0" />
                    					<RotateTransform />
                    					<TranslateTransform X="0" Y="0" />
                    				</TransformGroup>
                    			</TabPanel.RenderTransform>

                    		</TabPanel>
                    	</Border>
                    	<Border Grid.Row="1" x:Name="ContentPanel" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,0,1,1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2">
							<ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
						</Border>
                    	<Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" BorderThickness="0,0,0,1" CornerRadius="10,0,0,0" Opacity="0.5" Margin="2,0,2,0" x:Name="border1">
                    		<Border.LayoutTransform>
                    			<TransformGroup>
                    				<ScaleTransform ScaleX="1" ScaleY="1"/>
                    				<SkewTransform AngleX="0" AngleY="0"/>
                    				<RotateTransform Angle="0"/>
                    				<TranslateTransform X="0" Y="0"/>
                    			</TransformGroup>
                    		</Border.LayoutTransform>
                    		<Border.BorderBrush>
                    			<SolidColorBrush Color="{DynamicResource BlackColor}"/>
                    		</Border.BorderBrush>
                    	</Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0"/>
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0"/>
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0"/>
                            <Setter Property="LayoutTransform" TargetName="border1">
                            	<Setter.Value>
                            		<TransformGroup>
                            			<ScaleTransform ScaleX="1" ScaleY="1"/>
                            			<SkewTransform AngleX="0" AngleY="0"/>
                            			<RotateTransform Angle="-90"/>
                            			<TranslateTransform X="0" Y="0"/>
                            		</TransformGroup>
                            	</Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="border1" Value="0,0,0,0"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1"/>
                            <Setter Property="LayoutTransform" TargetName="border1">
                            	<Setter.Value>
                            		<TransformGroup>
                            			<ScaleTransform ScaleX="1" ScaleY="1"/>
                            			<SkewTransform AngleX="0" AngleY="0"/>
                            			<RotateTransform Angle="90"/>
                            			<TranslateTransform X="0" Y="0"/>
                            		</TransformGroup>
                            	</Setter.Value>
                            </Setter>
                            <Setter Property="Grid.Column" TargetName="border1" Value="1"/>
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2"/>
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabItemHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabItemHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabItemHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabItemHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabItemSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlossyBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TabItemSelected" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlossyBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.3"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
				</ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                    	<Grid.LayoutTransform>
                    		<TransformGroup>
                    			<ScaleTransform ScaleX="1" ScaleY="1"/>
                    			<SkewTransform AngleX="0" AngleY="0"/>
                    			<RotateTransform Angle="0"/>
                    			<TranslateTransform X="0" Y="0"/>
                    		</TransformGroup>
                    	</Grid.LayoutTransform>
                        <Grid>
						<Border x:Name="Border" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1,1,1,0" Opacity="1"/>
						<Border x:Name="TabItemHover" Width="Auto" Height="Auto" Margin="1,1,1,1">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
						</Border>
						<Border x:Name="TabItemSelected" Width="Auto" Height="Auto" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
						</Border>
						<Border x:Name="TabItemSelectedHover" Width="Auto" Height="Auto" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
						</Border>
						<Border x:Name="GlossyBorder" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1,1,1,0" Opacity="0.3">
							<Border.Background>
								<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
							</Border.Background>
						</Border>
						<ContentPresenter HorizontalAlignment="Stretch" x:Name="ContentSite" VerticalAlignment="Stretch" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Height" Margin="12,3,12,3"/>
					</Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                            	<Setter.Value>
                            		<TransformGroup>
                            			<ScaleTransform ScaleX="1" ScaleY="1"/>
                            			<SkewTransform AngleX="0" AngleY="0"/>
                            			<RotateTransform Angle="180"/>
                            			<TranslateTransform X="0" Y="0"/>
                            		</TransformGroup>
                            	</Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                        	<MultiTrigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</MultiTrigger.ExitActions>
                        	<MultiTrigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                        	<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                        	</Trigger.EnterActions>
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        	<Setter Property="Opacity" TargetName="TabItemSelectedHover" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="grid" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
	
	<Style x:Key="NuclearSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="Height" Value="25"/>
		<Setter Property="Width" Value="25"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
										<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0300000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0300000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00" Value="0,-2,0,0"/>
										<SplineThicknessKeyFrame KeyTime="00:00:00.0300000" Value="0,0,0,-4"/>
										<SplineThicknessKeyFrame KeyTime="00:00:00.1000000" Value="0,0,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,-2,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
					<Grid x:Name="ButtonRoot" Margin="0,-2,0,0">
					<Border x:Name="BottomBorderSliderThumb">
						<Border.Background>
							<SolidColorBrush Color="{DynamicResource BlackColor}"/>
						</Border.Background>
					</Border>
						<Border x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
							<Border.Effect>
								<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
							</Border.Effect>
							<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
								<Border.Background>
									<RadialGradientBrush>
										<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
										<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
									</RadialGradientBrush>
								</Border.Background>
								<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}"/>
							</Border>
						</Border>
						<Border Margin="1,1,1,1" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
							<Path Fill="#FFFFFFFF" Stretch="Fill" Width="2" Data="M9.4915254,10.898305 L9.4915254,23.529973" Opacity="0.4" StrokeThickness="2" IsHitTestVisible="False" Height="10" Margin="0,0,0,0">
								<Path.Stroke>
									<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
								</Path.Stroke>
							</Path>
							<Path Fill="#FFFFFFFF" Stretch="Fill" Data="M9.4915254,10.898305 L9.4915254,23.529973" Width="2" Opacity="0.4" StrokeThickness="2" IsHitTestVisible="False" Height="10" Margin="1,0,0,0">
								<Path.Stroke>
									<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
								</Path.Stroke>
							</Path>
							<Path Fill="#FFFFFFFF" Stretch="Fill" Data="M9.4915254,10.898305 L9.4915254,23.529973" Opacity="0.4" StrokeThickness="2" Width="2" IsHitTestVisible="False" Height="10" Margin="1,0,0,0">
								<Path.Stroke>
									<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
								</Path.Stroke>
							</Path>
						</StackPanel>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsDragging" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false"/>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="{x:Type Slider}">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<Grid x:Name="GridRoot">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
							<RowDefinition Height="Auto"/>
						</Grid.RowDefinitions>
						
						<TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}"/>
						<Border Grid.Row="1" Margin="0" x:Name="Border" Height="13" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
						
						<Track Grid.Row="1" x:Name="PART_Track">
							<Track.Thumb>
								<Thumb Style="{DynamicResource NuclearSliderThumb}" Width="18" Height="18" RenderTransformOrigin="0.5,0.5" x:Name="thumb">
									<Thumb.RenderTransform>
										<TransformGroup>
											<ScaleTransform ScaleX="1" ScaleY="1"/>
											<SkewTransform AngleX="0" AngleY="0"/>
											<RotateTransform Angle="0"/>
											<TranslateTransform X="0" Y="0"/>
										</TransformGroup>
									</Thumb.RenderTransform>
								</Thumb>
							</Track.Thumb>
							<Track.IncreaseRepeatButton>
								<RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge"/>
							</Track.IncreaseRepeatButton>
							<Track.DecreaseRepeatButton>
								<RepeatButton Style="{DynamicResource SliderDecreaseRepeatButton}" Command="Slider.DecreaseLarge" Background="{DynamicResource GlyphBrush}" Height="12">
									<RepeatButton.BorderBrush>
										<SolidColorBrush Color="{DynamicResource GlyphBrushBottomGradient}"/>
									</RepeatButton.BorderBrush>
								</RepeatButton>
							</Track.DecreaseRepeatButton>
						</Track>
						
						<TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="TickPlacement" Value="TopLeft">
							<Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="BottomRight">
							<Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
						</Trigger>
						<Trigger Property="TickPlacement" Value="Both">
							<Setter Property="Visibility" Value="Visible" TargetName="TopTick"/>
							<Setter Property="Visibility" Value="Visible" TargetName="BottomTick"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="GridRoot" Value="0.3"/>
						</Trigger>
						
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="LayoutTransform" TargetName="GridRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal"/>
							<Setter Property="RenderTransform" TargetName="thumb">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1"/>
										<SkewTransform AngleX="0" AngleY="0"/>
										<RotateTransform/>
										<TranslateTransform X="0" Y="0"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
						
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
	</Style>
	
	<Style TargetType="{x:Type TreeView}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Grid>
						<Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="1">
							<ScrollViewer   Focusable="False" Background="{TemplateBinding Background}" Padding="4" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="False">
								<ItemsPresenter/>
							</ScrollViewer>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
	</Style>
	
	<Style x:Key="NuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Grid Width="15" Height="13" Background="Transparent">
						<Path Visibility="Collapsed" HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="IsExpandedPath" VerticalAlignment="Center" Data="M 0 4 L 8 4 L 4 8 Z">
							<Path.Fill>
								<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
							</Path.Fill>
						</Path>
						<Path HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="ExpandPath" VerticalAlignment="Center" Data="M 4 0 L 8 4 L 4 8 Z">
							<Path.Fill>
								<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
							</Path.Fill>
						</Path>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Visibility" Value="Visible" TargetName="IsExpandedPath"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ExpandPath"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="1,0,0,0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
								<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedHoverOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemSelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedHoverOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="TreeViewItemSelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition MinWidth="19" Width="Auto"/>
							<ColumnDefinition Width="Auto"/>
							<ColumnDefinition Width="*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
						<Grid Grid.Column="1" Margin="2,2,2,2">
						<Border x:Name="TreeViewItemBaseBorder" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border x:Name="TreeViewItemHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
						</Border>
						<Border x:Name="TreeViewItemSelectedBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ListBoxItemSelectedShineBorder"/>
						</Border>
						<Border x:Name="TreeViewItemSelectedHoverBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ListBoxItemSelectedHoverShineBorder"/>
						</Border>
						</Grid>
						
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header" Grid.Column="1" Margin="5,3,5,3"/>

						<ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost"/>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" SourceName="PART_Header"/>
								<Condition Property="IsSelected" Value="False"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard"/>
							</MultiTrigger.ExitActions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="IsMouseOver" Value="True"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" Value="Hidden" TargetName="Expander"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
							</Trigger.EnterActions>
							<Setter Property="BorderBrush" TargetName="TreeViewItemBaseBorder" Value="{DynamicResource NormalBorderBrush}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true"/>
								<Condition Property="IsSelectionActive" Value="false"/>
							</MultiTrigger.Conditions>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="Foreground">
			<Setter.Value>
				<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
			</Setter.Value>
		</Setter>
	</Style>
	

	
	<LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#FFFFFF" Offset="0"/>
		<GradientStop Color="#FFFBFF" Offset="0.5"/>
		<GradientStop Color="#F7F7F7" Offset="1"/>
	</LinearGradientBrush>
	<LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
		<GradientStop Color="#ECECEC" Offset="0"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#A0A0A0" Offset="1"/>
	</LinearGradientBrush>
	<SolidColorBrush x:Key="ToolBarButtonHover" Color="#ffcc00" />
	<SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6"/>
	<Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border SnapsToDevicePixels="true" x:Name="Bd" CornerRadius="0,0,0,0" Background="{DynamicResource DefaultedBorderBrush}">
						<Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
							<Path Stroke="#FF999999" Data="M 0 0.5 L 5 0.5"/>
							<Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="#FF999999"/>
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource ControlBackgroundBrush}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFFDFDFD"/>
		<SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFFFFFFF"/>
	<Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="0,0,0,0">
						<Rectangle Opacity="0.15">
							<Rectangle.Fill>
								<DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
									<DrawingBrush.Drawing>
										<DrawingGroup>
											<GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
											<GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
										</DrawingGroup>
									</DrawingBrush.Drawing>
								</DrawingBrush>
							</Rectangle.Fill>
						</Rectangle>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Cursor" Value="SizeAll"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
		<GradientStop Color="#ECECEC" Offset="0"/>
		<GradientStop Color="#DDDDDD" Offset="0.5"/>
		<GradientStop Color="#A0A0A0" Offset="1"/>
	</LinearGradientBrush>
	<Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
						<Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
							<Path Stroke="White" Data="M 1.5 1 L 1.5 6"/>
							<Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5"/>
							<Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z"/>
							<Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z"/>
						</Canvas>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsKeyboardFocused" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
		<GradientStop Color="#FFFFFF" Offset="0"/>
		<GradientStop Color="#FFFBFF" Offset="0.5"/>
		<GradientStop Color="#F7F7F7" Offset="1"/>
	</LinearGradientBrush>
	<Style TargetType="{x:Type ToolBar}">
		<Setter Property="Background" Value="{StaticResource DefaultedBorderBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToolBar}">
					<Grid SnapsToDevicePixels="true" Margin="3,1,1,1" x:Name="Grid" MinHeight="28">
						<Grid HorizontalAlignment="Right" x:Name="OverflowGrid">
							<ToggleButton IsEnabled="{TemplateBinding HasOverflowItems}" FocusVisualStyle="{x:Null}" x:Name="OverflowButton" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
							<Popup Focusable="false" AllowsTransparency="true" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="Fade" StaysOpen="False" x:Name="OverflowPopup">
								<Border x:Name="Shdw">
									<Border BorderThickness="1,1,1,1" Background="{DynamicResource ControlBackgroundBrush}" BorderBrush="{DynamicResource DefaultedBorderBrush}">
										<ToolBarOverflowPanel Focusable="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" Margin="2" x:Name="PART_ToolBarOverflowPanel" WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle"/>
									</Border>
								</Border>
							</Popup>
						</Grid>
						<Border Margin="0,0,11,0" x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" Padding="{TemplateBinding Padding}" Background="{DynamicResource DefaultedBorderBrush}">
							<Grid>
						
								<DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
									<Thumb Padding="6,5,1,6" Margin="-3,-1,0,0" x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
									<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" VerticalAlignment="Center" ContentSource="Header"/>
									<ToolBarPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,1,2,2" x:Name="PART_ToolBarPanel" IsItemsHost="true"/>
								</DockPanel>
							</Grid>	
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOverflowOpen" Value="true">
							<Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
						</Trigger>
						<Trigger Property="Header" Value="{x:Null}">
							<Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="ToolBarTray.IsLocked" Value="true">
							<Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
							<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
							<Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
							<Setter Property="Background" TargetName="Shdw" Value="#71000000"/>
						</Trigger>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
							<Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
							<Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
							<Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
							<Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
							<Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
							<Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
							<Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
							<Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
							<Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
							<Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
							<Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
							<Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
							<Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Foreground" Value="#FF000000"/>
	</Style> 
	
	<Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}">
		<Setter Property="Template" Value="{DynamicResource NuclearButton}" />
				<Setter Property="Foreground" Value="#FFFFFFFF"/>
				<Setter Property="FontSize" Value="10"/>
				<Setter Property="MinHeight" Value="18"/>
				<Setter Property="MinWidth" Value="50"/>
	</Style>
	
	<Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
		<Setter Property="SnapsToDevicePixels" Value="true"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
		<Setter Property="Padding" Value="5,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
	</Style>
	
	<Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="FontSize" Value="10"/>
		<Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Template" Value="{DynamicResource NuclearCheckBox}"/>
		<Setter Property="Padding" Value="5,0,0,0"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
	</Style>
	
	<Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
	</Style>
	
	<Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="FontSize" Value="10"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>

		<Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
	</Style>
	
	    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="4" Background="{DynamicResource ControlBackgroundBrush}" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" />
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource MainColor}" />
                                </Border.BorderBrush>
                                <Border BorderThickness="{TemplateBinding BorderThickness}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource MainColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Border>
                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}" Grid.RowSpan="2" Grid.ColumnSpan="4">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
                            </Border.Effect>
                            <Border x:Name="ButtonHover" Width="Auto" Height="Auto">
                                <Border.Background>
                                    <RadialGradientBrush>
                                        <GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
                                        <GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.Background>
                                <Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
                            </Border>
                        </Border>
                        <Rectangle Opacity="1" Stroke="{x:Null}" VerticalAlignment="Stretch" Height="Auto" x:Name="Shine" Grid.ColumnSpan="4" Grid.RowSpan="2" Margin="1,1,1,1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.971" StartPoint="0.5,0.042">
                                    <GradientStop Color="#26FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#26FFFFFF" Offset="0.467" />
                                    <GradientStop Color="#00FFFFFF" Offset="0.475" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>

                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,0,2,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" />

                            </ScrollViewer>
                            <ScrollContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
                            <Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" Fill="White" DockPanel.Dock="Left" />
                            <Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Height="1" Fill="White" DockPanel.Dock="Top" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
		<Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">

                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
		<Setter Property="Background" Value="{DynamicResource BaseBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.8000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemHoverBorder" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:03.5000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemSelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedHoverOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemSelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="SelectedHoverOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ListViewItemSelectedHoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
									</DoubleAnimationUsingKeyFrames>
								</Storyboard>
					</ControlTemplate.Resources>

                        <Grid Margin="2,0,2,0">
						<Border x:Name="ListViewItemBaseBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Border x:Name="ListViewItemHoverBorder" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
						</Border>
						<Border x:Name="ListViewItemSelectedBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ListBoxItemSelectedShineBorder"/>
						</Border>
						<Border x:Name="ListViewItemSelectedHoverBorder" Background="{DynamicResource GlyphBrush}" Opacity="0">
							<Border Background="{DynamicResource ShineBrush}" x:Name="ListViewItemSelectedHoverShineBorder"/>
						</Border>
                            <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,2,0,2" VerticalAlignment="Stretch" />
                        </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                        	<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource SelectedOff}" x:Name="SelectedOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource SelectedOn}" x:Name="SelectedOn_BeginStoryboard"/>
                        	</Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                        	<MultiTrigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</MultiTrigger.ExitActions>
                        	<MultiTrigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
                        	</MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                        	<MultiTrigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource SelectedHoverOff}" x:Name="SelectedHoverOff_BeginStoryboard"/>
                        	</MultiTrigger.ExitActions>
                        	<MultiTrigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource SelectedHoverOn}" x:Name="SelectedHoverOn_BeginStoryboard"/>
                        	</MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                       
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
        	<Setter.Value>
        		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
        	</Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="#00FFFFFF">
                        <Rectangle HorizontalAlignment="Center" Width="0.5">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground" >
        	<Setter.Value>
        		<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
        	</Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
				<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.0500000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.0500000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0200000" Value="0,2,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ColumnHeaderBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
                    <Grid Margin="0,1,0,1">
                        <Grid x:Name="Base">
						<Border x:Name="ColumnHeaderBase" Background="{DynamicResource BaseBrush}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ColumnHeaderHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ColumnHeaderShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
								</Border>
								<Border Margin="1,1,1,1" x:Name="ColumnHeaderGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<Border IsHitTestVisible="False" Opacity="0.3">
									<Border.Background>
										<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
									</Border.Background>
								</Border>

                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />

                        </Grid>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" HorizontalAlignment="Stretch" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                        	<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                        	<Trigger.ExitActions>
                        		<BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                        	</Trigger.ExitActions>
                        	<Trigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                        	</Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	

	
	<Style BasedOn="{x:Null}" TargetType="{x:Type ToggleButton}">
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="MouseOver">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="MouseOut">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="MouseDown">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0300000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0300000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0300000" Value="0,2,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="MouseUp">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>

              
							</ControlTemplate.Resources>
							<Grid x:Name="ButtonRoot">
								<Border x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}">
											<Border.OpacityMask>
												<RadialGradientBrush>
													<RadialGradientBrush.RelativeTransform>
														<TransformGroup>
															<ScaleTransform ScaleX="1" ScaleY="1"/>
															<SkewTransform AngleX="0" AngleY="0"/>
															<RotateTransform Angle="0"/>
															<TranslateTransform X="0" Y="-0.5"/>
														</TransformGroup>
													</RadialGradientBrush.RelativeTransform>
													<GradientStop Color="#FF000000" Offset="0"/>
													<GradientStop Color="#33FFFFFF" Offset="1"/>
												</RadialGradientBrush>
											</Border.OpacityMask>
											<Border.Background>
												<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
													<GradientStop Color="#BFFFFFFF" Offset="0"/>
													<GradientStop Color="#59FFFFFF" Offset="0.35"/>
													<GradientStop Color="#00FFFFFF" Offset="0.36"/>
												</LinearGradientBrush>
											</Border.Background>
										</Border>
									</Border>
								</Border>
								<Border Margin="1,1,1,0" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter x:Name="ButtonContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource MouseUp}" x:Name="MouseUp_BeginStoryboard1"/>
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource MouseDown}" x:Name="MouseDown_BeginStoryboard1"/>
									</Trigger.EnterActions>
								</Trigger>
								<Trigger Property="IsFocused" Value="True"/>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="True"/>
										<Condition Property="IsChecked" Value="False"/>
									</MultiTrigger.Conditions>
									<MultiTrigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource MouseOver}"/>
									</MultiTrigger.EnterActions>
									<MultiTrigger.ExitActions>
										<BeginStoryboard x:Name="MouseOut_BeginStoryboard" Storyboard="{StaticResource MouseOut}"/>
									</MultiTrigger.ExitActions>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.ExitActions>
									</MultiTrigger.ExitActions>
									<MultiTrigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource MouseOver}"/>
									</MultiTrigger.EnterActions>
									<MultiTrigger.Conditions>
										<Condition Property="IsChecked" Value="True"/>
										<Condition Property="IsMouseOver" Value="True"/>
									</MultiTrigger.Conditions>
								</MultiTrigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Effect" TargetName="ButtonBase">
										<Setter.Value>
											<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.2" ShadowDepth="3"/>
										</Setter.Value>
									</Setter>
									<Setter Property="Opacity" TargetName="ButtonBase" Value="0.35"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground" Value="#FFFFFFFF"/>
			</Style>
	<Style x:Key="SliderDecreaseRepeatButton" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="Focusable" Value="false"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Grid Height="12">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,0,1" />
						<Rectangle Fill="{DynamicResource ShineBrush}" Stroke="{x:Null}"/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


<Style TargetType="{x:Type Button}" x:Key="ButtonRed" BasedOn="{x:Null}">
		<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource EffectRed3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource EffectRed2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource EffectRed4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource EffectRed2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource EffectRed1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0200000" Value="0,2,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
							<Grid x:Name="ButtonRoot">
								<Border x:Name="ButtonBase" Background="{DynamicResource ButtonBaseRed}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource EffectRed2}" Offset="0"/>
												<GradientStop Color="{DynamicResource EffectRed1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
								</Border>
								<Border Margin="1,1,1,1" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter x:Name="ButtonContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Effect" TargetName="ButtonBase">
										<Setter.Value>
											<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.2" ShadowDepth="3"/>
										</Setter.Value>
									</Setter>
									<Setter Property="Opacity" TargetName="ButtonBase" Value="0.35"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground" Value="#FFFFFFFF"/>
	</Style>

	

<Style TargetType="{x:Type Button}" x:Key="ButtonGreen" BasedOn="{x:Null}">
		<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource Effect2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource Effect4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource Effect1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0200000" Value="0,2,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.200000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
							<Grid x:Name="ButtonRoot">
								<Border x:Name="ButtonBase" Background="{DynamicResource ButtonBaseGreen}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource EffectGreen2}" Offset="0"/>
												<GradientStop Color="{DynamicResource EffectGreen1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
								</Border>
								<Border Margin="1,1,1,1" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter x:Name="ButtonContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Effect" TargetName="ButtonBase">
										<Setter.Value>
											<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.2" ShadowDepth="3"/>
										</Setter.Value>
									</Setter>
									<Setter Property="Opacity" TargetName="ButtonBase" Value="0.35"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground" Value="#FFFFFFFF"/>
	</Style>

<Style x:Key="ButtonBlue" TargetType="{x:Type Button}" BasedOn="{x:Null}">
		<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type Button}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="HoverOn">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource EffectGreen3}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="{StaticResource EffectGreen2}"/>
										<SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="{StaticResource EffectGreen4}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="HoverOff">
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource EffectGreen2}"/>
									</ColorAnimationUsingKeyFrames>
									<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonHover" Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
										<SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="{StaticResource EffectGreen1}"/>
									</ColorAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOn">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="0.6"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.0200000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.0200000" Value="0,2,0,-2"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
								<Storyboard x:Key="PressedOff">
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Effect).(DropShadowEffect.ShadowDepth)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="3"/>
									</DoubleAnimationUsingKeyFrames>
									<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
										<SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
									</DoubleAnimationUsingKeyFrames>
									<ThicknessAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonRoot" Storyboard.TargetProperty="(FrameworkElement.Margin)">
										<SplineThicknessKeyFrame KeyTime="00:00:00.100000" Value="0,0,0,0"/>
									</ThicknessAnimationUsingKeyFrames>
								</Storyboard>
							</ControlTemplate.Resources>
							<Grid x:Name="ButtonRoot">
								<Border x:Name="ButtonBase" Background="{DynamicResource ButtonBaseBlue}" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
									<Border.Effect>
										<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.6" ShadowDepth="3"/>
									</Border.Effect>
									<Border x:Name="ButtonHover" Width="Auto" Height="Auto">
										<Border.Background>
											<RadialGradientBrush>
												<GradientStop Color="{DynamicResource Effect2}" Offset="0"/>
												<GradientStop Color="{DynamicResource Effect1}" Offset="1"/>
											</RadialGradientBrush>
										</Border.Background>
										<Border x:Name="ButtonShine" BorderBrush="{x:Null}" Background="{DynamicResource ShineBrush}" OpacityMask="{DynamicResource ShineOpacity}"/>
									</Border>
								</Border>
								<Border Margin="1,1,1,1" x:Name="ButtonGlow">
									<Border.Background>
										<RadialGradientBrush>
											<RadialGradientBrush.RelativeTransform>
												<TransformGroup>
													<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="1.26" ScaleY="1"/>
													<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
													<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
													<TranslateTransform X="0" Y="0.631"/>
												</TransformGroup>
											</RadialGradientBrush.RelativeTransform>
											<GradientStop Color="#88FFFFFF" Offset="0"/>
											<GradientStop Color="#00FFFFFF" Offset="1"/>
										</RadialGradientBrush>
									</Border.Background>
								</Border>
								<ContentPresenter x:Name="ButtonContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True"/>
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsFocused" Value="True"/>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource HoverOn}" x:Name="HoverOn_BeginStoryboard"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsPressed" Value="True">
									<Trigger.EnterActions>
										<BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
									</Trigger.EnterActions>
									<Trigger.ExitActions>
										<BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
									</Trigger.ExitActions>
								</Trigger>
								<Trigger Property="IsEnabled" Value="False">
									<Setter Property="Effect" TargetName="ButtonBase">
										<Setter.Value>
											<DropShadowEffect BlurRadius="7" Direction="270" Opacity="0.2" ShadowDepth="3"/>
										</Setter.Value>
									</Setter>
									<Setter Property="Opacity" TargetName="ButtonBase" Value="0.35"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
				<Setter Property="Foreground" Value="#FFFFFFFF"/>
	</Style>
	
</ResourceDictionary>
