<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
 xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero" 
 mc:Ignorable="d">

    <!--
  REUXABLES THEMES
  
  Copyright (C) 2007-2010 Nukeation Studios. All rights reserved.
  
  This file is protected by the End-User License Agreement provided at:
  http://reuxables.nukeation.com/files/license.txt
  
  THIS FILE MUST BE COMPILED WITH YOUR EXECUTABLE / ASSEMBLY BEFORE BEING DISTRIBUTED
  THIS NOTICE MUST REMAIN INTACT. DO NOT REMOVE!
  -->


    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>
    <Color x:Key="ScrollBarButtonBorderColor">#FFB6BABF</Color>

    <SolidColorBrush x:Key="WhiteBrush" Color="{DynamicResource WhiteColor}" />

    <LinearGradientBrush x:Key="NormalBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFF8F8F9" Offset="1" />
        <GradientStop Color="#FFF8F8F9" Offset="0.332" />
        <GradientStop Color="#FFF1F2F4" Offset="0.341" />
        <GradientStop Color="#FFF1F2F4" Offset="0.349" />
        <GradientStop Color="#FFE8EAEC" Offset="0.358" />
        <GradientStop Color="#FFF3F4F5" Offset="0.75" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="NormalBorderBrush" Color="#FF828790" />

    <SolidColorBrush x:Key="MouseOverBorderBrush" Color="#FFCBAB52" />

    <LinearGradientBrush x:Key="MouseOverBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFFFDE1" Offset="0" />
        <GradientStop Color="#FFFFE7A0" Offset="1" />
        <GradientStop Color="#FFFFE8A5" Offset="0.332" />
        <GradientStop Color="#FFFFE18B" Offset="0.341" />
        <GradientStop Color="#FFFFE18B" Offset="0.349" />
        <GradientStop Color="#FFFFD768" Offset="0.358" />
        <GradientStop Color="#FFFFE394" Offset="0.75" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PressedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFFBC67" Offset="0" />
        <GradientStop Color="#FFFFD6A3" Offset="1" />
        <GradientStop Color="#FFFFAB41" Offset="0.332" />
        <GradientStop Color="#FFFD9E3F" Offset="0.341" />
        <GradientStop Color="#FFFD9E3F" Offset="0.349" />
        <GradientStop Color="#FFFB9143" Offset="0.358" />
        <GradientStop Color="#FFFECB95" Offset="0.75" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="PressedBorderBrush" Color="#FFB29648" />


    <LinearGradientBrush x:Key="LightBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF" Offset="0.0" />
        <GradientStop Color="#EEE" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />

    <LinearGradientBrush x:Key="ListItemHoverBrush" EndPoint="0.5,0.907" StartPoint="0.5,0.103">
        <GradientStop Color="#FFFDEEB3" Offset="0" />
        <GradientStop Color="#FFFDFAE0" Offset="1" />
        <GradientStop Color="#FFFDE38A" Offset="0.306" />
        <GradientStop Color="#FFFDEAA1" Offset="0.707" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="FocusedBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFE6E8EB" Offset="0" />
        <GradientStop Color="#FFDCDFE3" Offset="1" />
        <GradientStop Color="#FFDDE0E3" Offset="0.332" />
        <GradientStop Color="#FFD4D7DB" Offset="0.341" />
        <GradientStop Color="#FFD4D7DB" Offset="0.349" />
        <GradientStop Color="#FFC7CBD1" Offset="0.358" />
        <GradientStop Color="#FFD7DBDE" Offset="0.75" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SelectedListItemBorderBrush" EndPoint="0.5,0.932" StartPoint="0.5,0.083">
        <GradientStop Color="#FFC2762B" Offset="0" />
        <GradientStop Color="#FFC29E47" Offset="1" />
        <GradientStop Color="#FFC28838" Offset="0.478" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ListItemSelectedBackgroundBrush" EndPoint="0.5,0.902" StartPoint="0.5,0.134">
        <GradientStop Color="#FFFFE575" Offset="0" />
        <GradientStop Color="#FFFEE287" Offset="1" />
        <GradientStop Color="#FFFFE48A" Offset="0.086" />
        <GradientStop Color="#FFFFE48A" Offset="0.435" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ListItemSelectedInsiderBorderBrush" Color="#FFF8D172" />



    <LinearGradientBrush x:Key="ScrollBarButtonBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
        <GradientStop Color="#FFF2F3F3" Offset="0" />
        <GradientStop Color="#FFF1F1F1" Offset="0.668" />
        <GradientStop Color="#FFE6E7E8" Offset="1" />
        <GradientStop Color="#FFE7E8E9" Offset="0.677" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarButtonBorderBrush" Color="{DynamicResource ScrollBarButtonBorderColor}" />
    <LinearGradientBrush x:Key="ScrollBarButtonHoverBrush" EndPoint="0.971,0.51" StartPoint="0.016,0.51">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFFBFBFB" Offset="0.668" />
        <GradientStop Color="#FFF8F8F9" Offset="1" />
        <GradientStop Color="#FFF5F6F7" Offset="0.677" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ScrollBarPressedBrush" Color="#FFE1E2E3" />


    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="#FFD4D6D9"/>
    <SolidColorBrush x:Key="TextBoxBorderHoverBrush" Color="#FFBBBFC4"/>


    <LinearGradientBrush x:Key="ComboBoxToggleBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFEFEFE" Offset="0" />
        <GradientStop Color="#FFF4F6F7" Offset="1" />
        <GradientStop Color="#FFF8F8FA" Offset="0.75" />
        <GradientStop Color="#FFFBFBFC" Offset="0.194" />
        <GradientStop Color="#FFFBFBFB" Offset="0.478" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <LinearGradientBrush x:Key="WindowBackgroundBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE4E4E5" Offset="0" />
        <GradientStop Color="#FFEBEEF1" Offset="1" />
    </LinearGradientBrush>


    <LinearGradientBrush x:Key="DefaultedBorderBrush" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#777" Offset="0.0" />
        <GradientStop Color="#000" Offset="1.0" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="SolidBorderBrush" Color="#888" />
    <SolidColorBrush x:Key="LightBorderBrush" Color="#AAA" />
    <SolidColorBrush x:Key="LightColorBrush" Color="#DDD" />

    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource BlackColor}" />

    <SolidColorBrush x:Key="GlyphBrush" Color="#444" />


    <Style x:Key="DropShadowGrid" TargetType="{x:Type Grid}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
    </Style>

    <Style x:Key="DropShadowBorder" TargetType="{x:Type Border}">
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="#FFDADADA" />
    </Style>

    <Style x:Key="NuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Template" Value="{DynamicResource NuclearButton}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
        <Setter Property="BorderBrush" Value="#FFBBBFC4"/>
    </Style>

    <ControlTemplate x:Key="NuclearButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Grid x:Name="Grid">
            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3" >
                <Border.Background>


                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFF7FAFC" Offset="0" />
                        <GradientStop Color="#FFE7EAEE" Offset="1" />
                        <GradientStop Color="#FFF5F7FA" Offset="0.332" />
                        <GradientStop Color="#FFECEFF2" Offset="0.741" />
                        <GradientStop Color="#FFE8EBEF" Offset="0.875" />
                    </LinearGradientBrush>

                </Border.Background>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                    </Border.BorderBrush>
                </Border>
            </Border>
            <Border x:Name="PressedBorder" BorderThickness="1" CornerRadius="3" Opacity="0" BorderBrush="{DynamicResource PressedBorderBrush3}">
                <Border BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource PressedBorderBrushInner3}" Background="{DynamicResource PressedBrush3}"/>
            </Border>

            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true" />
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ScrollViewer Margin="1" Focusable="false" Background="{TemplateBinding Background}">

                            <StackPanel Margin="2" IsItemsHost="true" />

                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




    <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
                            <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" />
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IndeterminateOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)" RepeatBehavior="Forever" >
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>

                        </Storyboard>

                        <Storyboard x:Key="ValueChangedOn" >
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>

                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="sc#0, 0, 0, 0"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.2000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid x:Name="grid">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform/>
                                <SkewTransform/>
                                <RotateTransform/>
                                <TranslateTransform/>
                            </TransformGroup>
                        </Grid.LayoutTransform>

                        <Border BorderThickness="1" Margin="-1" CornerRadius="2" BorderBrush="#4CFFFFFF" />

                        <Border x:Name="PART_Track" BorderBrush="Silver" BorderThickness="1" CornerRadius="1">
                            <Border.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.LayoutTransform>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,0.974" StartPoint="0.5,0.031">
                                    <GradientStop Color="#FFC6CBD5" Offset="0" />
                                    <GradientStop Color="#FFE0E4ED" Offset="1" />
                                    <GradientStop Color="#FFCED2DC" Offset="0.142" />
                                    <GradientStop Color="#FFD5D9E3" Offset="0.293" />
                                    <GradientStop Color="#FFE0E4ED" Offset="0.629" />
                                    <GradientStop Color="#FFDBE0E9" Offset="0.444" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <Border HorizontalAlignment="Left" x:Name="PART_Indicator" BorderThickness="0,0,1,0" CornerRadius="0" Margin="1,1,1.5,1">
                            <Border.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Border.LayoutTransform>

                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFC4D4AE" Offset="0" />
                                    <GradientStop Color="#FFD8EBB7" Offset="1" />
                                    <GradientStop Color="#FFFBFFF5" Offset="0.341" />
                                    <GradientStop Color="#FFF7FBF0" Offset="0.724" />
                                    <GradientStop Color="White" Offset="0.534" />
                                    <GradientStop Color="#FFE7F2D4" Offset="0.845" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.954,0.503" StartPoint="0.054,0.502">
                                    <GradientStop Color="#FF659120" Offset="0" />
                                    <GradientStop Color="#FFCCE49F" Offset="1" />
                                    <GradientStop Color="#FF6DA51E" Offset="0.25" />
                                    <GradientStop Color="#FF84C421" Offset="0.478" />
                                    <GradientStop Color="#FF90CC33" Offset="0.659" />
                                    <GradientStop Color="#FFB4DB72" Offset="0.799" />
                                    <GradientStop Color="#FFC0E08B" Offset="0.845" />
                                    <GradientStop Color="#FFC6E296" Offset="0.897" />
                                    <GradientStop Color="#FFCCE49F" Offset="0.944" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Grid>
                                <Border x:Name="border" BorderThickness="0,1,0,0" Margin="0,0,-1,-1" BorderBrush="#7FFFFFFF">
                                    <Border.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.LayoutTransform>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#33FFFFFF" Offset="0" />
                                            <GradientStop Offset="1" />
                                            <GradientStop Color="#66FFFFFF" Offset="0.401" />
                                            <GradientStop Color="#4CFFFFFF" Offset="0.103" />
                                            <GradientStop Color="#66FFFFFF" Offset="0.22" />
                                            <GradientStop Color="#7FFFFFFF" Offset="0.332" />
                                            <GradientStop Offset="0.422" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border BorderBrush="#14000000" BorderThickness="0,0,1,0" Margin="0,0,-2,0">
                                        <Border Margin="0,0,-2,0" BorderBrush="#11000000" BorderThickness="0,0,1,0">
                                            <Border Margin="0,0,-2,0" BorderBrush="#0F000000" BorderThickness="0,0,1,0" />
                                        </Border>
                                    </Border>
                                </Border>
                                <Border x:Name="IndeterminateBorder" Margin="0,0,1,0" >
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.996,0.5" StartPoint="0.005,0.5">
                                            <GradientStop Color="#00000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#00000000" Offset="0.48"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource WhiteColor}" Offset="0"/>
                                            <GradientStop Color="#00F9F9F9" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border CornerRadius="2,2,2,2" x:Name="ValueChangedBorder" Margin="0,0,1,0">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.996,0.5" StartPoint="0.005,0.5">
                                            <GradientStop Color="#00000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#00000000" Offset="0.48"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                                    </Border.Background>
                                </Border>
                                <Border x:Name="IndeterminateBorder_Vertical" Visibility="Visible" Margin="0,0,1,0" >
                                    <Border.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.LayoutTransform>
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,-0.408" StartPoint="0.5,1.408">
                                            <GradientStop Color="#00000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#00000000" Offset="0.48"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.773,0.5" StartPoint="0.227,0.5">
                                            <GradientStop Color="{DynamicResource WhiteColor}" Offset="0"/>
                                            <GradientStop Color="#00F9F9F9" Offset="1"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border CornerRadius="2,2,2,2" x:Name="ValueChangedBorder_Vertical" Visibility="Collapsed" Margin="0,0,1,0">
                                    <Border.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Border.LayoutTransform>
                                    <Border.OpacityMask>
                                        <LinearGradientBrush EndPoint="0.5,-0.408" StartPoint="0.5,1.408">
                                            <GradientStop Color="#00000000" Offset="0"/>
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#00000000" Offset="0.48"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                                    </Border.Background>
                                </Border>
                            </Grid>
                        </Border>

                        <Grid x:Name="IndeterminateRoot" Visibility="Collapsed">
                            <Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="IndeterminateSolidFill" Opacity="1" RenderTransformOrigin="0.5,0.5" RadiusX="2" RadiusY="2" Stroke="#FF448DCA" StrokeThickness="0"/>
                            <Rectangle Margin="{TemplateBinding BorderThickness}" x:Name="IndeterminateGradientFill" Opacity="0.7" RadiusX="2" RadiusY="2" StrokeThickness="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="20,1" MappingMode="Absolute" SpreadMethod="Repeat">
                                        <LinearGradientBrush.Transform>
                                            <TransformGroup>
                                                <TranslateTransform X="0"/>
                                                <SkewTransform AngleX="0"/>
                                            </TransformGroup>
                                        </LinearGradientBrush.Transform>
                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                        <GradientStop Color="#00FFFFFF" Offset=".25"/>
                                        <GradientStop Color="#FFFFFFFF" Offset="0.85"/>
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="RangeBase.ValueChanged">
                            <BeginStoryboard Storyboard="{StaticResource ValueChangedOn}" />
                        </EventTrigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Visibility" TargetName="IndeterminateBorder_Vertical" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ValueChangedBorder_Vertical" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="IndeterminateBorder" Value="Hidden"/>
                            <Setter Property="Visibility" TargetName="ValueChangedBorder" Value="Hidden"/>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_Track">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_Indicator">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="PART_Indicator">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="0.504,0.274" StartPoint="0.504,0.731">
                                        <GradientStop Color="#FF659120" Offset="0"/>
                                        <GradientStop Color="#FFCCE49F" Offset="1"/>
                                        <GradientStop Color="#FF6DA51E" Offset="0.25"/>
                                        <GradientStop Color="#FF84C421" Offset="0.478"/>
                                        <GradientStop Color="#FF90CC33" Offset="0.659"/>
                                        <GradientStop Color="#FFB4DB72" Offset="0.799"/>
                                        <GradientStop Color="#FFC0E08B" Offset="0.845"/>
                                        <GradientStop Color="#FFC6E296" Offset="0.897"/>
                                        <GradientStop Color="#FFCCE49F" Offset="0.944"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderBrush" TargetName="PART_Indicator">
                                <Setter.Value>
                                    <LinearGradientBrush EndPoint="1.484,0.5" StartPoint="-0.484,0.5">
                                        <GradientStop Color="#FFC4D4AE" Offset="0"/>
                                        <GradientStop Color="#FFD8EBB7" Offset="1"/>
                                        <GradientStop Color="#FFFBFFF5" Offset="0.341"/>
                                        <GradientStop Color="#FFF7FBF0" Offset="0.724"/>
                                        <GradientStop Color="White" Offset="0.534"/>
                                        <GradientStop Color="#FFE7F2D4" Offset="0.845"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="PART_Indicator" Value="0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NuclearRepeatButton" d:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonBrush}" />
                        <Border x:Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0" />
                        <Border x:Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border" />
                            <Setter Property="Opacity" TargetName="PressedBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid Margin="0,0,0,0" x:Name="Grid">
                        <Border BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" Background="{DynamicResource ScrollBarButtonBrush}" CornerRadius="1" />
                        <Border x:Name="HoverBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarButtonHoverBrush}" Opacity="0" />
                        <Border x:Name="PressedBorder" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ScrollBarPressedBrush}" Opacity="0" />
                        <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                            <Path Fill="{DynamicResource ScrollBarButtonBrush}" Stretch="Fill" Stroke="{DynamicResource ScrollBarButtonBorderBrush}" Margin="2.912,1,2.76,0" Data="M3.9115646,6.462585 L12.244898,6.462585" Height="1" />
                        </StackPanel>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" />
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Opacity" TargetName="PressedBorder" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                        <Grid.RowDefinitions>
                            <RowDefinition MaxHeight="18" />
                            <RowDefinition Height="0.00001*" />
                            <RowDefinition MaxHeight="18" />
                        </Grid.RowDefinitions>

                        <Border BorderBrush="{x:Null}" Grid.ColumnSpan="11" Grid.RowSpan="3" CornerRadius="1">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1.016,0.5" StartPoint="0.017,0.5">
                                    <GradientStop Color="#FFEBEDEF" Offset="0" />
                                    <GradientStop Color="#FFD8DADC" Offset="1" />
                                    <GradientStop Color="#FFF4F4F4" Offset="0.047" />
                                    <GradientStop Color="WhiteSmoke" Offset="0.086" />
                                    <GradientStop Color="#FFFCFCFC" Offset="0.802" />
                                    <GradientStop Color="#FFEBEDEF" Offset="0.897" />
                                    <GradientStop Color="#FFF1F3F5" Offset="0.931" />
                                    <GradientStop Color="#FFE8EAEC" Offset="0.966" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand">
                            <Grid>
                                <Path x:Name="DecreaseArrow" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </RepeatButton>

                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand">
                            <Grid>
                                <Path x:Name="IncreaseArrow" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z">
                                    <Path.Fill>
                                        <SolidColorBrush Color="{DynamicResource BlackColor}" />
                                    </Path.Fill>
                                </Path>
                            </Grid>
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">

                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />

                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="12" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Path x:Name="path" Fill="{DynamicResource NormalBrush}" Stretch="Fill" Stroke="{DynamicResource NormalBorderBrush}" StrokeThickness="1" Margin="-0.06,0.312,0.112,0.446" VerticalAlignment="Stretch" Height="Auto" Data="M0.041776327,0.31279057 L18.887959,0.34013605 18.75703,11.243745 8.8410569,18.553436 -0.05962883,11.176062 z" />
                        <Path x:Name="path_Copy" Fill="{x:Null}" Stretch="Fill" StrokeThickness="1" Margin="1" VerticalAlignment="Stretch" Height="Auto" Data="M0.041776327,0.31279057 L18.887959,0.34013605 18.75703,11.243745 8.8410569,18.553436 -0.05962883,11.176062 z">
                            <Path.Stroke>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Path.Stroke>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource PressedBrush}" />
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" TargetName="path" Value="{DynamicResource ListItemHoverBrush}" />
                            <Setter Property="Stroke" TargetName="path" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" />
                        <Border Grid.Row="1" Margin="0" x:Name="Border" Height="3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black" Offset="0" />
                                    <GradientStop Color="#FFCCCCCC" Offset="1" />
                                    <GradientStop Color="Black" Offset="0.509" />
                                    <GradientStop Color="#FFCCCCCC" Offset="0.517" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearSliderThumb}" Margin="0,2,0,0" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="NormalBorderBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD6D8D9" Offset="0" />
        <GradientStop Color="#FFA1A2A4" Offset="1" />
        <GradientStop Color="#FFCCCDCE" Offset="0.733" />
        <GradientStop Color="#FFD7D8D9" Offset="0.254" />
    </LinearGradientBrush>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Stroke="{DynamicResource NormalBorderBrushExtSimple}" Fill="{DynamicResource ComboBoxToggleBg}" />
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle_Copy" VerticalAlignment="Stretch" Width="Auto" Height="Auto" RadiusX="3" RadiusY="3" Fill="{x:Null}" Margin="1">
                <Rectangle.Stroke>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Rectangle.Stroke>
            </Rectangle>
            <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemHoverBrush}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource SelectedListItemBorderBrush}" />
                <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource ListItemSelectedBackgroundBrush}" />
                <Setter Property="Stroke" TargetName="Rectangle_Copy" Value="{DynamicResource ListItemSelectedInsiderBorderBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" />
                <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>



    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Grid>
            <Border x:Name="PART_ContentHost"  Focusable="False" Background="{TemplateBinding Background}" Margin="0,2,0,0" />
            <Border x:Name="border" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" BorderThickness="1" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" TargetName="border" Value="1"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="19.8"></Setter>
        <Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
    </Style>
    <LinearGradientBrush x:Key="PressedBorderBrush3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFC2762B" Offset="0"/>
        <GradientStop Color="#FFC29E47" Offset="1"/>
        <GradientStop Color="#FFC28031" Offset="0.315"/>
        <GradientStop Color="#FFC29440" Offset="0.728"/>
        <GradientStop Color="#FFC29A44" Offset="0.853"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBrush3" EndPoint="0.5,1.021" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFBD678" Offset="0"/>
        <GradientStop Color="#FFFEE287" Offset="1"/>
        <GradientStop Color="#FFFEE287" Offset="0.138"/>
        <GradientStop Color="#FFFFE48A" Offset="0.241"/>
        <GradientStop Color="#FFFFE48A" Offset="0.879"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PressedBorderBrushInner3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF6C867" Offset="0"/>
        <GradientStop Color="#FFFAD77A" Offset="1"/>
        <GradientStop Color="#FFF8D172" Offset="0.323"/>
        <GradientStop Color="#FFF8D172" Offset="0.716"/>
        <GradientStop Color="#FFF6CC6C" Offset="0.866"/>
    </LinearGradientBrush>
    <ControlTemplate x:Key="EditableTextComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="16" />
            </Grid.ColumnDefinitions>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="Rectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource TextBoxBorderBrush}" >
                <Rectangle.Fill>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                </Rectangle.Fill>
            </Rectangle>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="HoverRectangle" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="{x:Null}" Stroke="{DynamicResource TextBoxBorderHoverBrush}" Opacity="0"/>
            <Rectangle Grid.ColumnSpan="2" HorizontalAlignment="Stretch" x:Name="ButtonHover" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0" />
            <Rectangle Grid.ColumnSpan="1" HorizontalAlignment="Stretch" x:Name="ButtonHoverInner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{x:Null}" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="2" Opacity="0" />
            <Rectangle Grid.ColumnSpan="1" HorizontalAlignment="Stretch" x:Name="ButtonPressed" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1" d:LayoutOverrides="GridBox" />
            <Rectangle Grid.ColumnSpan="1" HorizontalAlignment="Stretch" x:Name="ButtonPressednner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" d:LayoutOverrides="GridBox" Margin="1" />
            <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="Arrow" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Opacity" TargetName="HoverRectangle" Value="1"/>
                <Setter Property="Opacity" TargetName="ButtonHover" Value="1"/>
                <Setter Property="Opacity" TargetName="ButtonHoverInner" Value="1"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter Property="Opacity" TargetName="ButtonPressed" Value="1"/>
                <Setter Property="Opacity" TargetName="ButtonPressednner" Value="1"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Rectangle" />
                <Setter Property="Stroke" Value="{DynamicResource DisabledBorderBrush}" TargetName="Rectangle" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Fill" Value="{DynamicResource DisabledForegroundBrush}" TargetName="Arrow" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="NuclearComboBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
            <ContentPresenter HorizontalAlignment="Left" Margin="10,2,20,2" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />

            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Stretch" Margin="0,0,16,0" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Stretch" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" />

            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource WhiteBrush}" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" CornerRadius="2" />
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">

                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />

                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                <Setter Property="Margin" Value="0,1,0,0" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                <Setter Property="Template" TargetName="ToggleButton" Value="{DynamicResource EditableTextComboBoxToggleButton}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style d:IsControlPart="True" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="TabControlTopBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFE5E9EE" Offset="1"/>
        <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
        <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
        <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
        <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlBottomBrush" EndPoint="0.5,0" StartPoint="0.5,1">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFE5E9EE" Offset="1"/>
        <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
        <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
        <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
        <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlLeftBrush" EndPoint="0.979,0.5" StartPoint="-0.006,0.5">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFE5E9EE" Offset="1"/>
        <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
        <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
        <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
        <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="TabControlRightBrush" EndPoint="0.007,0.5" StartPoint="0.992,0.5">
        <GradientStop Color="White" Offset="0"/>
        <GradientStop Color="#FFE5E9EE" Offset="1"/>
        <GradientStop Color="#FFFEFEFE" Offset="0.517"/>
        <GradientStop Color="#FFF4F5F6" Offset="0.759"/>
        <GradientStop Color="#FFEFF1F3" Offset="0.884"/>
        <GradientStop Color="#FFFCFCFC" Offset="0.642"/>
    </LinearGradientBrush>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="3,0,0,-4" Panel.ZIndex="100">
                            <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>

                            </TabPanel>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="3,-3,0,0"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,-3,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0" />
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="-3,0,0,-4"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                        <GradientStop Offset="0.892" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                            <GradientStop Offset="1" Color="White" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                            <GradientStop Offset="0.927" Color="White" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>

                                </Border>
                            </Border>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" Margin="12,4" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="HoverBorder" Value="0,0,0,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" x:Key="WhiteTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                        <GradientStop Offset="0.892" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                            <GradientStop Offset="1" Color="White" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                            <GradientStop Offset="0.927" Color="White" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>

                                </Border>
                            </Border>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" Margin="12,4" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="HoverBorder" Value="0,0,0,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="BlueBorderBrush" Color="#FF1F48A1"/>
    <Color x:Key="BlueSpreadColor">#FF388BE4</Color>
    <SolidColorBrush x:Key="BlueSpreadBrush" Color="{StaticResource BlueSpreadColor}"/>
    <SolidColorBrush x:Key="GreenBorderBrush" Color="#FF186337"/>
    <SolidColorBrush x:Key="MagentaBorderBrush" Color="#FF571D70"/>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Height" Value="19.8"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
        <Setter Property="SelectionBrush" Value="{DynamicResource BlueSpreadBrush}"/>
    </Style>

    <ControlTemplate x:Key="NuclearTextBox" TargetType="{x:Type TextBox}">
        <Grid>
            <Border x:Name="Border" BorderThickness="1" Padding="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Border.Background>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" />
            <Border x:Name="DisabledBorder" BorderThickness="1" Padding="2" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" />



            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="Height" Value="19.8"></Setter>
        <Setter Property="Padding" Value="0"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearPasswordBox}" />
    </Style>

    <ControlTemplate x:Key="NuclearPasswordBox" TargetType="{x:Type PasswordBox}">
        <Grid>
            <Border x:Name="Border" BorderThickness="1" Padding="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                </Border.Background>
            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" />



            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type RichTextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RichTextBox}">
                    <Grid>
                        <Border x:Name="Border" BorderThickness="1" Padding="2" CornerRadius="2" BorderBrush="{DynamicResource TextBoxBorderBrush}">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" CornerRadius="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxHoverBorderBrush}" />
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="CheckBoxBg" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFF2F3F5" Offset="0" />
        <GradientStop Color="#FFF2F3F5" Offset="1" />
        <GradientStop Color="#FFE8E9EB" Offset="0.197" />
        <GradientStop Color="#FFE8E9EB" Offset="0.522" />
        <GradientStop Color="#FFF0F1F2" Offset="0.723" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB6B8BA" Offset="0" />
        <GradientStop Color="#FFDEDFE0" Offset="1" />
        <GradientStop Color="#FFB6B8BA" Offset="0.502" />
        <GradientStop Color="#FFBEC0C2" Offset="0.518" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="CheckBoxInnerBorderHoverBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFCAD5D" Offset="0" />
        <GradientStop Color="#FFFEDEBE" Offset="1" />
        <GradientStop Color="#FFFCAD5D" Offset="0.502" />
        <GradientStop Color="#FFFCB771" Offset="0.518" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="CheckBoxHoverBorderBrush" Color="#FFD6A259" />

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
    </Style>

    <ControlTemplate x:Key="NuclearCheckBox" TargetType="{x:Type CheckBox}">

        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid Width="13" Height="13">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border x:Name="border" BorderThickness="1" Margin="1" BorderBrush="{DynamicResource CheckBoxInnerBorderBrush}" />
                    </Border>
                    <Path Stretch="Fill" Stroke="{StaticResource GlyphBrush}" StrokeThickness="2" x:Name="CheckMark" Width="Auto" Data="M-0.32455936,5.7168726 L3.1785986,10.519821 10.465148,2.9112485" Margin="1.639,2.318,2.043,2.5" />
                    <Rectangle Visibility="Hidden" Fill="{DynamicResource CheckBoxInnerBorderHoverBrush}" Stroke="#FFB36414" x:Name="ThreeState" Margin="2,2,2,2" RadiusX="1" RadiusY="1" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsThreeState" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="ThreeState" Value="Visible" />
                <Setter Property="Visibility" TargetName="CheckMark" Value="Hidden" />
            </MultiTrigger>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource GlyphBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
    </Style>

    <ControlTemplate x:Key="NuclearRadioButton" TargetType="{x:Type RadioButton}">

        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid Width="13" Height="13">
                    <Ellipse x:Name="Ellipse_Border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="1" />
                    <Ellipse x:Name="InnerBorder" StrokeThickness="1" Stroke="{DynamicResource CheckBoxInnerBorderBrush}" Margin="2" />
                    <Ellipse Margin="3" x:Name="CheckMark" Stroke="#FFAA5B0B">
                        <Ellipse.Fill>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFFFAF" Offset="0" />
                                <GradientStop Color="#FFFE9E45" Offset="1" />
                                <GradientStop Color="#FFFFE38A" Offset="0.325" />
                                <GradientStop Color="#FFFFBA61" Offset="0.663" />
                            </LinearGradientBrush>
                        </Ellipse.Fill>
                    </Ellipse>
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="false">
                <Setter Property="Visibility" Value="Collapsed" TargetName="CheckMark" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Fill" Value="{DynamicResource MouseOverBrush}" TargetName="Ellipse_Border" />
                <Setter Property="Stroke" TargetName="InnerBorder" Value="{DynamicResource CheckBoxInnerBorderHoverBrush}" />
                <Setter Property="Stroke" TargetName="Ellipse_Border" Value="{DynamicResource CheckBoxHoverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Fill" Value="{DynamicResource PressedBrush}" TargetName="Ellipse_Border" />
                <Setter Property="Stroke" Value="{DynamicResource GlyphBrush}" TargetName="Ellipse_Border" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Fill" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Ellipse_Border" />
                <Setter Property="Stroke" Value="#40000000" TargetName="Ellipse_Border" />
                <Setter Property="Foreground" Value="#80000000" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ExpanderArrowFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFBFBFBF" Offset="0.5" />
        <GradientStop Color="#FF878787" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowHoverFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFF0F8FE" Offset="0" />
        <GradientStop Color="#FFE0F3FE" Offset="0.3" />
        <GradientStop Color="#FF6FA7C5" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ExpanderArrowPressedFill" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFDCF0FA" Offset="0" />
        <GradientStop Color="#FFC5E6F7" Offset="0.2" />
        <GradientStop Color="#FF5690D0" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="SmartListBorderBrush" Color="#FFDADBDC" />
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Margin="0,0,0,0" x:Name="Rectangle" StrokeThickness="1" Grid.ColumnSpan="2" Stroke="{DynamicResource SmartListBorderBrush}" Fill="{DynamicResource TabControlBottomBrush}" />
                            <ContentPresenter x:Name="contentPresenter" SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,1,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="1" Margin="3,2,0,-0.5">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                        <GradientStop Offset="0.892" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                            <GradientStop Offset="1" Color="White" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                            <GradientStop Offset="0.927" Color="White" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid>
                                        <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHover" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                    <GradientStop Color="#CC000000" Offset="0.65" />
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHoverInner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{x:Null}" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="1" Opacity="0" RadiusX="1" RadiusY="1">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                    <GradientStop Color="#CC000000" Offset="0.65" />
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressed" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="-1" RadiusX="1" RadiusY="1">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                    <GradientStop Color="#CC000000" Offset="0.65" />
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                        <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressednner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" d:LayoutOverrides="GridBox" Margin="0" RadiusX="1" RadiusY="1">
                                            <Rectangle.OpacityMask>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="Black" Offset="0" />
                                                    <GradientStop Color="#00000000" Offset="1" />
                                                    <GradientStop Color="#CC000000" Offset="0.65" />
                                                </LinearGradientBrush>
                                            </Rectangle.OpacityMask>
                                        </Rectangle>
                                    </Grid>

                                </Border>
                            </Border>
                            <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Grid.Column="0" Margin="3,9,0,6" Width="7.8" Height="7.7">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="path" Value="0.5" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
                            <Setter Property="Fill" TargetName="Rectangle" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Stroke" TargetName="Rectangle" Value="{DynamicResource DisabledBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="Rectangle" Value="0" />

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonHover" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonHoverInner" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonPressed" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonPressednner" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="19" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.RowSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource TabControlBottomBrush}" Stroke="{DynamicResource SmartListBorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                                <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="1" Margin="0,2,3,0" HorizontalAlignment="Right" VerticalAlignment="Top" Width="21" Height="29.5">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Offset="0" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                            <GradientStop Offset="0.892" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                                <GradientStop Offset="1" Color="White" />
                                                <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                                <GradientStop Offset="0.927" Color="White" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Grid>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHover" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHoverInner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{x:Null}" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="1" Opacity="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressed" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="-1" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressednner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" d:LayoutOverrides="GridBox" Margin="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Grid>

                                    </Border>
                                </Border>
                                <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Margin="0,5,10,6" Width="7.8" Height="7.7" Grid.Column="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,10,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="-90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="Rectangle" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonHover" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonHoverInner" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonPressed" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonPressednner" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="2,2,2,2" BorderThickness="1,1,1,1" Background="{x:Null}" BorderBrush="{x:Null}">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.ColumnSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="180" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource TabControlBottomBrush}" Stroke="{DynamicResource SmartListBorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" Opacity="1" />
                                <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="1" Margin="0,2,3,-0.5" HorizontalAlignment="Right" Width="21">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Offset="0" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                            <GradientStop Offset="0.892" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                                <GradientStop Offset="1" Color="White" />
                                                <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                                <GradientStop Offset="0.927" Color="White" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Grid>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHover" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHoverInner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{x:Null}" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="1" Opacity="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressed" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="-1" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressednner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" d:LayoutOverrides="GridBox" Margin="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Grid>

                                    </Border>
                                </Border>
                                <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Right" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Margin="0,9,10,9" Width="7.8" Height="7.7" Grid.Column="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="Rectangle" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonHover" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonHoverInner" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonPressed" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonPressednner" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Padding="{TemplateBinding Padding}" CornerRadius="2,2,2,2" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1,1,1,1">
                        <Grid SnapsToDevicePixels="False" Background="Transparent">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid Grid.RowSpan="2">
                                <Grid.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </Grid.LayoutTransform>
                                <Rectangle Margin="0,0,0,0" x:Name="Rectangle" Fill="{DynamicResource TabControlBottomBrush}" Stroke="{DynamicResource SmartListBorderBrush}" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                                <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="1" Margin="3,2,0,0" HorizontalAlignment="Left" VerticalAlignment="Top" Width="21" Height="29.5">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Offset="0" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                            <GradientStop Offset="0.892" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                        <Border.Background>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                                <GradientStop Offset="1" Color="White" />
                                                <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                                <GradientStop Offset="0.927" Color="White" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Grid>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHover" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource MouseOverBorderBrush}" Fill="{DynamicResource ComboBoxToggleBg}" Grid.Column="1" Opacity="0" Margin="-1" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonHoverInner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{x:Null}" Fill="{DynamicResource ListItemHoverBrush}" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="1" Opacity="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressed" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrush3}" Fill="{DynamicResource ComboBoxToggleBg}" Opacity="0" Grid.Column="1" d:LayoutOverrides="GridBox" Margin="-1" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                            <Rectangle HorizontalAlignment="Stretch" x:Name="ButtonPressednner" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Stroke="{DynamicResource PressedBorderBrushInner3}" Fill="{DynamicResource PressedBrush3}" Grid.Column="1" Opacity="0" d:LayoutOverrides="GridBox" Margin="0" RadiusX="1" RadiusY="1">
                                                <Rectangle.OpacityMask>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="Black" Offset="0" />
                                                        <GradientStop Color="#00000000" Offset="1" />
                                                        <GradientStop Color="#CC000000" Offset="0.65" />
                                                    </LinearGradientBrush>
                                                </Rectangle.OpacityMask>
                                            </Rectangle>
                                        </Grid>

                                    </Border>
                                </Border>
                                <Path x:Name="path" Fill="Black" Stretch="Fill" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Data="M7.1009116,7.6452084 L8.3873701,7.6452084 L6.1529946,11.504583 L8.3873701,15.363958 L7.1009116,15.363958 L4.4518228,11.504583 z M3.8339844,7.6452084 L5.0865884,7.6452084 L2.8776042,11.504583 L5.0696616,15.363958 L3.8339844,15.363958 L1.1341146,11.504583 z" Margin="10,5,0,6" Width="7.8" Height="7.7" Grid.Column="0">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="-90" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="4,4,2,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True">
                                <ContentPresenter.LayoutTransform>
                                    <TransformGroup>
                                        <TransformGroup.Children>
                                            <TransformCollection>
                                                <RotateTransform Angle="90" />
                                            </TransformCollection>
                                        </TransformGroup.Children>
                                    </TransformGroup>
                                </ContentPresenter.LayoutTransform>
                            </ContentPresenter>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="RenderTransform" TargetName="path">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="Rectangle" Value="0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonHover" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonHoverInner" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="ButtonPressed" Value="1" />
                            <Setter Property="Opacity" TargetName="ButtonPressednner" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3">
                        <DockPanel>
                            <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" Margin="1,1,1,0" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" Panel.ZIndex="100" />
                            <Border Visibility="Collapsed" Background="{DynamicResource TabControlTopBrush}" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1" CornerRadius="1" x:Name="border" Margin="1,-2,1,1">
                                <ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="border" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TabControlTopBrush}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="-4,1,0,1" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TabControlLeftBrush}" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="1,1,1,-3" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="1,1,-3,1" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource TabControlRightBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="1" Opacity="0.2" />

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="columnDefinition" Width="37"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>

                            <Border x:Name="border1" BorderBrush="#FFE2E4E7" BorderThickness="1,0,0,0" Grid.Column="1" Visibility="Collapsed">
                                <Border HorizontalAlignment="Left" VerticalAlignment="Top" Width="0" Height="0" BorderBrush="WhiteSmoke" BorderThickness="1,0,0,0" />
                            </Border>

                            <Border x:Name="border" BorderBrush="{DynamicResource MouseOverBorderBrush}" BorderThickness="1" Grid.Column="0" Grid.ColumnSpan="5" Opacity="0" Margin="2,0" Background="{DynamicResource ListItemHoverBrush}">
                                <Border BorderThickness="1">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>

                            <ContentPresenter Margin="4,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Width="16" Height="16" />

                            <Grid Visibility="Hidden" Margin="4,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Border Background="#FFFEE388" CornerRadius="2" BorderThickness="1" BorderBrush="#FFF29536">
                                    <Path Stroke="{StaticResource GlyphBrush}" VerticalAlignment="Center" StrokeThickness="2" x:Name="GlyphPanelpath" Width="Auto" Data="M1.0924787,5.372821 L3.1785986,10.519821 10.528543,2.5198207" Margin="3" />
                                </Border>
                            </Grid>

                            <ContentPresenter Grid.Column="1" Margin="2,4" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" />
                            <TextBlock Margin="{TemplateBinding Padding}" Grid.Column="3" Text="{TemplateBinding InputGestureText}"/>
                            <Grid Grid.Column="4" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                            </Grid>

                            <Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource WhiteBrush}" BorderBrush="#FFA7ABB0" BorderThickness="1">
                                        <Border BorderBrush="WhiteSmoke" BorderThickness="1" />
                                    </Border>

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,2" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="IsCheckable" Value="True" />

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Visibility" TargetName="border1" Value="Visible" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Visibility" TargetName="border1" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>
                        <Border x:Name="Border" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" CornerRadius="1">
                            <ScrollViewer Focusable="False" Background="{TemplateBinding Background}" Padding="4" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="False">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path Visibility="Collapsed" HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" x:Name="IsExpandedPath" VerticalAlignment="Stretch" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 8 4 L 4 8 Z" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-46.576" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path HorizontalAlignment="Left" Margin="2.5,3.75,0,1.25" x:Name="IsExpandedPathHover" VerticalAlignment="Stretch" Fill="{x:Null}" Data="M 0 4 L 8 4 L 4 8 Z" RenderTransformOrigin="0.5,0.5" d:LayoutOverrides="Height" Stroke="#FF27C7F7" Opacity="0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="-46.576" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Path HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="ExpandPath" VerticalAlignment="Center" Fill="{x:Null}" Data="M 4 0 L 8 4 L 4 8 Z" Stroke="#FFA5A5A5" />
                        <Path HorizontalAlignment="Left" Margin="1,1,0,1" x:Name="ExpandPathHover" VerticalAlignment="Center" Fill="{x:Null}" Data="M 4 0 L 8 4 L 4 8 Z" Stroke="#FF27C7F7" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="IsExpandedPathHover" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="ExpandPathHover" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="IsExpandedPath" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ExpandPath" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <Border Grid.Column="1" x:Name="Selection_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>

                                <Border x:Name="border" BorderBrush="{DynamicResource SelectedListItemBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                                    <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" CornerRadius="1" />
                                </Border>
                                <Border x:Name="border1" BorderBrush="{DynamicResource MouseOverBorderBrush}" BorderThickness="1" CornerRadius="2" Opacity="0">
                                    <Border BorderThickness="1" Background="{DynamicResource ListItemHoverBrush}" CornerRadius="1">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header" Margin="2" />
                            </Grid>
                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="Selection_Border">
                            <Setter Property="Opacity" TargetName="border1" Value="1" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Selection_Border" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="ListBorder" Color="#828790" />
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer Focusable="false" DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                <GridViewHeaderRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="2,0,2,0" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" />

                            </ScrollViewer>
                            <ScrollContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>
                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_HorizontalScrollBar" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Cursor="Arrow" x:Name="PART_VerticalScrollBar" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                        <DockPanel Grid.Column="1" Grid.Row="1" Background="{Binding Path=Background, ElementName=PART_VerticalScrollBar}" LastChildFill="false">
                            <Rectangle Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1" Fill="White" DockPanel.Dock="Left" />
                            <Rectangle Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Height="1" Fill="White" DockPanel.Dock="Top" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush" Value="{StaticResource ListBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" BorderBrush="{DynamicResource DefaultedBorderBrush}" Background="{DynamicResource WhiteBrush}">

                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" x:Name="border">

                        <Grid Margin="2,0,2,0">
                            <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
                                <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" />
                            </Border>
                            <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                                <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                            <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,2,0,2" VerticalAlignment="Stretch" />
                        </Grid>

                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <Style x:Key="AlternatingListView" TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="#99FFFFFF" />
        <Setter Property="BorderBrush" Value="#FFD7D7D7" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Border SnapsToDevicePixels="true"  BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" x:Name="border">

                            <Grid Margin="2,0,2,0">
                                <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource SelectedListItemBorderBrush}">
                                    <Border BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" BorderThickness="1" CornerRadius="1" Background="{DynamicResource ListItemSelectedBackgroundBrush}" />
                                </Border>
                                <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                                    <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                        <Border.BorderBrush>
                                            <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                        </Border.BorderBrush>
                                    </Border>
                                </Border>
                                <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,0,0,0" VerticalAlignment="Stretch" />
                            </Grid>

                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#99F3F3F3"></Setter>
                <Setter Property="BorderBrush" Value="#FFD7D7D7" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />

            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="2">
                <Setter Property="Background" Value="#99FFFFFF"></Setter>
                <Setter Property="BorderBrush" Value="red" />
                <Setter Property="BorderThickness" Value="0,10,0,0" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Rectangle HorizontalAlignment="Center" Width="0.5">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Margin="0,1,0,1">
                        <Grid>

                            <Border x:Name="Main" BorderThickness="1,1,0,1" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="0,0,0,0" />

                            <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                                <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />
                            </Border>
                        </Grid>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Margin="0,0,7,0" Width="Auto" HorizontalAlignment="Stretch" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource MouseOverBrush}" />
                            <Setter Property="BorderBrush" TargetName="Main" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
                            <Setter Property="Background" Value="SkyBlue" />
                            <Setter Property="BorderBrush" TargetName="Main" Value="{DynamicResource PressedBorderBrush}" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource LightBrush}" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Yellow" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FontSize" Value="10" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Template" Value="{DynamicResource NuclearButton}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
        <Setter Property="BorderBrush" Value="#FFBBBFC4"/>
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource CheckBoxBg}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
    </Style>

    <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="#ffcc00" />
    <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6" />
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" CornerRadius="0,0,0,0" Background="{DynamicResource LightBrush}">
                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                            <Path Stroke="White" Data="M 1 1.5 L 6 1.5" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0 0.5 L 5 0.5" />
                            <Path Fill="White" Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFFDFDFD" />
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFFFFFFF" />
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="0,0,0,0">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
                            <Path Stroke="White" Data="M 1.5 1 L 1.5 6" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5" />
                            <Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarPanelBrush" EndPoint="0.5,0.974" StartPoint="0.5,0.031">
        <GradientStop Color="#FFFEFEFE" Offset="0" />
        <GradientStop Color="#FFE5E9EE" Offset="1" />
        <GradientStop Color="#FFFDFDFD" Offset="0.292" />
        <GradientStop Color="#FFFCFCFC" Offset="0.388" />
        <GradientStop Color="#FFFBFBFB" Offset="0.48" />
        <GradientStop Color="#FFFAFAFA" Offset="0.568" />
        <GradientStop Color="#FFF8F8F8" Offset="0.636" />
        <GradientStop Color="#FFF3F4F5" Offset="0.816" />
        <GradientStop Color="#FFEFF1F3" Offset="0.872" />
        <GradientStop Color="#FFEDF0F2" Offset="0.928" />
        <GradientStop Color="#FFF5F6F6" Offset="0.7" />
        <GradientStop Color="#FFF3F4F5" Offset="0.76" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid SnapsToDevicePixels="true" Margin="3,1,1,1" x:Name="Grid">
                        <Grid HorizontalAlignment="Right" x:Name="OverflowGrid">
                            <ToggleButton IsEnabled="{TemplateBinding HasOverflowItems}" FocusVisualStyle="{x:Null}" x:Name="OverflowButton" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Popup Focusable="false" AllowsTransparency="true" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False" x:Name="OverflowPopup">
                                <Border x:Name="Shdw">
                                    <Border BorderThickness="1,1,1,1" Background="{DynamicResource LightBrush}" BorderBrush="{DynamicResource LightBrush}">
                                        <ToolBarOverflowPanel Focusable="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" Margin="2" x:Name="PART_ToolBarOverflowPanel" WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border Margin="0,0,11,0" x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" Padding="{TemplateBinding Padding}" Background="{DynamicResource ToolBarPanelBrush}">
                            <Grid>

                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb Padding="6,5,1,6" Margin="-3,-1,0,0" x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" Width="10" />
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" VerticalAlignment="Center" ContentSource="Header" />
                                    <Grid>
                                        <ToolBarPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,1,2,2" x:Name="PART_ToolBarPanel" IsItemsHost="true" Background="{DynamicResource ToolBarPanelBrush}" />
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true" />
                            <Setter Property="Background" TargetName="Shdw" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                            <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
                            <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                            <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#FF000000" />
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="4" Background="{DynamicResource LightBrush}" BorderThickness="1,1,1,1" />
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                    <Binding Path="ActualWidth" ElementName="Header" />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Border.OpacityMask>
                            <Border BorderThickness="{TemplateBinding BorderThickness}">

                                <Border BorderThickness="{TemplateBinding BorderThickness}" />
                            </Border>
                        </Border>
                        <Border Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" />
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="2" BorderThickness="1" x:Name="Main" BorderBrush="{DynamicResource NormalBorderBrush}" >
                            <Border.Background>

                                <LinearGradientBrush EndPoint="0.5,0.974" StartPoint="0.5,0.031">
                                    <GradientStop Color="White" Offset="0" />
                                    <GradientStop Color="#FFDDDDE1" Offset="1" />
                                    <GradientStop Color="#FFD9D9DE" Offset="0.332" />
                                    <GradientStop Color="#FFCDD1D8" Offset="0.341" />
                                    <GradientStop Color="#FFC7CBD1" Offset="0.349" />
                                    <GradientStop Color="#FFBCC2C8" Offset="0.358" />
                                    <GradientStop Color="#FFC5CACF" Offset="0.75" />
                                </LinearGradientBrush>

                            </Border.Background>
                        </Border>
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="2" Background="White" Opacity="0.4" Visibility="Collapsed" />
                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0" Height="20">
                            <Grid Margin="-9,0,0,0">
                                <Border Margin="1,1,-66.303,0" BorderBrush="{x:Null}">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="1.007,0.5" StartPoint="0.007,0.5">
                                            <GradientStop Color="#99FFFFFF" Offset="0"/>
                                            <GradientStop Offset="1"/>
                                            <GradientStop Color="#66FFFFFF" Offset="0.481"/>
                                            <GradientStop Color="#19FFFFFF" Offset="0.745"/>
                                            <GradientStop Color="#0CFFFFFF" Offset="0.87"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" VerticalAlignment="Center" HorizontalAlignment="Center" Height="Auto" Margin="6,0,2,2" />
                            </Grid>

                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>


    <LinearGradientBrush x:Key="NormalBrushExtSimple" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="White" Offset="0" />
        <GradientStop Color="#FFEDEFF1" Offset="1" />
        <GradientStop Color="#FFFDFDFD" Offset="0.332" />
        <GradientStop Color="#FFFBFBFC" Offset="0.741" />
        <GradientStop Color="#FFF6F7F8" Offset="0.875" />
    </LinearGradientBrush>

    <Style x:Key="Button2" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrushExtSimple}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3" Background="{DynamicResource NormalBrushExtSimple}" />
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBorder" BorderThickness="1" BorderBrush="{DynamicResource MouseOverBorderBrush}" CornerRadius="3" Opacity="0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource ListItemSelectedBackgroundBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="PressedBorder" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
    </Style>

    <LinearGradientBrush x:Key="ShineFill" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#CC000000" Offset="0" />
        <GradientStop Color="#CC000000" Offset="1" />
        <GradientStop Color="#33C3C3C3" Offset="0.5" />
        <GradientStop Color="#33C8C8C8" Offset="0.525" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineOpacity" EndPoint="1.012,0.887" StartPoint="0.012,0.887">
        <GradientStop Color="#E5000000" Offset="0" />
        <GradientStop Color="#E5FFFFFF" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ShineBrush" EndPoint="0.465,0.869" StartPoint="0.465,0.143">
        <GradientStop Color="#CCFFFFFF" Offset="0" />
        <GradientStop Color="#00FFFFFF" Offset="1" />
        <GradientStop Color="#4CFFFFFF" Offset="0.56" />
        <GradientStop Color="#99FFFFFF" Offset="0.555" />
    </LinearGradientBrush>

    <Style x:Key="BlueButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FF6A8CED">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FF19337B" Offset="0.013" />
                                    <GradientStop Color="#FF19337B" Offset="0.987" />
                                    <GradientStop Color="#FF203B86" Offset="0.185" />
                                    <GradientStop Color="#FF203B86" Offset="0.858" />
                                    <GradientStop Color="#FF2A4694" Offset="0.289" />
                                    <GradientStop Color="#FF2A4694" Offset="0.75" />
                                    <GradientStop Color="#FF3A59AD" Offset="0.643" />
                                    <GradientStop Color="#FF3A59AD" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FF42A848">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FF116516" Offset="0.013" />
                                    <GradientStop Color="#FF116516" Offset="0.987" />
                                    <GradientStop Color="#FF186E1E" Offset="0.185" />
                                    <GradientStop Color="#FF186E1E" Offset="0.858" />
                                    <GradientStop Color="#FF217827" Offset="0.289" />
                                    <GradientStop Color="#FF217827" Offset="0.75" />
                                    <GradientStop Color="#FF2B8431" Offset="0.643" />
                                    <GradientStop Color="#FF2B8431" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OrangeButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FFF6C21E">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FFC36301" Offset="0.013" />
                                    <GradientStop Color="#FFC36301" Offset="0.987" />
                                    <GradientStop Color="#FFCA6E02" Offset="0.185" />
                                    <GradientStop Color="#FFCA6E02" Offset="0.858" />
                                    <GradientStop Color="#FFCF7503" Offset="0.289" />
                                    <GradientStop Color="#FFCF7503" Offset="0.75" />
                                    <GradientStop Color="#FFDE8A05" Offset="0.643" />
                                    <GradientStop Color="#FFDE8A05" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MagentaButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="#FF001E75" Background="#FFD069CE">
                            <Border BorderThickness="0.8,1,0.8,0" CornerRadius="1">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#19000000" Offset="0" />
                                        <GradientStop Color="#6D000000" Offset="1" />
                                        <GradientStop Color="#33000000" Offset="0.466" />
                                        <GradientStop Color="#3F000000" Offset="0.478" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>

                        <Border x:Name="GlassBorder" BorderBrush="{x:Null}" BorderThickness="1,2,1,1" CornerRadius="2">
                            <Border.OpacityMask>
                                <LinearGradientBrush EndPoint="0.5,0.963" StartPoint="0.5,0.059">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="White" Offset="1" />
                                    <GradientStop Color="#330B0B0B" Offset="0.028" />
                                    <GradientStop Color="#4C111111" Offset="0.064" />
                                    <GradientStop Color="#66191919" Offset="0.1" />
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0.5" StartPoint="0,0.5">
                                    <GradientStop Color="#19000000" Offset="0" />
                                    <GradientStop Color="#19000000" Offset="1" />
                                    <GradientStop Color="#19000000" Offset="0.009" />
                                    <GradientStop Color="#19000000" Offset="0.991" />
                                    <GradientStop Color="#FF6B066B" Offset="0.013" />
                                    <GradientStop Color="#FF6B066B" Offset="0.987" />
                                    <GradientStop Color="#FF740E75" Offset="0.185" />
                                    <GradientStop Color="#FF740E75" Offset="0.858" />
                                    <GradientStop Color="#FF801781" Offset="0.289" />
                                    <GradientStop Color="#FF801781" Offset="0.75" />
                                    <GradientStop Color="#FF9A2D9C" Offset="0.643" />
                                    <GradientStop Color="#FF9A2D9C" Offset="0.466" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="ShineBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2,2,0,0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.465,0.922" StartPoint="0.465,0.09">
                                    <GradientStop Color="#37FFFFFF" Offset="0" />
                                    <GradientStop Color="#00FFFFFF" Offset="1" />
                                    <GradientStop Color="#02FFFFFF" Offset="0.444" />
                                    <GradientStop Color="#14FFFFFF" Offset="0.44" />
                                    <GradientStop Color="#2DFFFFFF" Offset="0.073" />
                                    <GradientStop Color="#21FFFFFF" Offset="0.181" />
                                    <GradientStop Color="#19FFFFFF" Offset="0.246" />
                                    <GradientStop Color="#16FFFFFF" Offset="0.332" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="2" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#F3F3F3" Offset="0" />
        <GradientStop Color="#EBEBEB" Offset="0.5" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#CDCDCD" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070" />

    <Style TargetType="{x:Type ToggleButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource BlackColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                    </ControlTemplate.Resources>
                    <Grid>

                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource LightBorderBrush}" Opacity="0.8" />
                        <Border x:Name="Selected" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Background="{DynamicResource MouseOverBrush}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource MouseOverBorderBrush}" Opacity="0" />
                        <Border x:Name="Hover" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource LightBorderBrush}" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource BlackColor}" />
                            </Border.Background>
                        </Border>
                        <Border x:Name="Pressed" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" BorderBrush="{DynamicResource LightBorderBrush}" Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Border.Background>
                        </Border>

                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,4,4,4" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" TargetName="Pressed" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Hover" Value="0.1" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsChecked" Value="true">

                            <Setter Property="Opacity" TargetName="Selected" Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#ADADAD" />
                            <Setter Property="Background" TargetName="Border" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource DisabledBorderBrush}"/>
                            <Setter Property="Background" TargetName="Selected" Value="{DynamicResource DisabledBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="Selected" Value="{DynamicResource DisabledBorderBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GreenSoftButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" >
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDDE1D7" Offset="0"/>
                                    <GradientStop Color="#FFB5C085" Offset="1"/>
                                    <GradientStop Color="#FFE2E3E3" Offset="0.28"/>
                                    <GradientStop Color="#FFD8D8D9" Offset="0.703"/>
                                    <GradientStop Color="#FFD4D4D5" Offset="0.849"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>


                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE2FCB3" Offset="0" />
                                    <GradientStop Color="#FFDDF66C" Offset="1" />
                                    <GradientStop Color="#FFE1FBAA" Offset="0.332" />
                                    <GradientStop Color="#FFDFF888" Offset="0.741" />
                                    <GradientStop Color="#FFDEF884" Offset="0.875" />
                                </LinearGradientBrush>

                            </Border.Background>
                            <Border BorderThickness="1" CornerRadius="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEAFEBC" Offset="0"/>
                                        <GradientStop Color="#FFDDF66C" Offset="1"/>
                                        <GradientStop Color="#FFE1FBAC" Offset="0.272"/>
                                        <GradientStop Color="#FFDFF888" Offset="0.728"/>
                                        <GradientStop Color="#FFDEF77C" Offset="0.871"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" CornerRadius="3" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFE4F691" Offset="0"/>
                                    <GradientStop Color="#FFEDFFC4" Offset="1"/>
                                    <GradientStop Color="#FFDCF173" Offset="0.172"/>
                                    <GradientStop Color="#FFD7EE62" Offset="0.379"/>
                                    <GradientStop Color="#FFD6F162" Offset="0.685"/>
                                    <GradientStop Color="#FFE0F98C" Offset="0.78"/>
                                    <GradientStop Color="#FFE4FC9D" Offset="0.862"/>
                                    <GradientStop Color="#FFE7FEAB" Offset="0.927"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF9BB82B" Offset="0"/>
                                    <GradientStop Color="#FFBED865" Offset="1"/>
                                    <GradientStop Color="#FFB6CB64" Offset="0.315"/>
                                    <GradientStop Color="#FFBDD26C" Offset="0.716"/>
                                    <GradientStop Color="#FFC0D56F" Offset="0.862"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border BorderThickness="1" CornerRadius="2" Background="{x:Null}">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFEFFABC" Offset="0"/>
                                        <GradientStop Color="#FFEDFFC4" Offset="1"/>
                                        <GradientStop Color="#FFC1D667" Offset="0.297"/>
                                        <GradientStop Color="#FFC7DD6E" Offset="0.754"/>
                                        <GradientStop Color="#FFCCE282" Offset="0.875"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border BorderThickness="1" CornerRadius="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFE7F69E" Offset="0"/>
                                            <GradientStop Color="#FFE7FEAB" Offset="1"/>
                                            <GradientStop Color="#FFE7F69E" Offset="0.065"/>
                                            <GradientStop Color="#FFDFF180" Offset="0.319"/>
                                            <GradientStop Color="#FFE2F592" Offset="0.733"/>
                                            <GradientStop Color="#FFEFFEC6" Offset="0.94"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBorder" BorderThickness="1" CornerRadius="3" Opacity="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF91AF14" Offset="0"/>
                                    <GradientStop Color="#FFADC930" Offset="1"/>
                                    <GradientStop Color="#FFB6CB64" Offset="0.315"/>
                                    <GradientStop Color="#FFBED36C" Offset="0.728"/>
                                    <GradientStop Color="#FFC0D56F" Offset="0.853"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border BorderThickness="1" CornerRadius="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFB4C93E" Offset="0"/>
                                        <GradientStop Color="#FFC5DC45" Offset="1"/>
                                        <GradientStop Color="#FFA8C22C" Offset="0.323"/>
                                        <GradientStop Color="#FFADC631" Offset="0.716"/>
                                        <GradientStop Color="#FFAEC633" Offset="0.866"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1.021" StartPoint="0.5,0.031">
                                        <GradientStop Color="#FFFBD678" Offset="0"/>
                                        <GradientStop Color="#FFFEE287" Offset="1"/>
                                        <GradientStop Color="#FFFEE287" Offset="0.138"/>
                                        <GradientStop Color="#FFFFE48A" Offset="0.241"/>
                                        <GradientStop Color="#FFFFE48A" Offset="0.879"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="1" CornerRadius="1">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFC5DF47" Offset="0"/>
                                            <GradientStop Color="#FFCAE449" Offset="1"/>
                                            <GradientStop Color="#FFCBE549" Offset="0.302"/>
                                            <GradientStop Color="#FFCBE549" Offset="0.733"/>
                                            <GradientStop Color="#FFCBE549" Offset="0.862"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFBFD744" Offset="0"/>
                                            <GradientStop Color="#FFCAE449" Offset="1"/>
                                            <GradientStop Color="#FFBFD543" Offset="0.302"/>
                                            <GradientStop Color="#FFBFD543" Offset="0.737"/>
                                            <GradientStop Color="#FFBDD242" Offset="0.922"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
        <Setter Property="BorderBrush" Value="#FFBBBFC4"/>
    </Style>
    <Style x:Key="RedSoftButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3" >
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDDE1D7" Offset="0"/>
                                    <GradientStop Color="#FFB5C085" Offset="1"/>
                                    <GradientStop Color="#FFE2E3E3" Offset="0.28"/>
                                    <GradientStop Color="#FFD8D8D9" Offset="0.703"/>
                                    <GradientStop Color="#FFD4D4D5" Offset="0.849"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>


                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFCB3B3" Offset="0" />
                                    <GradientStop Color="#FFF66C6C" Offset="1" />
                                    <GradientStop Color="#FFFBAAAA" Offset="0.332" />
                                    <GradientStop Color="#FFF88888" Offset="0.741" />
                                    <GradientStop Color="#FFF88484" Offset="0.875" />
                                </LinearGradientBrush>

                            </Border.Background>
                            <Border BorderThickness="1" CornerRadius="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFEBCBC" Offset="0"/>
                                        <GradientStop Color="#FFF66C6C" Offset="1"/>
                                        <GradientStop Color="#FFFBACAC" Offset="0.272"/>
                                        <GradientStop Color="#FFF88888" Offset="0.728"/>
                                        <GradientStop Color="#FFF77C7C" Offset="0.871"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <Border x:Name="HoverBorder" BorderThickness="1" CornerRadius="3" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF69191" Offset="0"/>
                                    <GradientStop Color="#FFFFC4C4" Offset="1"/>
                                    <GradientStop Color="#FFF17373" Offset="0.172"/>
                                    <GradientStop Color="#FFEE6262" Offset="0.379"/>
                                    <GradientStop Color="#FFF16262" Offset="0.685"/>
                                    <GradientStop Color="#FFF98C8C" Offset="0.78"/>
                                    <GradientStop Color="#FFFC9D9D" Offset="0.862"/>
                                    <GradientStop Color="#FFFEABAB" Offset="0.927"/>
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFB82B2B" Offset="0"/>
                                    <GradientStop Color="#FFD86565" Offset="1"/>
                                    <GradientStop Color="#FFCB6464" Offset="0.315"/>
                                    <GradientStop Color="#FFD26C6C" Offset="0.716"/>
                                    <GradientStop Color="#FFD56F6F" Offset="0.862"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border BorderThickness="1" CornerRadius="2" Background="{x:Null}">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFABCBC" Offset="0"/>
                                        <GradientStop Color="#FFFFC4C4" Offset="1"/>
                                        <GradientStop Color="#FFD66767" Offset="0.297"/>
                                        <GradientStop Color="#FFDD6E6E" Offset="0.754"/>
                                        <GradientStop Color="#FFE28282" Offset="0.875"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border BorderThickness="1" CornerRadius="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFF69E9E" Offset="0"/>
                                            <GradientStop Color="#FFFEABAB" Offset="1"/>
                                            <GradientStop Color="#FFF69E9E" Offset="0.065"/>
                                            <GradientStop Color="#FFF18080" Offset="0.319"/>
                                            <GradientStop Color="#FFF59292" Offset="0.733"/>
                                            <GradientStop Color="#FFFEC6C6" Offset="0.94"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                </Border>
                            </Border>
                        </Border>
                        <Border x:Name="PressedBorder" BorderThickness="1" CornerRadius="3" Opacity="0">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFAF1414" Offset="0"/>
                                    <GradientStop Color="#FFC93530" Offset="1"/>
                                    <GradientStop Color="#FFCB6464" Offset="0.315"/>
                                    <GradientStop Color="#FFD3746C" Offset="0.728"/>
                                    <GradientStop Color="#FFD5776F" Offset="0.853"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border BorderThickness="1" CornerRadius="2">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFC9493E" Offset="0"/>
                                        <GradientStop Color="#FFDC4A45" Offset="1"/>
                                        <GradientStop Color="#FFC2312C" Offset="0.323"/>
                                        <GradientStop Color="#FFC63631" Offset="0.716"/>
                                        <GradientStop Color="#FFC63833" Offset="0.866"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1.021" StartPoint="0.5,0.031">
                                        <GradientStop Color="#FFFB8378" Offset="0"/>
                                        <GradientStop Color="#FFFE9187" Offset="1"/>
                                        <GradientStop Color="#FFFE9187" Offset="0.138"/>
                                        <GradientStop Color="#FFFF8E8A" Offset="0.241"/>
                                        <GradientStop Color="#FFFF8E8A" Offset="0.879"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border BorderThickness="1" CornerRadius="1">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFD74944" Offset="0"/>
                                            <GradientStop Color="#FFE44E49" Offset="1"/>
                                            <GradientStop Color="#FFD54F43" Offset="0.302"/>
                                            <GradientStop Color="#FFD54F43" Offset="0.737"/>
                                            <GradientStop Color="#FFD24E42" Offset="0.922"/>
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFDF5347" Offset="0"/>
                                            <GradientStop Color="#FFE45549" Offset="1"/>
                                            <GradientStop Color="#FFE54E49" Offset="0.302"/>
                                            <GradientStop Color="#FFE55649" Offset="0.733"/>
                                            <GradientStop Color="#FFE55D49" Offset="0.862"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                        </Border>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
        <Setter Property="BorderBrush" Value="#FFBBBFC4"/>
    </Style>



    <Color x:Key="WhiteSpreadColor">#FFFFFFFF</Color>
    <SolidColorBrush x:Key="WhiteSpreadBrush" Color="{StaticResource WhiteSpreadColor}"/>
    <SolidColorBrush x:Key="WhiteBorderBrush" Color="{StaticResource WhiteSpreadColor}"/>
    <LinearGradientBrush x:Key="BlueGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF2E6CC0" Offset="0"/>
        <GradientStop Color="{StaticResource BlueSpreadColor}" Offset="1"/>
        <GradientStop Color="#FF2962B5" Offset="0.043"/>
        <GradientStop Color="#FF245DAF" Offset="0.091"/>
        <GradientStop Color="#FF265DB1" Offset="0.211"/>
        <GradientStop Color="#FF225CAF" Offset="0.341"/>
        <GradientStop Color="#FF225BB1" Offset="0.414"/>
        <GradientStop Color="#FF255DBB" Offset="0.573"/>
        <GradientStop Color="#FF2A61C5" Offset="0.638"/>
        <GradientStop Color="#FF2F66CB" Offset="0.685"/>
        <GradientStop Color="#FF2F6BD0" Offset="0.75"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlueUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF4683E3" Offset="0"/>
        <GradientStop Color="#003167C1" Offset="0.543"/>
        <GradientStop Color="#FF407BDA" Offset="0.056"/>
        <GradientStop Color="#FF3D76D4" Offset="0.112"/>
        <GradientStop Color="#FF3971CD" Offset="0.168"/>
        <GradientStop Color="#FF356CC7" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BlueInnerWhiteBrush" Color="#FF549FF1"/>
    <RadialGradientBrush x:Key="BlueBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FF68AAEF" Offset="0"/>
        <GradientStop Color="#004684D4" Offset="0.974"/>
        <GradientStop Color="#FF61A1EB" Offset="0.073"/>
        <GradientStop Color="#FF5797E2" Offset="0.151"/>
        <GradientStop Color="#FF4E8CDC" Offset="0.237"/>
    </RadialGradientBrush>

    <Style x:Key="NuclearBlueButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource BlueBorderBrush}" Background="{x:Null}"/>
                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource BlueGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2" Visibility="Visible" Opacity="0.6" Background="{DynamicResource BlueUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource BlueBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF2E6CC0" Offset="0"/>
                                    <GradientStop Color="#FF388BE4" Offset="1"/>
                                    <GradientStop Color="#FF2962B5" Offset="0.043"/>
                                    <GradientStop Color="#FF245DAF" Offset="0.091"/>
                                    <GradientStop Color="#FF265DB1" Offset="0.211"/>
                                    <GradientStop Color="#FF225CAF" Offset="0.341"/>
                                    <GradientStop Color="#FF225BB1" Offset="0.414"/>
                                    <GradientStop Color="#FF255DBB" Offset="0.573"/>
                                    <GradientStop Color="#FF2A61C5" Offset="0.638"/>
                                    <GradientStop Color="#FF2F66CB" Offset="0.685"/>
                                    <GradientStop Color="{StaticResource BlueSpreadColor}" Offset="0.737"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True"/>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="BaseBorder" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="BaseBorder" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="GreenSpreadColor">#FF58BC27</Color>
    <SolidColorBrush x:Key="GreenSpreadBrush" Color="{StaticResource GreenSpreadColor}"/>
    <LinearGradientBrush x:Key="GreenGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF378E29" Offset="0"/>
        <GradientStop Color="{StaticResource GreenSpreadColor}" Offset="1"/>
        <GradientStop Color="#FF2E822A" Offset="0.043"/>
        <GradientStop Color="#FF307E27" Offset="0.091"/>
        <GradientStop Color="#FF327E24" Offset="0.211"/>
        <GradientStop Color="#FF367F21" Offset="0.341"/>
        <GradientStop Color="#FF307E26" Offset="0.414"/>
        <GradientStop Color="#FF368429" Offset="0.573"/>
        <GradientStop Color="#FF37882C" Offset="0.638"/>
        <GradientStop Color="#FF3D9030" Offset="0.685"/>
        <GradientStop Color="#FF3E9531" Offset="0.737"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="GreenUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF479733" Offset="0"/>
        <GradientStop Color="#0035812D" Offset="0.543"/>
        <GradientStop Color="#FF419031" Offset="0.052"/>
        <GradientStop Color="#FF3E8D2F" Offset="0.112"/>
        <GradientStop Color="#FF34862D" Offset="0.168"/>
        <GradientStop Color="#FF2F822B" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="GreenInnerWhiteBrush" Color="#FF67BC47"/>
    <RadialGradientBrush x:Key="GreenBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FF89D667" Offset="0"/>
        <GradientStop Color="#00499940" Offset="0.974"/>
        <GradientStop Color="#FF7FCB62" Offset="0.073"/>
        <GradientStop Color="#FF73BF5A" Offset="0.151"/>
        <GradientStop Color="#FF69B553" Offset="0.233"/>
    </RadialGradientBrush>
    <Style x:Key="NuclearGreenButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource GreenBorderBrush}" Background="{x:Null}"/>

                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource GreenGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" Margin="1" Opacity="0.6" Visibility="Visible" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource GreenUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" BorderBrush="{DynamicResource GreenInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource GreenBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF378E29" Offset="0"/>
                                    <GradientStop Color="#FF58BC27" Offset="1"/>
                                    <GradientStop Color="#FF2E822A" Offset="0.043"/>
                                    <GradientStop Color="#FF307E27" Offset="0.091"/>
                                    <GradientStop Color="#FF327E24" Offset="0.211"/>
                                    <GradientStop Color="#FF367F21" Offset="0.341"/>
                                    <GradientStop Color="#FF307E26" Offset="0.414"/>
                                    <GradientStop Color="#FF368429" Offset="0.573"/>
                                    <GradientStop Color="#FF37882C" Offset="0.638"/>
                                    <GradientStop Color="#FF3D9030" Offset="0.685"/>
                                    <GradientStop Color="#FF3E9531" Offset="0.737"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="OrangeSpreadColor">#FFFEC307</Color>
    <SolidColorBrush x:Key="OrangeSpreadBrush" Color="{StaticResource OrangeSpreadColor}"/>
    <SolidColorBrush x:Key="OrangeBorderBrush" Color="#FFE07110"/>
    <LinearGradientBrush x:Key="OrangeGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF59816" Offset="0"/>
        <GradientStop Color="{StaticResource OrangeSpreadColor}" Offset="1"/>
        <GradientStop Color="#FFF49114" Offset="0.043"/>
        <GradientStop Color="#FFF49114" Offset="0.091"/>
        <GradientStop Color="#FFF38F14" Offset="0.211"/>
        <GradientStop Color="#FFF38F17" Offset="0.341"/>
        <GradientStop Color="#FFF28D19" Offset="0.414"/>
        <GradientStop Color="#FFF49117" Offset="0.573"/>
        <GradientStop Color="#FFF69415" Offset="0.638"/>
        <GradientStop Color="#FFF89F11" Offset="0.685"/>
        <GradientStop Color="#FFFAA60F" Offset="0.737"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="OrangeUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFBC546" Offset="0"/>
        <GradientStop Color="#00FAA218" Offset="0.543"/>
        <GradientStop Color="#FFFAB92D" Offset="0.056"/>
        <GradientStop Color="#FFFAB228" Offset="0.112"/>
        <GradientStop Color="#FFF8AA20" Offset="0.168"/>
        <GradientStop Color="#FFF7A31B" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="OrangeInnerWhiteBrush" Color="#FFFEE282"/>
    <RadialGradientBrush x:Key="OrangeBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FFFEE478" Offset="0"/>
        <GradientStop Color="#00FDBD4B" Offset="0.974"/>
        <GradientStop Color="#FFFEDD72" Offset="0.073"/>
        <GradientStop Color="#FFFDD468" Offset="0.151"/>
        <GradientStop Color="#FFFCCA5D" Offset="0.237"/>
    </RadialGradientBrush>

    <Style x:Key="NuclearOrangeButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">

                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0500000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource OrangeBorderBrush}" Background="{x:Null}"/>

                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource OrangeGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" Opacity="0.6" Visibility="Visible" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2" Background="{DynamicResource OrangeUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource OrangeInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource OrangeBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF59816" Offset="0"/>
                                    <GradientStop Color="#FFFEC307" Offset="1"/>
                                    <GradientStop Color="#FFF49114" Offset="0.043"/>
                                    <GradientStop Color="#FFF49114" Offset="0.091"/>
                                    <GradientStop Color="#FFF38F14" Offset="0.211"/>
                                    <GradientStop Color="#FFF38F17" Offset="0.341"/>
                                    <GradientStop Color="#FFF28D19" Offset="0.414"/>
                                    <GradientStop Color="#FFF49117" Offset="0.573"/>
                                    <GradientStop Color="#FFF69415" Offset="0.638"/>
                                    <GradientStop Color="#FFF89F11" Offset="0.685"/>
                                    <GradientStop Color="#FFFAA60F" Offset="0.737"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="MagentaSpreadColor">#FFC44EB5</Color>
    <SolidColorBrush x:Key="MagentaSpreadBrush" Color="{StaticResource MagentaSpreadColor}"/>
    <LinearGradientBrush x:Key="MagentaGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF882088" Offset="0"/>
        <GradientStop Color="{StaticResource MagentaSpreadColor}" Offset="1"/>
        <GradientStop Color="#FF821B81" Offset="0.043"/>
        <GradientStop Color="#FF821983" Offset="0.091"/>
        <GradientStop Color="#FF821B81" Offset="0.211"/>
        <GradientStop Color="#FF821B83" Offset="0.341"/>
        <GradientStop Color="#FF821C81" Offset="0.414"/>
        <GradientStop Color="#FF892687" Offset="0.573"/>
        <GradientStop Color="#FF8E2989" Offset="0.638"/>
        <GradientStop Color="#FF942B8C" Offset="0.685"/>
        <GradientStop Color="#FF992F91" Offset="0.737"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="MagentaUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3449C" Offset="0"/>
        <GradientStop Color="#00882087" Offset="0.543"/>
        <GradientStop Color="#FF973890" Offset="0.056"/>
        <GradientStop Color="#FF92338E" Offset="0.112"/>
        <GradientStop Color="#FF8F2D8B" Offset="0.168"/>
        <GradientStop Color="#FF8B2888" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="MagentaInnerWhiteBrush" Color="#FFC75FBF"/>
    <RadialGradientBrush x:Key="MagentaBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FFDF79DA" Offset="0"/>
        <GradientStop Color="#009F349A" Offset="0.974"/>
        <GradientStop Color="#FFD66FD0" Offset="0.073"/>
        <GradientStop Color="#FFCC65C6" Offset="0.151"/>
        <GradientStop Color="#FFC05ABB" Offset="0.237"/>
    </RadialGradientBrush>
    <Style x:Key="NuclearMagentaButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource MagentaBorderBrush}" Background="{x:Null}"/>
                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource MagentaGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2" Visibility="Visible" Opacity="0.6" Background="{DynamicResource MagentaUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource MagentaInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource MagentaBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0" Background="{DynamicResource MagentaGlassBrush}"/>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="PurpleRedSpreadColor">#FFE84783</Color>
		<SolidColorBrush x:Key="PurpleRedSpreadBrush" Color="{StaticResource PurpleRedSpreadColor}"/>
    <SolidColorBrush x:Key="PurpleRedBorderBrush" Color="#FF8F003B"/>
    <LinearGradientBrush x:Key="PurpleRedGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB40B52" Offset="0"/>
        <GradientStop Color="{StaticResource PurpleRedSpreadColor}" Offset="1"/>
        <GradientStop Color="#FFAC054C" Offset="0.043"/>
        <GradientStop Color="#FFAE054C" Offset="0.091"/>
        <GradientStop Color="#FFAE054C" Offset="0.211"/>
        <GradientStop Color="#FFAC054B" Offset="0.341"/>
        <GradientStop Color="#FFAE054C" Offset="0.414"/>
        <GradientStop Color="#FFB50D51" Offset="0.573"/>
        <GradientStop Color="#FFB81255" Offset="0.638"/>
        <GradientStop Color="#FFBE1757" Offset="0.685"/>
        <GradientStop Color="#FFC11D5C" Offset="0.737"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="PurpleRedUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFD63272" Offset="0"/>
        <GradientStop Color="#00B0084F" Offset="0.543"/>
        <GradientStop Color="#FFCD2567" Offset="0.056"/>
        <GradientStop Color="#FFC61D62" Offset="0.112"/>
        <GradientStop Color="#FFC0165C" Offset="0.168"/>
        <GradientStop Color="#FFBB0F58" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="PurpleRedInnerWhiteBrush" Color="#FFEB5C92"/>
    <RadialGradientBrush x:Key="PurpleRedBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FFF0739F" Offset="0"/>
        <GradientStop Color="#00CB3470" Offset="0.974"/>
        <GradientStop Color="#FFEA6898" Offset="0.073"/>
        <GradientStop Color="#FFE15B8E" Offset="0.151"/>
        <GradientStop Color="#FFD84C82" Offset="0.237"/>
    </RadialGradientBrush>
    <Style x:Key="NuclearPurpleRedButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource PurpleRedBorderBrush}" Background="{x:Null}"/>
                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource PurpleRedGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2" Visibility="Visible" Opacity="0.6" Background="{DynamicResource PurpleRedUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource PurpleRedInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource PurpleRedBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0" Background="{DynamicResource PurpleRedGlassBrush}"/>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="BlueVioletSpreadColor">#FFA95BDB</Color>
		<SolidColorBrush x:Key="BlueVioletSpreadBrush" Color="{StaticResource BlueVioletSpreadColor}"/>
    <SolidColorBrush x:Key="BlueVioletBorderBrush" Color="#FF52277D"/>
    <LinearGradientBrush x:Key="BlueVioletGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF7226AD" Offset="0"/>
        <GradientStop Color="{StaticResource BlueVioletSpreadColor}" Offset="1"/>
        <GradientStop Color="#FF6B1FA7" Offset="0.043"/>
        <GradientStop Color="#FF6B1FA7" Offset="0.091"/>
        <GradientStop Color="#FF6B1FA7" Offset="0.211"/>
        <GradientStop Color="#FF6B21A7" Offset="0.341"/>
        <GradientStop Color="#FF6B23A7" Offset="0.414"/>
        <GradientStop Color="#FF742DAF" Offset="0.573"/>
        <GradientStop Color="#FF7831B4" Offset="0.638"/>
        <GradientStop Color="#FF7D35B8" Offset="0.685"/>
        <GradientStop Color="#FF823ABD" Offset="0.737"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="BlueVioletUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF9545CE" Offset="0"/>
        <GradientStop Color="#00792DB1" Offset="0.543"/>
        <GradientStop Color="#FF8838C3" Offset="0.056"/>
        <GradientStop Color="#FF8234BE" Offset="0.112"/>
        <GradientStop Color="#FF7B2EB8" Offset="0.168"/>
        <GradientStop Color="#FF7728B3" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BlueVioletInnerWhiteBrush" Color="#FFB064E6"/>
    <RadialGradientBrush x:Key="BlueVioletBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FFBE72ED" Offset="0"/>
        <GradientStop Color="#00833DB8" Offset="0.974"/>
        <GradientStop Color="#FFB46AE5" Offset="0.073"/>
        <GradientStop Color="#FFAA60DC" Offset="0.151"/>
        <GradientStop Color="#FF9F57D3" Offset="0.237"/>
    </RadialGradientBrush>
    <Style x:Key="NuclearBlueVioletButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource BlueVioletBorderBrush}" Background="{x:Null}"/>
                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource BlueVioletGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" CornerRadius="2" Visibility="Visible" Opacity="0.6" BorderThickness="1" Background="{DynamicResource BlueVioletUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueVioletInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource BlueVioletBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0" Background="{DynamicResource BlueVioletGlassBrush}"/>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Color x:Key="RedBrownSpreadColor">#FFFE8B43</Color>
		<SolidColorBrush x:Key="RedBrownSpreadBrush" Color="{StaticResource RedBrownSpreadColor}"/>
    <SolidColorBrush x:Key="RedBrownBorderBrush" Color="#FFCA2810"/>
    <LinearGradientBrush x:Key="RedBrownGlassBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE2531D" Offset="0"/>
        <GradientStop Color="{StaticResource RedBrownSpreadColor}" Offset="1"/>
        <GradientStop Color="#FFDF4C17" Offset="0.043"/>
        <GradientStop Color="#FFDD4A17" Offset="0.091"/>
        <GradientStop Color="#FFDD4B17" Offset="0.211"/>
        <GradientStop Color="#FFDD4A16" Offset="0.341"/>
        <GradientStop Color="#FFDD4A17" Offset="0.414"/>
        <GradientStop Color="#FFE2511F" Offset="0.573"/>
        <GradientStop Color="#FFE15321" Offset="0.638"/>
        <GradientStop Color="#FFE55826" Offset="0.685"/>
        <GradientStop Color="#FFE85C2A" Offset="0.737"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="RedBrownUpperGlowBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFF77E4C" Offset="0"/>
        <GradientStop Color="#00E7512C" Offset="0.543"/>
        <GradientStop Color="#FFF36A40" Offset="0.056"/>
        <GradientStop Color="#FFF0633B" Offset="0.112"/>
        <GradientStop Color="#FFED5D36" Offset="0.168"/>
        <GradientStop Color="#FFE8562E" Offset="0.228"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RedBrownInnerWhiteBrush" Color="#FFFBAB5A"/>
    <RadialGradientBrush x:Key="RedBrownBottomGlowBrush" Center="0.501,0.99" GradientOrigin="0.501,0.99">
        <GradientStop Color="#FFFBBC5E" Offset="0"/>
        <GradientStop Color="#00E96438" Offset="0.974"/>
        <GradientStop Color="#FFF7B05A" Offset="0.073"/>
        <GradientStop Color="#FFF4A152" Offset="0.151"/>
        <GradientStop Color="#FFF0914C" Offset="0.237"/>
    </RadialGradientBrush>
    <Style x:Key="NuclearRedBrownButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrush}" />
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.8"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="UpperGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.6"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedGlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid x:Name="Grid">
                        <Border x:Name="BaseBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource RedBrownBorderBrush}" Background="{x:Null}"/>
                        <Border x:Name="GlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource RedBrownGlassBrush}"/>
                        <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2" Visibility="Visible" Opacity="0.6" Background="{DynamicResource RedBrownUpperGlowBrush}"/>
                        <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource RedBrownInnerWhiteBrush}" Margin="1" Opacity="0.5"/>
                        <Border x:Name="BottomGlowBorder" Margin="1" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource RedBrownBottomGlowBrush}"/>
                        <Border x:Name="PressedGlassBorder" Margin="1" BorderBrush="{x:Null}" CornerRadius="2" Opacity="0" Background="{DynamicResource RedBrownGlassBrush}"/>
                        <Border x:Name="DisabledBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" BorderBrush="{DynamicResource DisabledBorderBrush}" Background="#E5EEEEEE" Opacity="0"/>

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter Property="Background" TargetName="BaseBorder" Value="{DynamicResource FocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true" />
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true" />
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="GlassButton" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Template" Value="{DynamicResource GlassButtonTemplate}" />
        <Setter Property="Background" Value="{DynamicResource NormalBrushExtSimple}" />
        <Setter Property="BorderBrush" Value="#FFBBBFC4"/>
    </Style>

    <ControlTemplate x:Key="GlassButtonTemplate" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BottomGlowBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <Grid x:Name="Grid">
            <Grid.Effect>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.1"/>
            </Grid.Effect>
            <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="#FFA1A9B3" Background="{x:Null}" >
                <Border BorderBrush="#FFEFF1F5" BorderThickness="1">
                    <Grid>
                        <Border>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFDEE3EA" Offset="0"/>
                                    <GradientStop Color="#FFDEE5EC" Offset="1"/>
                                    <GradientStop Color="#FFD5DBE2" Offset="0.233"/>
                                    <GradientStop Color="#FFCFD7DE" Offset="0.422"/>
                                    <GradientStop Color="#FFD1D8DF" Offset="0.621"/>
                                    <GradientStop Color="#FFD9DEE6" Offset="0.81"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border x:Name="HoverBorder">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFF4F6F9" Offset="0"/>
                                    <GradientStop Color="#FFE7EAEF" Offset="1"/>
                                    <GradientStop Color="#FFE8ECF1" Offset="0.233"/>
                                    <GradientStop Color="#FFE3E8EE" Offset="0.422"/>
                                    <GradientStop Color="#FFE0E5EC" Offset="0.621"/>
                                    <GradientStop Color="#FFE5EBEF" Offset="0.81"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </Grid>
                </Border>
            </Border>
            <Border x:Name="PressedBorder" BorderThickness="1" Opacity="0" BorderBrush="#FF8E98A3">
                <Border BorderThickness="1">
                    <Border.Background>
                        <LinearGradientBrush EndPoint="0.5,1.021" StartPoint="0.5,0.031">
                            <GradientStop Color="#FFB3BAC2" Offset="0"/>
                            <GradientStop Color="#FFBFC6CE" Offset="1"/>
                            <GradientStop Color="#FFB8BFC7" Offset="0.056"/>
                            <GradientStop Color="#FFBCC3CB" Offset="0.112"/>
                            <GradientStop Color="#FFBFC6CE" Offset="0.168"/>
                        </LinearGradientBrush>
                    </Border.Background>
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FFA7ADB6" Offset="0"/>
                            <GradientStop Color="#FFB8BEC6" Offset="1"/>
                            <GradientStop Color="#FFB2B8C0" Offset="0.228"/>
                            <GradientStop Color="#FFB2B8C0" Offset="0.539"/>
                            <GradientStop Color="#FFB2B8C0" Offset="0.784"/>
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                </Border>
            </Border>
            <Border x:Name="DisabledBorder" IsHitTestVisible="False" Background="{DynamicResource DisabledBackgroundBrush}" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1" Opacity="0"/>
            <Border x:Name="BottomGlowBorder" BorderBrush="{x:Null}" Margin="0,0,0,2">
                <Border.Background>
                    <RadialGradientBrush Center="0.486,0.992" GradientOrigin="0.486,0.992" RadiusX="0.553" RadiusY="0.677">
                        <GradientStop Color="#FFEAEFF2" Offset="0"/>
                        <GradientStop Offset="1" Color="#00DAE0E5"/>
                    </RadialGradientBrush>
                </Border.Background>
            </Border>

            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true" />
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Opacity" TargetName="DisabledBorder" Value="1"/>
                <Setter Property="Effect" TargetName="Grid">
                    <Setter.Value>
                        <DropShadowEffect BlurRadius="5" Direction="270" Opacity="0" ShadowDepth="1"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <LinearGradientBrush x:Key="BlueLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF2360C1" Offset="0"/>
        <GradientStop Color="#FF4C8BD8" Offset="1"/>
        <GradientStop Color="#FF2C6DCE" Offset="0.047"/>
        <GradientStop Color="#FF3377DA" Offset="0.098"/>
        <GradientStop Color="#FF387DE0" Offset="0.15"/>
        <GradientStop Color="#FF3E82E5" Offset="0.291"/>
        <GradientStop Color="#FF5699E5" Offset="0.949"/>
        <GradientStop Color="#FF60A6F2" Offset="0.897"/>
        <GradientStop Color="#FF63AAF8" Offset="0.85"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BlueLeftTabItemHoverBrush" Color="#FFE8F2FC"/>


    <Style x:Key="BlueTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource BlueGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource BlueUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource BlueBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource BlueBorderBrush}" BorderThickness="0,1" Background="{DynamicResource BlueLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource BlueBorderBrush}" BorderThickness="1" Background="{DynamicResource BlueLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource BlueBorderBrush}" BorderThickness="0,1" Background="{DynamicResource BlueLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource BlueBorderBrush}" BorderThickness="1" Background="{DynamicResource BlueLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <Style x:Key="GreenTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource GreenBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource GreenGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource GreenUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource GreenInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource GreenBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource GreenBorderBrush}" BorderThickness="0,1" Background="{DynamicResource GreenLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource GreenBorderBrush}" BorderThickness="1" Background="{DynamicResource GreenLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource GreenBorderBrush}" BorderThickness="0,1" Background="{DynamicResource GreenLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource GreenBorderBrush}" BorderThickness="1" Background="{DynamicResource GreenLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <Style x:Key="OrangeTabItem" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource OrangeBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource OrangeGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource OrangeUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource OrangeInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource OrangeBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource OrangeBorderBrush}" BorderThickness="0,1" Background="{DynamicResource OrangeLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource OrangeBorderBrush}" BorderThickness="1" Background="{DynamicResource OrangeLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource OrangeBorderBrush}" BorderThickness="0,1" Background="{DynamicResource OrangeLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource OrangeBorderBrush}" BorderThickness="1" Background="{DynamicResource OrangeLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <Style x:Key="MagentaTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource MagentaBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource MagentaGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource MagentaUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource MagentaInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource MagentaBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource MagentaBorderBrush}" BorderThickness="0,1" Background="{DynamicResource MagentaLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource MagentaBorderBrush}" BorderThickness="1" Background="{DynamicResource MagentaLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource MagentaBorderBrush}" BorderThickness="0,1" Background="{DynamicResource MagentaLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource MagentaBorderBrush}" BorderThickness="1" Background="{DynamicResource MagentaLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <Style x:Key="PurpleRedTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource PurpleRedBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource PurpleRedGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource PurpleRedUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource PurpleRedInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource PurpleRedBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource PurpleRedBorderBrush}" BorderThickness="0,1" Background="{DynamicResource PurpleRedLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource PurpleRedBorderBrush}" BorderThickness="1" Background="{DynamicResource PurpleRedLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource PurpleRedBorderBrush}" BorderThickness="0,1" Background="{DynamicResource PurpleRedLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource PurpleRedBorderBrush}" BorderThickness="1" Background="{DynamicResource PurpleRedLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <Style x:Key="BlueVioletTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueVioletBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource BlueVioletGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource BlueVioletUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource BlueVioletInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource BlueVioletBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource BlueVioletBorderBrush}" BorderThickness="0,1" Background="{DynamicResource BlueVioletLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource BlueVioletBorderBrush}" BorderThickness="1" Background="{DynamicResource BlueVioletLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource BlueVioletBorderBrush}" BorderThickness="0,1" Background="{DynamicResource BlueVioletLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource BlueVioletBorderBrush}" BorderThickness="1" Background="{DynamicResource BlueVioletLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <Style x:Key="RedBrownTabItem" TargetType="{x:Type TabItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="InnerWhiteBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="GlassBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="BaseBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0"/>
                                <RotateTransform Angle="0"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource RedBrownBorderBrush}" Background="{x:Null}" Opacity="0"/>
                            <Border x:Name="GlassBorder" Margin="1,1,1,0" BorderBrush="{x:Null}" CornerRadius="2,2,0,0" Background="{DynamicResource RedBrownGlassBrush}" Opacity="0"/>
                            <Border x:Name="UpperGlowBorder" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="2" Visibility="Visible" Opacity="0" Background="{DynamicResource RedBrownUpperGlowBrush}"/>
                            <Border x:Name="InnerWhiteBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" BorderBrush="{DynamicResource RedBrownInnerWhiteBrush}" Margin="1,1,1,0" Opacity="0"/>
                            <Border x:Name="BottomGlowBorder" Margin="1,1,1,0" Opacity="0" BorderBrush="{x:Null}" CornerRadius="2" Background="{DynamicResource RedBrownBottomGlowBrush}"/>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <Grid x:Name="LeftOrientation" Margin="0,0,-1,0">
                                <Border x:Name="LeftSelectedBorder" BorderBrush="{DynamicResource RedBrownBorderBrush}" BorderThickness="0,1" Background="{DynamicResource RedBrownLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="LeftHoverBorder" BorderBrush="{DynamicResource RedBrownBorderBrush}" BorderThickness="1" Background="{DynamicResource RedBrownLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,0,-3,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0"/>
                            </Grid>
                            <Grid x:Name="RightOrientation" Margin="0,0,-1,0">
                                <Border x:Name="RightSelectedBorder" BorderBrush="{DynamicResource RedBrownBorderBrush}" BorderThickness="0,1" Background="{DynamicResource RedBrownLeftTabItemBrush}" Opacity="0" Margin="-2,0"/>
                                <Border x:Name="RightHoverBorder" BorderBrush="{DynamicResource RedBrownBorderBrush}" BorderThickness="1" Background="{DynamicResource RedBrownLeftTabItemHoverBrush}" CornerRadius="2" Margin="4,0" Opacity="0"/>
                                <Path x:Name="path1" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" Margin="-3,0,0,0" Width="9.55" Data="M123.17053,6.8444748 L113.62027,14.007296 123.17006,21.339854" Height="6" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="-1" ScaleY="1"/>
                                            <SkewTransform AngleX="0" AngleY="0"/>
                                            <RotateTransform Angle="0"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <ContentPresenter x:Name="ContentSite" HorizontalAlignment="Center" Margin="12,4" VerticalAlignment="Center" Content="{TemplateBinding Header}" ContentSource="Header" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentTemplate="{TemplateBinding HeaderTemplate}" RecognizesAccessKey="True"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightSelectedBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="path1" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right"/>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="180"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Left"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="LeftHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="TabStripPlacement" Value="Right"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="RightHoverBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="0"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100"/>
                            <Setter Property="Opacity" TargetName="BaseBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="GlassBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="0.3"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" SourceName="grid" Value="True"/>
                                <Condition Property="IsSelected" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="BottomGlowBorder" Value="0.8"/>
                            <Setter Property="Opacity" TargetName="InnerWhiteBorder" Value="1"/>
                            <Setter Property="Opacity" TargetName="UpperGlowBorder" Value="1"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
    </Style>

    <LinearGradientBrush x:Key="SmartListBackgroundBrush" EndPoint="1,0.5" StartPoint="0,0.5">
        <GradientStop Color="#FFEFF0F1" Offset="0"/>
        <GradientStop Color="#FFEFF0F1" Offset="1"/>
        <GradientStop Color="#FFF6F7F8" Offset="0.931"/>
        <GradientStop Color="White" Offset="0.112"/>
        <GradientStop Color="White" Offset="0.858"/>
        <GradientStop Color="#FFF6F7F8" Offset="0.056"/>
    </LinearGradientBrush>



    <Style x:Key="BlueTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource BlueTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource BlueSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource BlueBorderBrush}"/>
    </Style>

    <Style x:Key="GreenTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource GreenTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>

                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource GreenSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource GreenBorderBrush}"/>
    </Style>

    <Style x:Key="MagentaTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource MagentaTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource MagentaSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource MagentaBorderBrush}"/>
    </Style>

    <Style x:Key="GridSplitterPreviewStyle">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Fill="#80000000"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type GridSplitter}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridSplitter}">
                    <Grid Width="Auto">
                        <Border x:Name="RowBg" BorderBrush="#FFDDE7EE" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.52,0.896" StartPoint="0.52,0.108">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="#FFD8DBDF" Offset="1"/>
                                    <GradientStop Color="#FFDFE2E5" Offset="0.932"/>
                                    <GradientStop Color="#FFE7EAEC" Offset="0.859"/>
                                    <GradientStop Color="#FFEDEFF1" Offset="0.799"/>
                                    <GradientStop Color="#FFF2F4F5" Offset="0.731"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="Auto" Height="Auto" Margin="0,0,4,4" Visibility="Collapsed">
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="4.038,0,3.586,0.751" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="7.625,0,0,0.751" VerticalAlignment="Bottom" Height="2" Width="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Right" Margin="0,0,0.522,1.355" VerticalAlignment="Bottom" Width="2" Height="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Right" Margin="0,0,0.522,5.25" VerticalAlignment="Stretch" Width="2" Height="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,0,4.441,1.355" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,0,4.441,1.355" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                        </Grid>
                        <Grid x:Name="RowsGrid" VerticalAlignment="Center" HorizontalAlignment="Center" Width="Auto" Height="Auto" Visibility="Collapsed">
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="4.038,0,3.586,0.751" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="7.625,0,0,0.751" VerticalAlignment="Bottom" Height="2" Width="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Right" Margin="0,0,0.522,1.355" VerticalAlignment="Bottom" Width="2" Height="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,0,4.441,1.355" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,0,4.441,1.355" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="0.479,0,7.145,0.751" VerticalAlignment="Bottom" Height="2" Width="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="-0.375,0,8,1.355" VerticalAlignment="Bottom" Height="2" Width="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="11.57,0,-3.946,0.751" VerticalAlignment="Bottom" Height="2" Width="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="10.716,0,-3.092,1.355" VerticalAlignment="Bottom" Height="2" Width="2"/>
                        </Grid>
                        <Border x:Name="ColumnBg" BorderBrush="#FFDDE7EE" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.896,0.502" StartPoint="0.103,0.502">
                                    <GradientStop Color="White" Offset="0"/>
                                    <GradientStop Color="#FFD8DBDF" Offset="1"/>
                                    <GradientStop Color="#FFDFE2E5" Offset="0.932"/>
                                    <GradientStop Color="#FFE7EAEC" Offset="0.859"/>
                                    <GradientStop Color="#FFEDEFF1" Offset="0.799"/>
                                    <GradientStop Color="#FFF2F4F5" Offset="0.731"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Grid x:Name="ColumnsGrid" VerticalAlignment="Center" HorizontalAlignment="Center" Width="10" Height="Auto" Visibility="Collapsed">
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="3.71,0,3.915,1.558" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="3.706,0,3.918,-2.53" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.185,0,4.44,-1.926" VerticalAlignment="Bottom" Width="Auto" Height="2"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,0,4.441,2.346" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="4.038,4.739,3.586,6.198" VerticalAlignment="Stretch" Height="Auto" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,4.135,4.441,0" VerticalAlignment="Top" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="White" HorizontalAlignment="Stretch" Margin="4.038,0,3.586,10.333" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                            <Rectangle Fill="{x:Null}" Stroke="#FFB5BEC7" HorizontalAlignment="Stretch" Margin="3.184,0,4.44,10.937" VerticalAlignment="Bottom" Height="2" Width="2" d:LayoutOverrides="HorizontalAlignment"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeDirection" Value="Columns">
                            <Setter Property="Visibility" TargetName="ColumnsGrid" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="ColumnBg" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ResizeDirection" Value="Rows">
                            <Setter Property="Visibility" TargetName="RowsGrid" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="RowBg" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="PurpleRedTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource PurpleRedTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource PurpleRedSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource PurpleRedBorderBrush}"/>
    </Style>

    <Style x:Key="BlueVioletTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource BlueVioletTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource BlueVioletSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource BlueVioletBorderBrush}"/>
    </Style>

    <Style x:Key="RedBrownTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource RedBrownTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource RedBrownSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource RedBrownBorderBrush}"/>
    </Style>


    <Style x:Key="SmartListBox" TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SolidBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>
                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{DynamicResource SmartListBorderBrush}" Background="{DynamicResource SmartListBackgroundBrush}" />
                        <ScrollViewer Margin="1" Focusable="false">

                            <StackPanel Margin="2" IsItemsHost="true" />

                        </ScrollViewer>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource BlueBorderBrush}" Margin="-5,0" Background="{DynamicResource BlueLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource BlueBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource BlueLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="OrangeTabControl" TargetType="{x:Type TabControl}">
        <Setter Property="ItemContainerStyle" Value="{DynamicResource OrangeTabItem}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" Background="{x:Null}" x:Name="border" Margin="2,0,0,-4" Panel.ZIndex="100">
                            <Grid>
                                <Border x:Name="LeftOrientationBackground" Background="{DynamicResource SmartListBackgroundBrush}" Opacity="0" BorderBrush="{DynamicResource SmartListBorderBrush}" BorderThickness="1,1,0,1" />
                                <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                    <TabPanel.LayoutTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.LayoutTransform>
                                    <TabPanel.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </TabPanel.RenderTransform>
                                </TabPanel>
                            </Grid>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource TabControlTopBrush}">
                            <Grid>
                                <Border x:Name="border1" Height="2" VerticalAlignment="Top" CornerRadius="1,1,0,0" Background="{TemplateBinding Background}"/>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="2,-1,0,0"/>
                            <Setter Property="VerticalAlignment" TargetName="border1" Value="Bottom"/>
                            <Setter Property="CornerRadius" TargetName="border1" Value="0,0,1,1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlBottomBrush}"/>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlLeftBrush}"/>


                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="0"/>
                            <Setter Property="Opacity" TargetName="LeftOrientationBackground" Value="1"/>
                            <Setter Property="Background" TargetName="ContentPanel" Value="{DynamicResource TabControlRightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Direction="0" ShadowDepth="1" BlurRadius="10" Opacity="0.2" Color="Black"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource OrangeSpreadColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="{DynamicResource OrangeBorderBrush}"/>
    </Style>

    <SolidColorBrush x:Key="GreenLeftTabItemHoverBrush" Color="#FFEBF7E6"/>
    <LinearGradientBrush x:Key="GreenLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF25880F" Offset="0"/>
        <GradientStop Color="#FF57AA36" Offset="1"/>
        <GradientStop Color="#FF2A9211" Offset="0.047"/>
        <GradientStop Color="#FF31A113" Offset="0.098"/>
        <GradientStop Color="#FF35A714" Offset="0.15"/>
        <GradientStop Color="#FF38AB13" Offset="0.291"/>
        <GradientStop Color="#FF5AAB39" Offset="0.949"/>
        <GradientStop Color="#FF67C53B" Offset="0.897"/>
        <GradientStop Color="#FF72CE44" Offset="0.85"/>
    </LinearGradientBrush>
    <Style x:Key="GreenListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource GreenBorderBrush}" Margin="-5,0" Background="{DynamicResource GreenLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource GreenBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource GreenLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="OrangeLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFEEA21B" Offset="0"/>
        <GradientStop Color="#FFF1BC39" Offset="1"/>
        <GradientStop Color="#FFF4A71D" Offset="0.047"/>
        <GradientStop Color="#FFF9B424" Offset="0.098"/>
        <GradientStop Color="#FFFCBA26" Offset="0.15"/>
        <GradientStop Color="#FFFECB33" Offset="0.291"/>
        <GradientStop Color="#FFF7CF4C" Offset="0.949"/>
        <GradientStop Color="#FFFCDB52" Offset="0.897"/>
        <GradientStop Color="#FFFFE45B" Offset="0.85"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="OrangeLeftTabItemHoverBrush" Color="#FFF8F5E7"/>
    <Style x:Key="OrangeListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource OrangeBorderBrush}" Margin="-5,0" Background="{DynamicResource OrangeLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource OrangeBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource OrangeLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="MagentaLeftTabItemHoverBrush" Color="#FFF4E5F4"/>
    <LinearGradientBrush x:Key="MagentaLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF983099" Offset="0"/>
        <GradientStop Color="#FFBF5ABB" Offset="1"/>
        <GradientStop Color="#FFA435A0" Offset="0.047"/>
        <GradientStop Color="#FFAE38A5" Offset="0.098"/>
        <GradientStop Color="#FFB23AA9" Offset="0.15"/>
        <GradientStop Color="#FFBE44B2" Offset="0.291"/>
        <GradientStop Color="#FFC95DC1" Offset="0.953"/>
        <GradientStop Color="#FFD665CA" Offset="0.897"/>
        <GradientStop Color="#FFD860C9" Offset="0.85"/>
    </LinearGradientBrush>
    <Style x:Key="MagentaListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource MagentaBorderBrush}" Margin="-5,0" Background="{DynamicResource MagentaLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource MagentaBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource MagentaLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="PurpleRedLeftTabItemHoverBrush" Color="#FFF7E6EE"/>
    <LinearGradientBrush x:Key="PurpleRedLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFBA2358" Offset="0"/>
        <GradientStop Color="#FFD95070" Offset="1"/>
        <GradientStop Color="#FFC52A60" Offset="0.047"/>
        <GradientStop Color="#FFCE3066" Offset="0.098"/>
        <GradientStop Color="#FFD3346A" Offset="0.15"/>
        <GradientStop Color="#FFCC2962" Offset="0.291"/>
        <GradientStop Color="#FFE2597E" Offset="0.953"/>
        <GradientStop Color="#FFEA638D" Offset="0.897"/>
        <GradientStop Color="#FFEF6894" Offset="0.85"/>
    </LinearGradientBrush>
    <Style x:Key="PurpleRedListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource PurpleRedBorderBrush}" Margin="-5,0" Background="{DynamicResource PurpleRedLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource PurpleRedBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource PurpleRedLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="BlueVioletLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF7A34AF" Offset="0"/>
        <GradientStop Color="#FFAA64D5" Offset="1"/>
        <GradientStop Color="#FF853EBA" Offset="0.047"/>
        <GradientStop Color="#FF8E44C2" Offset="0.098"/>
        <GradientStop Color="#FF9448C6" Offset="0.15"/>
        <GradientStop Color="#FFA455D4" Offset="0.291"/>
        <GradientStop Color="#FFB76FE1" Offset="0.953"/>
        <GradientStop Color="#FFC277EA" Offset="0.897"/>
        <GradientStop Color="#FFC97EF0" Offset="0.85"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="BlueVioletLeftTabItemHoverBrush" Color="#FFEFE7F5"/>
    <Style x:Key="BlueVioletListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource BlueVioletBorderBrush}" Margin="-5,0" Background="{DynamicResource BlueVioletLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource BlueVioletBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource BlueVioletLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="RedBrownLeftTabItemBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFE14F26" Offset="0"/>
        <GradientStop Color="#FFE88843" Offset="1"/>
        <GradientStop Color="#FFE85B2C" Offset="0.047"/>
        <GradientStop Color="#FFEF6631" Offset="0.098"/>
        <GradientStop Color="#FFF36D35" Offset="0.15"/>
        <GradientStop Color="#FFF77C3C" Offset="0.291"/>
        <GradientStop Color="#FFF09E4F" Offset="0.953"/>
        <GradientStop Color="#FFF8AE56" Offset="0.897"/>
        <GradientStop Color="#FFFCB45A" Offset="0.85"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="RedBrownLeftTabItemHoverBrush" Color="#FFF8EEEA"/>
    <Style x:Key="RedBrownListBoxItem" d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid SnapsToDevicePixels="true" Margin="0,1">
                        <Border x:Name="SelectedBorder" Opacity="0" BorderThickness="1" BorderBrush="{DynamicResource RedBrownBorderBrush}" Margin="-5,0" Background="{DynamicResource RedBrownLeftTabItemBrush}"/>
                        <Border x:Name="HoverBorder" BorderThickness="1" BorderBrush="{DynamicResource RedBrownBorderBrush}" CornerRadius="3" Opacity="0" Margin="2,0">
                            <Border BorderThickness="1" CornerRadius="2" Background="{DynamicResource RedBrownLeftTabItemHoverBrush}">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                </Border.BorderBrush>
                            </Border>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="10,4,0,4" />
                        <Path x:Name="path" Fill="White" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Right" Margin="0,2.411,-6,2.963" Width="9.55" Data="M130.5914,10.056452 L122.10101,16.905813 130.59118,23.414248" Opacity="0"/>
                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" TargetName="HoverBorder" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                            <Setter Property="Opacity" TargetName="path" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Hyperlink}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="#FF000000" />

            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}"/>
                <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
        </Style.Triggers>
        <Setter Property="TextDecorations" Value="None"/>
        <Setter Property="Foreground" Value="{DynamicResource BlueSpreadBrush}"/>
        <Setter Property="Cursor" Value="Hand" />
    </Style>

    <Style x:Key="FlatTabs" TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border Background="{x:Null}" x:Name="border" Margin="0,0,0,-1" Panel.ZIndex="100" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" BorderThickness="1,0,0,0">
                            <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>

                            </TabPanel>
                        </Border>
                        <Border Grid.Row="1" x:Name="ContentPanel" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Background="{DynamicResource WhiteBrush}">
                            <Grid>
                                <ContentPresenter Margin="4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="border" Value="0,-1,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,-1,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,0,0" />
                            <Setter Property="BorderThickness" TargetName="border" Value="0,1,0,0" />

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="border" Value="-1,0,0,-4" />
                            <Setter Property="BorderThickness" TargetName="border" Value="0,1,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="FlatTabItem" d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="BaseBorder" BorderThickness="0,1,1,1" Opacity="1" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}">
                                <Border.Background>

                                    <SolidColorBrush Color="#FFE9EDF1" />

                                </Border.Background>
                            </Border>
                            <Border x:Name="SelectedBorder" BorderThickness="0,1,1,0" Opacity="0" BorderBrush="{DynamicResource TextBoxBorderHoverBrush}" Background="{DynamicResource WhiteBrush}" />
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="0,1,1,0" Background="#FFE9EDF1" Margin="0,0,0,1">
                                <Border BorderThickness="1,1,1,0" Background="{x:Null}" BorderBrush="White" />
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" Margin="12,4" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="BorderThickness" TargetName="BaseBorder" Value="1,1,0,1" />
                            <Setter Property="BorderThickness" TargetName="SelectedBorder" Value="1,1,0,0" />
                            <Setter Property="BorderThickness" TargetName="HoverBorder" Value="1,1,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="HoverBorder" Value="0,0,0,1" />
                            <Setter Property="BorderThickness" TargetName="BaseBorder" Value="1,1,0,1" />
                            <Setter Property="BorderThickness" TargetName="SelectedBorder" Value="1,1,0,0" />
                            <Setter Property="BorderThickness" TargetName="HoverBorder" Value="1,1,0,0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SmallWhiteTab" d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid x:Name="grid" Margin="2,1,2,3">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid>
                            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,0" CornerRadius="2,2,0,0" Opacity="0">
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Offset="0" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="1" />
                                        <GradientStop Offset="0.892" />
                                        <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.909" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border x:Name="Border" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.Background>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0" />
                                            <GradientStop Offset="1" Color="White" />
                                            <GradientStop Color="{DynamicResource ScrollBarButtonBorderColor}" Offset="0.914" />
                                            <GradientStop Offset="0.927" Color="White" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>

                                </Border>
                            </Border>
                            <Border x:Name="HoverBorder" Opacity="0" BorderBrush="{DynamicResource ScrollBarButtonBorderBrush}" BorderThickness="1" CornerRadius="2,2,0,0">
                                <Border BorderThickness="1,1,1,0" CornerRadius="1,1,0,0">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="White" Offset="0" />
                                            <GradientStop Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#19FFFFFF" Offset="0" />
                                            <GradientStop Color="White" Offset="1" />
                                            <GradientStop Color="#86FFFFFF" Offset="0.496" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                            </Border>
                            <ContentPresenter HorizontalAlignment="Center" Margin="8,1" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="HoverBorder" Value="0,0,0,1"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">

        <Grid x:Name="Grid">
            <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
            <Polygon x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,8,3,3" Fill="{DynamicResource GlyphBrush}" Stretch="Uniform" Points="0,10 10,10 10,0" />
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsDefault" Value="True">
                <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource MouseOverBorderBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="true">
                <Setter Property="Background" Value="{DynamicResource FocusedBrush}" TargetName="Border" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" Value="{DynamicResource PressedBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource PressedBorderBrush}" TargetName="Border" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="true" />
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="DataGridColumnHeader">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="border" Background="{DynamicResource NormalBrush}" Grid.ColumnSpan="2" BorderThickness="0,0,1,0" BorderBrush="#FF000000" />
                        <ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4">
                            <Path.Fill>
                                <SolidColorBrush Color="{DynamicResource BlackColor}" />
                            </Path.Fill>
                        </Path>
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MouseOverBrush}" />

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MouseOverBrush}" />

                        </MultiTrigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="DataGridRow">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Blue" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <Grid>
                        <Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="border" CornerRadius="2" BorderThickness="1" Background="{DynamicResource ListItemHoverBrush}" Opacity="0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.BorderBrush>
                                </Border>
                                <Border x:Name="SelectedBorder" Opacity="0" Background="{DynamicResource ListItemSelectedBackgroundBrush}" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" />
                                <SelectiveScrollingGrid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <DataGridRowHeader x:Name="RowHeader" Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                </SelectiveScrollingGrid>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                            <Setter Property="BorderBrush" TargetName="DGR_Border" Value="{DynamicResource MouseOverBorderBrush}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderThickness" Value="3" />
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="FontSize" Value="16" />

                            <Setter Property="Background" TargetName="RowHeader" Value="Red" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="DataGridCell">
        <Setter Property="Foreground" Value="#FF000000" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="DataGridRowHeader">
        <Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRowHeader">
                    <Grid>
                        <themes:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType=DataGrid}, 
                                    Path=HorizontalGridLinesBrush}" BorderThickness="0,1,0,0" Margin="0,-1,0,0" Padding="{TemplateBinding Padding}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Opacity="0.2">
                            <Grid>
                                <Border x:Name="border" CornerRadius="2" BorderThickness="1" Background="{DynamicResource ListItemHoverBrush}" Opacity="0">
                                    <Border.BorderBrush>
                                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                                    </Border.BorderBrush>
                                </Border>
                                <Border x:Name="SelectedBorder" Opacity="0" Background="{DynamicResource ListItemSelectedBackgroundBrush}" BorderThickness="1" CornerRadius="2" BorderBrush="{DynamicResource ListItemSelectedInsiderBorderBrush}" />

                                <StackPanel Orientation="Horizontal">
                                    <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                    <Control Template="{Binding Path=ValidationErrorTemplate, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGridRow}}" SnapsToDevicePixels="False">
                                        <Control.Visibility>
                                            <Binding Path="(Validation.HasError)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGridRow}">
                                                <Binding.Converter>
                                                    <BooleanToVisibilityConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </Control.Visibility>
                                    </Control>
                                </StackPanel>
                            </Grid>
                        </themes:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                    <Setter Property="Cursor" Value="SizeNS" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                    <Setter Property="Cursor" Value="SizeNS" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                        </Trigger>
                        <Trigger Property="IsRowSelected" Value="True">
                            <Setter Property="Opacity" TargetName="SelectedBorder" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowHeaderBackgroundStyle" TargetType="DataGridRowHeader">
        <Setter Property="Background" Value="Gray" />
    </Style>

    <Style TargetType="{x:Type CalendarItem}">
        <Setter Property="Background" Value="{DynamicResource WhiteBrush}" />
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock HorizontalAlignment="Center" Margin="0,6,0,6" VerticalAlignment="Center" FontFamily="Verdana" FontSize="9.5" FontWeight="Bold" Foreground="#FF333333" Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1">
                            <Border BorderBrush="#FFFFFFFF" BorderThickness="2,2,2,2" CornerRadius="1,1,1,1">
                                <Grid>
                                    <Grid.Resources>
                                        <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,4,1,9" x:Name="buttonContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                                                <Grid>
                                                    <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Right" Margin="0,-6,14,0" VerticalAlignment="Center" Width="6" Height="10" Data="M282.875,231.875L282.875,240.375 288.625,236z" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                        <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                            <Grid Cursor="Hand">
                                                <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                                                <Grid>
                                                    <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Left" Margin="14,-6,0,0" VerticalAlignment="Center" Width="6" Height="10" Data="M288.75,232.25L288.75,240.625 283,236.625z" />
                                                </Grid>
                                            </Grid>
                                        </ControlTemplate>
                                    </Grid.Resources>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Button HorizontalAlignment="Left" x:Name="PART_PreviousButton" Width="28" Height="20" Focusable="False" Grid.Column="0" Grid.Row="0">
                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                                                    <Border x:Name="BdrPrevious" Background="{DynamicResource NormalBrush}" CornerRadius="2" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" />
                                                    <Grid>
                                                        <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Height="10" Data="M288.75,232.25L288.75,240.625 283,236.625z" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="BdrPrevious" Value="{DynamicResource MouseOverBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="BdrPrevious" Value="{DynamicResource PressedBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Button HorizontalAlignment="Center" Height="20" x:Name="PART_HeaderButton" VerticalAlignment="Center" FontSize="10.5" FontWeight="Bold" Focusable="False" Grid.Column="1" Grid.Row="0">
                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <Border x:Name="BdrHeader" Background="{DynamicResource NormalBrush}" CornerRadius="2" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" />
                                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="14,4,14,4" x:Name="buttonContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="BdrHeader" Value="{DynamicResource MouseOverBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="BdrHeader" Value="{DynamicResource PressedBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Button HorizontalAlignment="Right" x:Name="PART_NextButton" Width="28" Height="20" Focusable="False" Grid.Column="2" Grid.Row="0">
                                        <Button.Template>
                                            <ControlTemplate TargetType="{x:Type Button}">
                                                <Grid Cursor="Hand">
                                                    <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                                                    <Border x:Name="BdrRight" Background="{DynamicResource NormalBrush}" CornerRadius="2" BorderBrush="{DynamicResource NormalBorderBrushExtSimple}" BorderThickness="1" />
                                                    <Grid>
                                                        <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Height="10" Data="M282.875,231.875L282.875,240.375 288.625,236z" />
                                                    </Grid>
                                                </Grid>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="BdrRight" Value="{DynamicResource MouseOverBrush}" />
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="BdrRight" Value="{DynamicResource PressedBrush}" />
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Button.Template>
                                    </Button>
                                    <Grid Margin="6,-1,6,6" x:Name="PART_MonthView" Visibility="Visible" Grid.ColumnSpan="3" Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                    <Grid Margin="6,3,7,6" x:Name="PART_YearView" Visibility="Hidden" Grid.ColumnSpan="3" Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                    </Grid>
                                </Grid>
                            </Border>
                        </Border>
                        <Rectangle Fill="#A5FFFFFF" Stretch="Fill" Stroke="#A5FFFFFF" StrokeThickness="1" RadiusX="2" RadiusY="2" x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=Calendar}}" Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=Calendar}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearCalendarButton" TargetType="CalendarButton">
        <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <Rectangle Fill="{DynamicResource MouseOverBrush}" RadiusX="1" RadiusY="1" x:Name="SelectedBackground" Opacity="0" Stroke="{DynamicResource MouseOverBorderBrush}" />
                        <Rectangle Fill="{x:Null}" RadiusX="1" RadiusY="1" x:Name="SelectedBackground_Copy" Opacity="0" Margin="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle Fill="{DynamicResource SelectedBackgroundBrush}" RadiusX="1" RadiusY="1" x:Name="Background" Opacity="0" />
                        <Rectangle RadiusX="1" RadiusY="1" x:Name="CalendarButtonFocusVisual" IsHitTestVisible="False" Visibility="Collapsed" Fill="{DynamicResource PressedBrush}" Stroke="{DynamicResource ListItemSelectedInsiderBorderBrush}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="SelectedBackground" Value="1" />
                            <Setter Property="Opacity" TargetName="SelectedBackground_Copy" Value="1" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearCalendarDayButton" TargetType="CalendarDayButton">
        <Setter Property="Background" Value="#FFBADDE9" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <Rectangle RadiusX="1" RadiusY="1" x:Name="TodayBackground" Opacity="0" Fill="{DynamicResource ListItemSelectedBackgroundBrush}" Stroke="{DynamicResource ListItemSelectedInsiderBorderBrush}">

                        </Rectangle>
                        <Rectangle Fill="{DynamicResource PressedBrush}" RadiusX="1" RadiusY="1" x:Name="SelectedBackground" Opacity="0" Stroke="{DynamicResource SelectedListItemBorderBrush}" />
                        <Rectangle Fill="{DynamicResource MouseOverBrush}" RadiusX="1" RadiusY="1" x:Name="Background" Opacity="0" Stroke="{DynamicResource MouseOverBorderBrush}" />
                        <Rectangle Fill="{DynamicResource MouseOverBrush}" RadiusX="1" RadiusY="1" x:Name="Background_Copy" Opacity="0" Margin="1">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Path Fill="#FF000000" Stretch="Fill" HorizontalAlignment="Stretch" Margin="3,3,3,3" x:Name="Blackout" VerticalAlignment="Stretch" Opacity="0" RenderTransformOrigin="0.5,0.5" Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z" />
                        <Rectangle Stroke="#FF45D6FA" RadiusX="1" RadiusY="1" x:Name="DayButtonFocusVisual" IsHitTestVisible="False" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" TargetName="Background" Value="1" />
                            <Setter Property="Opacity" TargetName="Background_Copy" Value="1" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Opacity" TargetName="SelectedBackground" Value="1" />
                        </Trigger>
                        <Trigger Property="IsToday" Value="True">
                            <Setter Property="Opacity" TargetName="TodayBackground" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="NuclearCalendar" TargetType="Calendar">
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource NuclearCalendarButton}" />
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource NuclearCalendarDayButton}" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Calendar">
                    <StackPanel HorizontalAlignment="Center" x:Name="PART_Root" Background="{x:Null}">
                        <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Calendar">
        <Setter Property="CalendarButtonStyle" Value="{DynamicResource NuclearCalendarButton}" />
        <Setter Property="CalendarDayButtonStyle" Value="{DynamicResource NuclearCalendarDayButton}" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Calendar">
                    <StackPanel HorizontalAlignment="Center" x:Name="PART_Root" Background="{x:Null}">
                        <CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="CalendarStyle" Value="{DynamicResource NuclearCalendar}" />
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Padding" Value="2,2,2,2" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="2">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Root" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*" />
                                                <RowDefinition Height="19*" />
                                                <RowDefinition Height="19*" />
                                                <RowDefinition Height="19*" />
                                            </Grid.RowDefinitions>
                                            <Border Margin="-1,-1,-1,-1" x:Name="Highlight" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#FF45D6FA" BorderThickness="1,1,1,1" CornerRadius="0,0,1,1" />
                                            <Border Margin="0,-1,0,0" x:Name="Background" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" />
                                            <Border Margin="0,-1,0,0" x:Name="BackgroundGradient" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="#BF000000" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                        <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD" />
                                                        <GradientStop Color="#FFAFCFEA" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949" />
                                                        <GradientStop Color="#FF9F9F9F" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" />
                                            <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="3" Height="3" Grid.ColumnSpan="4" />
                                            <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button HorizontalAlignment="Left" Margin="3,0,3,0" x:Name="PART_Button" VerticalAlignment="Top" Width="20" Foreground="{TemplateBinding Foreground}" Focusable="False" Grid.Column="1" Grid.Row="0">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Grid>
                                            <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                </Grid.RowDefinitions>
                                                <Border Margin="-1,-1,-1,-1" x:Name="Highlight" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#FF45D6FA" BorderThickness="1,1,1,1" CornerRadius="0,0,1,1" />
                                                <Border Margin="0,-1,0,0" x:Name="Background" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" />
                                                <Border Margin="0,-1,0,0" x:Name="BackgroundGradient" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5">
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                            <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                            <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                            <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Border x:Name="BackgroundGradient_Copy" Opacity="0" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" HorizontalAlignment="Stretch" Grid.ColumnSpan="4" Grid.RowSpan="3" Grid.Row="1" Background="{DynamicResource MouseOverBrush}" />
                                                <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" />
                                                <Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" />
                                                <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="3" Height="3" Grid.ColumnSpan="4" />
                                                <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5" />
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Opacity" TargetName="BackgroundGradient_Copy" Value="1" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <DatePickerTextBox x:Name="PART_TextBox" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="0" Grid.Row="0" Template="{DynamicResource NuclearDatePickerTextBox}" />
                            <Grid x:Name="PART_DisabledVisual" IsHitTestVisible="False" Opacity="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Grid.Column="0" Grid.Row="0" />
                                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Margin="3,0,3,0" Width="19" Height="18" Grid.Column="1" Grid.Row="0" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="NuclearDatePickerTextBox" TargetType="DatePickerTextBox">
        <Grid>
            <Grid.Resources>
                <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA" />
            </Grid.Resources>
            <Border x:Name="Border" Opacity="1" Background="{TemplateBinding Background}" BorderBrush="{DynamicResource TextBoxBorderBrush}" BorderThickness="1" CornerRadius="3,3,3,3" Padding="{TemplateBinding Padding}">
                <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="WatermarkContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="3,0,0,0">
                    <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" />
                    <Border BorderBrush="{x:Null}" BorderThickness="1,1,1,1">
                        <ContentControl x:Name="PART_Watermark" Content="Show Calendar" Padding="2,2,2,2" Focusable="False" IsHitTestVisible="False" Opacity="0" Style="{DynamicResource ContentControlStyle1}" />
                    </Border>
                    <ScrollViewer Margin="0,0,0,0" x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <Border x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF45D6FA" CornerRadius="1,1,1,1" />
                </Grid>
            </Border>
            <Border IsHitTestVisible="False" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" Opacity="0" x:Name="border">

            </Border>
            <Border x:Name="HoverBorder" BorderThickness="1" Padding="2" CornerRadius="2" Background="{x:Null}" Opacity="0" BorderBrush="{DynamicResource TextBoxHoverBorderBrush}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="Opacity" TargetName="border" Value="0.7" />
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Opacity" TargetName="border" Value="0.5" />
                <Setter Property="Opacity" TargetName="HoverBorder" Value="1" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <Button Template="{StaticResource SelectAllButtonTemplate}" Command="{x:Static DataGrid.SelectAllCommand}" Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=CellsPanelHorizontalOffset}" Focusable="false" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, 
											Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter},
											 ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                            <DataGridColumnHeadersPresenter.Visibility>
                                                <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}">
                                                    <Binding.ConverterParameter>
                                                        <DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
                                                    </Binding.ConverterParameter>
                                                </Binding>
                                            </DataGridColumnHeadersPresenter.Visibility>
                                        </DataGridColumnHeadersPresenter>
                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
                                        <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Grid Grid.Column="1" Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding Path=NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType=DataGrid}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>