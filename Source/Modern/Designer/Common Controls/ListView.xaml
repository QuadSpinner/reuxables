<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


	<!--  Global Resources  -->
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Resources/Palette.xaml" />
		<ResourceDictionary Source="../Resources/Variables.xaml" />
		<ResourceDictionary Source="../Internal/Consolidated.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<!--  Styles  -->


	<Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Focusable" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top"
							              Focusable="false"
							              HorizontalScrollBarVisibility="Hidden"
							              VerticalScrollBarVisibility="Hidden">
								<GridViewHeaderRowPresenter Margin="2,0,2,0"
								                            AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder,
								                                                          RelativeSource={RelativeSource TemplatedParent}}"
								                            ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle,
								                                                                 RelativeSource={RelativeSource TemplatedParent}}"
								                            ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu,
								                                                              RelativeSource={RelativeSource TemplatedParent}}"
								                            ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat,
								                                                               RelativeSource={RelativeSource TemplatedParent}}"
								                            ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate,
								                                                           RelativeSource={RelativeSource TemplatedParent}}"
								                            ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector,
								                                                                   RelativeSource={RelativeSource TemplatedParent}}"
								                            ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip,
								                                                          RelativeSource={RelativeSource TemplatedParent}}"
								                            Columns="{Binding TemplatedParent.View.Columns,
								                                              RelativeSource={RelativeSource TemplatedParent}}"
								                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
							                        CanContentScroll="{TemplateBinding CanContentScroll}"
							                        Content="{TemplateBinding Content}"
							                        ContentTemplate="{TemplateBinding ContentTemplate}"
							                        KeyboardNavigation.DirectionalNavigation="Local"
							                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</DockPanel>
						<ScrollBar x:Name="PART_HorizontalScrollBar"
						           Grid.Row="1"
						           Cursor="Arrow"
						           Maximum="{TemplateBinding ScrollableWidth}"
						           Minimum="0.0"
						           Orientation="Horizontal"
						           ViewportSize="{TemplateBinding ViewportWidth}"
						           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
						           Value="{Binding HorizontalOffset,
						                           Mode=OneWay,
						                           RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar x:Name="PART_VerticalScrollBar"
						           Grid.Column="1"
						           Cursor="Arrow"
						           Maximum="{TemplateBinding ScrollableHeight}"
						           Minimum="0.0"
						           Orientation="Vertical"
						           ViewportSize="{TemplateBinding ViewportHeight}"
						           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
						           Value="{Binding VerticalOffset,
						                           Mode=OneWay,
						                           RelativeSource={RelativeSource TemplatedParent}}" />
						<DockPanel Grid.Row="1"
						           Grid.Column="1"
						           Background="{Binding Background,
						                                ElementName=PART_VerticalScrollBar}"
						           LastChildFill="false">
							<Rectangle Width="1"
							           DockPanel.Dock="Left"
							           Fill="White"
							           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
							<Rectangle Height="1"
							           DockPanel.Dock="Top"
							           Fill="White"
							           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						</DockPanel>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{StaticResource BGPressed}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderPressed}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{StaticResource Text}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                       
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>
                    </Border>
                    <!--<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsGrouping" Value="true" />
								<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
						</MultiTrigger>
					</ControlTemplate.Triggers>-->
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="ListViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle RadiusX="2"
					           RadiusY="2"
					           Stroke="#8E6EA6F5"
					           StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type ListViewItem}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="Background" Value="{StaticResource BGPressed}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderPressed}" />
        <Setter Property="Foreground" Value="{StaticResource Text}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
                    <Grid x:Name="grid">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(Rectangle.Stroke)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BorderHover}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                       
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InvalidBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="InvalidBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="MainBorder" Fill="{TemplateBinding Background}" SnapsToDevicePixels="true" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="FocusBorder" Opacity="0" Stroke="{StaticResource BorderFocused}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="SelectBorder" Opacity="0" Stroke="{StaticResource BorderFocused}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle x:Name="InvalidBorder" Opacity="0" Stroke="{StaticResource BorderInvalid}" StrokeThickness="{TemplateBinding BorderThickness}" />
                        <Rectangle Margin="1" Stroke="{StaticResource ResourceKey=BorderDarkPressed}" StrokeThickness="1" />
                        <GridViewRowPresenter x:Name="contentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <!--<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Background" Value="{StaticResource ListItemHoverFill}" />
							<Setter Property="BorderBrush" Value="#FFCCF0FF" />
							<Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="{StaticResource ListItemSelectedFill}" />
							<Setter Property="BorderBrush" Value="#FF98DDFB" />
							<Setter TargetName="InnerBorder" Property="BorderBrush" Value="#80FFFFFF" />
							<Setter TargetName="UpperHighlight" Property="Visibility" Value="Visible" />
							<Setter TargetName="UpperHighlight" Property="Fill" Value="#40FFFFFF" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="Selector.IsSelectionActive" Value="false" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ListItemSelectedInactiveFill}" />
							<Setter Property="BorderBrush" Value="#FFCFCFCF" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="true" />
								<Condition Property="IsMouseOver" Value="true" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource ListItemSelectedHoverFill}" />
							<Setter Property="BorderBrush" Value="#FF98DDFB" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
						</Trigger>
					</ControlTemplate.Triggers>-->
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!-- -->

    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="#00FFFFFF">
                        <Rectangle HorizontalAlignment="Center" Width="0.5">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{StaticResource BG}" />
        <Setter Property="BorderBrush" Value="{StaticResource BorderLight}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground" Value="{DynamicResource Text}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Margin="0,1,0,1" x:Name="grid">
                        <VisualStateManager.VisualStateGroups>

                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BorderHover}" />
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(Panel.Background)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BGPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BorderPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderLight" Storyboard.TargetProperty="(Border.BorderBrush)">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BorderDarkPressed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                       
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                       
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid>

                            <Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{StaticResource Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="BorderLight" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1">
                                    <ContentPresenter x:Name="contentPresenter" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />
                            </Border>
                            </Border>
                        </Grid>
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" HorizontalAlignment="Stretch" />
                        </Canvas>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Background" Value="Transparent" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource MouseOverBrush}" />
                            <Setter Property="Opacity" TargetName="Main" Value="0.6" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />
                            <Setter Property="Background" Value="SkyBlue" />
                            <Setter Property="BorderBrush" TargetName="Main" Value="{DynamicResource PressedBorderBrush}" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource LightBrush}" />
                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background" TargetName="Main" Value="{DynamicResource DisabledBackgroundBrush}" />
                            <Setter Property="Opacity" TargetName="grid" Value="0.7" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Yellow" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>