<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit"
xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" xmlns:d="http://schemas.microsoft.com/expression/blend/2008">

  <!--
  REUXABLES THEMES
  
  Copyright (C) 2007-2009 Nukeation Studios. All rights reserved.
  
  This file is protected by the End-User License Agreement provided at:
  http://reuxables.nukeation.com/files/license.txt
  
  THIS FILE MUST BE COMPILED WITH YOUR EXECUTABLE / ASSEMBLY BEFORE BEING DISTRIBUTED
  THIS NOTICE MUST REMAIN INTACT. DO NOT REMOVE!
  -->

<!-- Data Grid -->

<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

 <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                    Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	<!-- DataGrid Column Header -->

    <Style  TargetType="{x:Type Custom:DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridColumnHeader}" >
				<ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
				<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
						<Border x:Name="MainBorder" Padding="{TemplateBinding Padding}" Background="{DynamicResource NormalBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" CornerRadius="0,0,0,0" BorderThickness="1,1,1,1" Grid.ColumnSpan="2" />
                            <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Padding="{TemplateBinding Padding}" Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource HighlightBorderBrush}" CornerRadius="0,0,0,0" Grid.ColumnSpan="2" >
                                <Border.OpacityMask>
                                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.OpacityMask>
                            </Border>
                            <Border x:Name="SortBorder" BorderThickness="1,1,1,1" Padding="{TemplateBinding Padding}" Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource HighlightBorderBrush}" CornerRadius="0,0,0,0" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" Opacity="0" />
                            <Rectangle Opacity="1" Stroke="{x:Null}" RadiusX="0" RadiusY="0" Margin="1,1,1,1" VerticalAlignment="Stretch" Height="Auto" x:Name="Shine" Fill="{DynamicResource ShineBrush}" Grid.ColumnSpan="2"/>

                            <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" Grid.ColumnSpan="2">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                                </Border.BorderBrush>
                                
                            </Border>
						
					<ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
					<Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
						Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" 
						VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
					<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" 
						Style="{StaticResource ColumnHeaderGripperStyle}"/>
					<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" 
						Style="{StaticResource ColumnHeaderGripperStyle}"/>
				</Grid>
				<ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}">
                            
                        </Trigger>
                        <MultiTrigger>
                        	<MultiTrigger.ExitActions>
                        		<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                        	</MultiTrigger.ExitActions>
                        	<MultiTrigger.EnterActions>
                        		<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                        	</MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                        	
                            
                        </MultiTrigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="SortBorder" Value="1"/>
                            
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter Property="Opacity" TargetName="SortBorder" Value="1"/>
                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" 
                                    TargetName="PART_LeftHeaderGripper"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
    </Style>
	
	<!-- DataGrid Row Style -->
		    <Style  TargetType="{x:Type Custom:DataGridRow}">
			<Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFFF0000" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridRow}">
				<ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
					</ControlTemplate.Resources>
				<Grid>
				<Border x:Name="MainBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" Padding="0,0,0,0" />
                            <Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
                                        <GradientStop Color="#19C8D6F3" Offset="0.0"/>
                                        <GradientStop Color="{DynamicResource MainColorBottomGradient}" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.OpacityMask>
                                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#FF000000" Offset="0"/>
                                        <GradientStop Color="#FF000000" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.OpacityMask>
                            </Border>
                            <Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource HighlightBorderBrush}" CornerRadius="0,0,0,0" >
                                <Border.OpacityMask>
                                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                                        <RadialGradientBrush.RelativeTransform>
                                            <TransformGroup>
                                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                                <TranslateTransform X="0" Y="0"/>
                                            </TransformGroup>
                                        </RadialGradientBrush.RelativeTransform>
                                        <GradientStop Color="#00000000" Offset="0"/>
                                        <GradientStop Color="#00000000" Offset="1"/>
                                    </RadialGradientBrush>
                                </Border.OpacityMask>
                            </Border>
				<Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <Custom:SelectiveScrollingGrid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Custom:DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            <Custom:DataGridRowHeader x:Name="RowHeader" Custom:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"  Grid.RowSpan="2" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Custom:DataGrid}},  Path=HeadersVisibility, Converter={x:Static Custom:DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static Custom:DataGridHeadersVisibility.Row}}"/>
                        </Custom:SelectiveScrollingGrid>
                    </Border>
					</Grid>
                    <ControlTemplate.Triggers>
                		<Trigger Property="IsMouseOver" Value="True">
                			<Trigger.ExitActions>
                				<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
                			</Trigger.ExitActions>
                			<Trigger.EnterActions>
                				<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                			</Trigger.EnterActions>
                		</Trigger>
                		<Trigger Property="Validation.HasError" Value="True" >
                			<Setter Property="BorderThickness" Value="3" /> 
                			<Setter Property="BorderBrush" Value="Red" /> 
                			<Setter Property="Foreground" Value="Blue" />
                			<Setter Property="FontSize" Value="16" />

                			<Setter Property="Background" TargetName="RowHeader" Value="Red" />
                		</Trigger>

                		<Trigger Property="IsSelected" Value="True">
                			<Trigger.ExitActions>
                				<BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
                			</Trigger.ExitActions>
                			<Trigger.EnterActions>
                				<BeginStoryboard x:Name="SelectedOn_BeginStoryboard" Storyboard="{StaticResource SelectedOn}"/>
                			</Trigger.EnterActions>
                		</Trigger>
               	</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
        <Setter Property="Background" Value="#00FFFFFF"/>
        <Setter Property="Foreground">
        	<Setter.Value>
        		<SolidColorBrush Color="{DynamicResource BlackColor}"/>
        	</Setter.Value>
        </Setter>
		</Style>

<!-- DataGrid Cell Style -->

    <Style TargetType="{x:Type Custom:DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridCell}">
                    <Border Background="Transparent" 
                  BorderBrush="{TemplateBinding BorderBrush}"  
                  BorderThickness="0" 
                  SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
                  Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
    <!-- DataGrid Row Header -->

    <Style TargetType="{x:Type Custom:DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridRowHeader}">
                    <Grid>
                        <Custom:DataGridHeaderBorder 
						Background="{TemplateBinding Background}" BorderBrush="{Binding RelativeSource={RelativeSource AncestorType={x:Type Custom:DataGrid}}, 
                                    Path=HorizontalGridLinesBrush}"                                     
                                 BorderThickness="0,1,0,0" Margin="0,-1,0,0" Padding="{TemplateBinding Padding}" IsHovered="{TemplateBinding IsMouseOver}"
								  IsPressed="{TemplateBinding IsPressed}" IsSelected="{TemplateBinding IsRowSelected}" 
								  Orientation="Horizontal" SeparatorBrush="{TemplateBinding SeparatorBrush}" 
								  SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Opacity="0.2">
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                <Control Template="{Binding Path=ValidationErrorTemplate, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGridRow}}}" SnapsToDevicePixels="False">
                                    <Control.Visibility>
                                        <Binding Path="(Validation.HasError)" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGridRow}}">
                                            <Binding.Converter>
                                                <BooleanToVisibilityConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </Control.Visibility>
                                </Control>
                            </StackPanel>
                        </Custom:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                    <Setter Property="Cursor" Value="SizeNS" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                    <Setter Property="Cursor" Value="SizeNS" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowHeaderBackgroundStyle" TargetType="{x:Type Custom:DataGridRowHeader}">
        <Setter Property="Background" Value="Gray" />
    </Style>
	
	<!-- Calendar Controls -->
	
	<Style x:Key="NuclearCalendar" TargetType="{x:Type Custom:Calendar}">
	 	<Setter Property="Foreground" Value="#FF333333"/>
	 		
	 	<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
	 	<Setter Property="BorderThickness" Value="1,1,1,1"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:Calendar}">
	 				<StackPanel HorizontalAlignment="Center" x:Name="PART_Root" Background="{x:Null}">
	 					<Custom:CalendarItem x:Name="PART_CalendarItem"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
	 				</StackPanel>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	
	 <Style TargetType="{x:Type Custom:Calendar}">
	 	<Setter Property="Foreground" Value="#FF333333"/>
	 		
	 	<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
	 	<Setter Property="BorderThickness" Value="1,1,1,1"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:Calendar}">
	 				<StackPanel HorizontalAlignment="Center" x:Name="PART_Root" Background="{x:Null}">
	 					<Custom:CalendarItem x:Name="PART_CalendarItem"  BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"/>
	 				</StackPanel>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 
	 <Style TargetType="{x:Type Custom:CalendarItem}">
	 	<Setter Property="Background" Value="#FFFFFFFF" />
	 	<Setter Property="Margin" Value="0,3,0,3"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:CalendarItem}">
	 				<ControlTemplate.Resources>
	 					<DataTemplate x:Key="DayTitleTemplate">
	 						<TextBlock HorizontalAlignment="Center" Margin="0,6,0,6" VerticalAlignment="Center" FontFamily="Verdana" FontSize="9.5" FontWeight="Bold" Foreground="#FF333333" Text="{Binding}"/>
	 					</DataTemplate>
	 				</ControlTemplate.Resources>
	 				<Grid x:Name="PART_Root">
	 					<Grid.Resources>
	 						<SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF"/>
	 					</Grid.Resources>
	 					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1">
	 						<Border BorderBrush="#FFFFFFFF" BorderThickness="2,2,2,2" CornerRadius="1,1,1,1">
	 							<Grid>
	 								<Grid.Resources>
	 									<ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
	 										<Grid Cursor="Hand">
	 											<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,4,1,9" x:Name="buttonContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
											</Grid>
	 									</ControlTemplate>
	 									<ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
	 										<Grid Cursor="Hand">
	 											<Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1"/>
	 											<Grid>
	 												<Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Right" Margin="0,-6,14,0" VerticalAlignment="Center" Width="6" Height="10" Data="M282.875,231.875L282.875,240.375 288.625,236z"/>
	 											</Grid>
	 										</Grid>
	 									</ControlTemplate>
	 									<ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
	 										<Grid Cursor="Hand">
	 											<Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1"/>
	 											<Grid>
	 												<Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Left" Margin="14,-6,0,0" VerticalAlignment="Center" Width="6" Height="10" Data="M288.75,232.25L288.75,240.625 283,236.625z"/>
	 											</Grid>
	 										</Grid>
	 									</ControlTemplate>
	 								</Grid.Resources>
	 								<Grid.ColumnDefinitions>
	 									<ColumnDefinition Width="Auto"/>
	 									<ColumnDefinition Width="Auto"/>
	 									<ColumnDefinition Width="Auto"/>
	 								</Grid.ColumnDefinitions>
	 								<Grid.RowDefinitions>
	 									<RowDefinition Height="Auto"/>
	 									<RowDefinition Height="*"/>
	 								</Grid.RowDefinitions>
	 								<Button HorizontalAlignment="Left" x:Name="PART_PreviousButton" Width="28" Height="20" Focusable="False" Grid.Column="0" Grid.Row="0">
	 									<Button.Template>
	 										<ControlTemplate TargetType="{x:Type Button}">
											<ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
	 											<Grid Cursor="Hand">
	 												<Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5"/>
            <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5" Background="{DynamicResource HoverBrush}">
                <Border.OpacityMask>
                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="#00000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                    </RadialGradientBrush>
                </Border.OpacityMask>
            </Border>
	 												<Grid>
	 													<Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Center"  VerticalAlignment="Center" Width="6" Height="10" Data="M288.75,232.25L288.75,240.625 283,236.625z"/>
	 												</Grid>
	 											</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                </Trigger.EnterActions>
            </Trigger>
												</ControlTemplate.Triggers>
	 										</ControlTemplate>
	 									</Button.Template>
	 								</Button>
	 								<Button HorizontalAlignment="Center" x:Name="PART_HeaderButton" VerticalAlignment="Center" FontSize="10.5" FontWeight="Bold" Focusable="False" Grid.Column="1" Grid.Row="0">
	 									<Button.Template>
	 										<ControlTemplate TargetType="{x:Type Button}">
											<ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
	 											<Grid Cursor="Hand">
												<Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5"/>
            <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5" Background="{DynamicResource HoverBrush}">
                <Border.OpacityMask>
                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="#00000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                    </RadialGradientBrush>
                </Border.OpacityMask>
            </Border>
	 												<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="14,4,14,4" x:Name="buttonContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
	 											</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                </Trigger.EnterActions>
            </Trigger>
												</ControlTemplate.Triggers>
	 										</ControlTemplate>
	 									</Button.Template>
	 								</Button>
	 								<Button HorizontalAlignment="Right" x:Name="PART_NextButton" Width="28" Height="20" Focusable="False" Grid.Column="2" Grid.Row="0">
	 									<Button.Template>
	 										<ControlTemplate TargetType="{x:Type Button}">
											<ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
	 											<Grid Cursor="Hand">
	 												<Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5"/>
            <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5,5,5,5" Background="{DynamicResource HoverBrush}">
                <Border.OpacityMask>
                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="#00000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                    </RadialGradientBrush>
                </Border.OpacityMask>
            </Border>
	 												<Grid>
	 													<Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Height="10" Data="M282.875,231.875L282.875,240.375 288.625,236z"/>
	 												</Grid>
	 											</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOff}" x:Name="PressedOff_BeginStoryboard"/>
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource PressedOn}" x:Name="PressedOn_BeginStoryboard"/>
                </Trigger.EnterActions>
            </Trigger>
												</ControlTemplate.Triggers>
	 										</ControlTemplate>
	 									</Button.Template>
	 								</Button>
	 								<Grid Margin="6,-1,6,6" x:Name="PART_MonthView" Visibility="Visible" Grid.ColumnSpan="3" Grid.Row="1">
	 									<Grid.ColumnDefinitions>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 									</Grid.ColumnDefinitions>
	 									<Grid.RowDefinitions>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 									</Grid.RowDefinitions>
	 								</Grid>
	 								<Grid Margin="6,3,7,6" x:Name="PART_YearView" Visibility="Hidden" Grid.ColumnSpan="3" Grid.Row="1">
	 									<Grid.ColumnDefinitions>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="Auto"/>
	 									</Grid.ColumnDefinitions>
	 									<Grid.RowDefinitions>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="Auto"/>
	 									</Grid.RowDefinitions>
	 								</Grid>
	 							</Grid>
	 						</Border>
	 					</Border>
	 					<Rectangle Fill="#A5FFFFFF" Stretch="Fill" Stroke="#A5FFFFFF" StrokeThickness="1" RadiusX="2" RadiusY="2" x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed"/>
	 				</Grid>
	 				<ControlTemplate.Triggers>
	 					<Trigger Property="IsEnabled" Value="False">
	 						<Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible"/>
	 					</Trigger>
	 					<DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:Calendar}}}" Value="Year">
	 						<Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
	 						<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
	 					</DataTrigger>
	 					<DataTrigger Binding="{Binding Path=DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:Calendar}}}" Value="Decade">
	 						<Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden"/>
	 						<Setter Property="Visibility" TargetName="PART_YearView" Value="Visible"/>
	 					</DataTrigger>
	 				</ControlTemplate.Triggers>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 
	 <Style x:Key="NuclearCalendarButton" TargetType="{x:Type Custom:CalendarButton}">
	 	<Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
	 	<Setter Property="MinWidth" Value="40"/>
	 	<Setter Property="MinHeight" Value="42"/>
	 	<Setter Property="FontSize" Value="10"/>
	 	<Setter Property="HorizontalContentAlignment" Value="Center"/>
	 	<Setter Property="VerticalContentAlignment" Value="Center"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:CalendarButton}">
				<ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
					</ControlTemplate.Resources>
	 				<Grid>
	 					<Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
	 						<Border.Background>
	 							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
	 								<GradientStop Color="#19C8D6F3" Offset="0.0"/>
	 								<GradientStop Color="{DynamicResource MainColorBottomGradient}" Offset="1.0"/>
	 							</LinearGradientBrush>
	 						</Border.Background>
	 						<Border.OpacityMask>
	 							<RadialGradientBrush GradientOrigin="0.503,0.938">
	 								<RadialGradientBrush.RelativeTransform>
	 									<TransformGroup>
	 										<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
	 										<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
	 										<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
	 										<TranslateTransform X="0" Y="0"/>
	 									</TransformGroup>
	 								</RadialGradientBrush.RelativeTransform>
	 								<GradientStop Color="#FF000000" Offset="0"/>
	 								<GradientStop Color="#FF000000" Offset="1"/>
	 							</RadialGradientBrush>
	 						</Border.OpacityMask>
	 					</Border>
	 					<Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
	 						<Border.OpacityMask>
	 							<RadialGradientBrush GradientOrigin="0.503,0.938">
	 								<RadialGradientBrush.RelativeTransform>
	 									<TransformGroup>
	 										<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
	 										<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
	 										<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
	 										<TranslateTransform X="0" Y="0"/>
	 									</TransformGroup>
	 								</RadialGradientBrush.RelativeTransform>
	 								<GradientStop Color="#00000000" Offset="0"/>
	 								<GradientStop Color="#00000000" Offset="1"/>
	 							</RadialGradientBrush>
	 						</Border.OpacityMask>
	 					</Border>
	 					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
	 				</Grid>
	 				<ControlTemplate.Triggers>
	 					<Trigger Property="IsMouseOver" Value="True">
	 						<Trigger.ExitActions>
	 							<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
	 						</Trigger.ExitActions>
	 						<Trigger.EnterActions>
	 							<BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
	 						</Trigger.EnterActions>
	 						
	 					</Trigger>
	 					<Trigger Property="IsFocused" Value="True">
	 						<Trigger.ExitActions>
	 							<BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
	 						</Trigger.ExitActions>
	 						<Trigger.EnterActions>
	 							<BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
	 						</Trigger.EnterActions>
	 						
	 					</Trigger>
	 				</ControlTemplate.Triggers>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 
	 <Style x:Key="NuclearCalendarDayButton" TargetType="{x:Type Custom:CalendarDayButton}">
	 	<Setter Property="Background" Value="{DynamicResource NormalBrush}"/>
	 	<Setter Property="MinWidth" Value="5"/>
	 	<Setter Property="MinHeight" Value="5"/>
	 	<Setter Property="FontSize" Value="10"/>
	 	<Setter Property="HorizontalContentAlignment" Value="Center"/>
	 	<Setter Property="VerticalContentAlignment" Value="Center"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:CalendarDayButton}">
				<ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2500000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                                <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                            </ColorAnimationUsingKeyFrames>
                        </Storyboard>
					</ControlTemplate.Resources>
	 				<Grid>
                        <Border x:Name="border" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" Background="{DynamicResource NormalBrush}" Opacity="0"/>
	 					<Border x:Name="SelectedBorder" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
	 						<Border.Background>
	 							<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
	 								<GradientStop Color="#19C8D6F3" Offset="0.0"/>
	 								<GradientStop Color="{DynamicResource MainColorBottomGradient}" Offset="1.0"/>
	 							</LinearGradientBrush>
	 						</Border.Background>
	 						<Border.OpacityMask>
	 							<RadialGradientBrush GradientOrigin="0.503,0.938">
	 								<RadialGradientBrush.RelativeTransform>
	 									<TransformGroup>
	 										<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
	 										<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
	 										<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
	 										<TranslateTransform X="0" Y="0"/>
	 									</TransformGroup>
	 								</RadialGradientBrush.RelativeTransform>
	 								<GradientStop Color="#FF000000" Offset="0"/>
	 								<GradientStop Color="#FF000000" Offset="1"/>
	 							</RadialGradientBrush>
	 						</Border.OpacityMask>
	 					</Border>
	 					<Border x:Name="HoverBorder" BorderThickness="1,1,1,1" Background="{DynamicResource HoverBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
	 						<Border.OpacityMask>
	 							<RadialGradientBrush GradientOrigin="0.503,0.938">
	 								<RadialGradientBrush.RelativeTransform>
	 									<TransformGroup>
	 										<ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
	 										<SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
	 										<RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
	 										<TranslateTransform X="0" Y="0"/>
	 									</TransformGroup>
	 								</RadialGradientBrush.RelativeTransform>
	 								<GradientStop Color="#00000000" Offset="0"/>
	 								<GradientStop Color="#00000000" Offset="1"/>
	 							</RadialGradientBrush>
	 						</Border.OpacityMask>
	 					</Border>
	 					<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
	 					<Path Fill="#FF000000" Stretch="Fill" HorizontalAlignment="Stretch" Margin="3,3,3,3" x:Name="Blackout" VerticalAlignment="Stretch" Opacity="0" RenderTransformOrigin="0.5,0.5" Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z"/>
	 					<Rectangle Stroke="#FF45D6FA" RadiusX="1" RadiusY="1" x:Name="DayButtonFocusVisual" IsHitTestVisible="False" Visibility="Collapsed"/>
	 				</Grid>
	 				<ControlTemplate.Triggers>
	 					<Trigger Property="IsMouseOver" Value="True">
	 						<Trigger.ExitActions>
	 							<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
	 						</Trigger.ExitActions>
	 						<Trigger.EnterActions>
	 							<BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}"/>
	 						</Trigger.EnterActions>
	 						
	 					</Trigger>
	 					<Trigger Property="IsSelected" Value="True">
	 						<Trigger.ExitActions>
	 							<BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}"/>
	 						</Trigger.ExitActions>
	 						<Trigger.EnterActions>
	 							<BeginStoryboard Storyboard="{StaticResource SelectedOn}"/>
	 						</Trigger.EnterActions>
	 						
	 					</Trigger>
	 					<Trigger Property="IsToday" Value="True">
	 						<Setter Property="Opacity" TargetName="border" Value="0.5"/>
	 						
	 					</Trigger>
	 				</ControlTemplate.Triggers>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 <Style TargetType="{x:Type Custom:DatePicker}">
	 	<Setter Property="Foreground" Value="#FF333333"/>
	 	<Setter Property="IsTodayHighlighted" Value="True"/>
	 	<Setter Property="SelectedDateFormat" Value="Short"/>
	 	<Setter Property="Background" Value="#00FFFFFF"/>
	 	<Setter Property="Padding" Value="2,2,2,2"/>
	 	<Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}"/>
	 	<Setter Property="BorderThickness" Value="1,1,1,1"/>
	 	<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:DatePicker}">
	 				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
	 					<Border.Background>
	 						<SolidColorBrush Color="{DynamicResource WhiteColor}"/>
	 					</Border.Background>
	 					<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Root" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
	 						<Grid.Resources>
	 							<ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
	 								<Grid>
	 									<Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
	 										<Grid.ColumnDefinitions>
	 											<ColumnDefinition Width="20*"/>
	 											<ColumnDefinition Width="20*"/>
	 											<ColumnDefinition Width="20*"/>
	 											<ColumnDefinition Width="20*"/>
	 										</Grid.ColumnDefinitions>
	 										<Grid.RowDefinitions>
	 											<RowDefinition Height="23*"/>
	 											<RowDefinition Height="19*"/>
	 											<RowDefinition Height="19*"/>
	 											<RowDefinition Height="19*"/>
	 										</Grid.RowDefinitions>
	 										<Border Margin="-1,-1,-1,-1" x:Name="Highlight" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#FF45D6FA" BorderThickness="1,1,1,1" CornerRadius="0,0,1,1"/>
	 										<Border Margin="0,-1,0,0" x:Name="Background" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5"/>
	 										<Border Margin="0,-1,0,0" x:Name="BackgroundGradient" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="#BF000000" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5">
	 											<Border.Background>
	 												<LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
	 													<GradientStop Color="#FFFFFFFF" Offset="0"/>
	 													<GradientStop Color="#F9FFFFFF" Offset="0.375"/>
	 													<GradientStop Color="#E5FFFFFF" Offset="0.625"/>
	 													<GradientStop Color="#C6FFFFFF" Offset="1"/>
	 												</LinearGradientBrush>
	 											</Border.Background>
	 										</Border>
	 										<Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
	 											<Rectangle.Fill>
	 												<LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
	 													<GradientStop Color="#FF4084BD"/>
	 													<GradientStop Color="#FFAFCFEA" Offset="1"/>
	 												</LinearGradientBrush>
	 											</Rectangle.Fill>
	 											<Rectangle.Stroke>
	 												<LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
	 													<GradientStop Color="#FF494949"/>
	 													<GradientStop Color="#FF9F9F9F" Offset="1"/>
	 												</LinearGradientBrush>
	 											</Rectangle.Stroke>
	 										</Rectangle>
	 										<Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z"/>
	 										<Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="3" Height="3" Grid.ColumnSpan="4"/>
	 										<Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5"/>
	 									</Grid>
	 								</Grid>
	 							</ControlTemplate>
	 							<SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
	 						</Grid.Resources>
	 						<Grid.ColumnDefinitions>
	 							<ColumnDefinition Width="*"/>
	 							<ColumnDefinition Width="Auto"/>
	 						</Grid.ColumnDefinitions>
	 						<Button HorizontalAlignment="Left" Margin="3,0,3,0" x:Name="PART_Button" VerticalAlignment="Top" Width="20" Foreground="{TemplateBinding Foreground}" Focusable="False" Grid.Column="1" Grid.Row="0" Background="{DynamicResource NormalBrush}">
	 							<Button.Template>
	 								<ControlTemplate TargetType="{x:Type Button}">
									<ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Duration="00:00:00.0010000">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00" Value="#02000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000"/>
                </ColorAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.042"/>
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.99"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#0C000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00000000"/>
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#00000000"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="MainBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
	 									<Grid>
	 										<Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
	 											<Grid.ColumnDefinitions>
	 												<ColumnDefinition Width="20*"/>
	 												<ColumnDefinition Width="20*"/>
	 												<ColumnDefinition Width="20*"/>
	 												<ColumnDefinition Width="20*"/>
	 											</Grid.ColumnDefinitions>
	 											<Grid.RowDefinitions>
	 												<RowDefinition Height="23*"/>
	 												<RowDefinition Height="19*"/>
	 												<RowDefinition Height="19*"/>
	 												<RowDefinition Height="19*"/>
	 											</Grid.RowDefinitions>
												<Border x:Name="MainBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3" Grid.RowSpan="8" Grid.ColumnSpan="4"/>
            <Border x:Name="HoverBorder" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3" Background="{DynamicResource HoverBrush}" Grid.ColumnSpan="4" Grid.RowSpan="8">
                <Border.OpacityMask>
                    <RadialGradientBrush GradientOrigin="0.503,0.938">
                        <RadialGradientBrush.RelativeTransform>
                            <TransformGroup>
                                <ScaleTransform CenterX="0.5" CenterY="0.5" ScaleX="2.101" ScaleY="1"/>
                                <SkewTransform AngleX="0" AngleY="0" CenterX="0.5" CenterY="0.5"/>
                                <RotateTransform Angle="0" CenterX="0.5" CenterY="0.5"/>
                                <TranslateTransform X="0" Y="0"/>
                            </TransformGroup>
                        </RadialGradientBrush.RelativeTransform>
                        <GradientStop Color="#00000000" Offset="0"/>
                        <GradientStop Color="#00000000" Offset="1"/>
                    </RadialGradientBrush>
                </Border.OpacityMask>
            </Border>
	 											<Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1" Fill="{DynamicResource NormalBrush}" Stroke="{DynamicResource NormalBorderBrush}" RadiusX="1" RadiusY="1"/>
	 											<Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z"/>
	 											<Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="3" Height="3" Grid.ColumnSpan="4"/>
	 											<Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5"/>
	 										</Grid>
	 									</Grid>
	 									<ControlTemplate.Triggers>
	 										<Trigger Property="IsMouseOver" Value="True">
	 											<Trigger.ExitActions>
	 												<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
	 											</Trigger.ExitActions>
	 											<Trigger.EnterActions>
	 												<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
	 											</Trigger.EnterActions>
	 										</Trigger>
	 										<Trigger Property="IsPressed" Value="True">
	 											<Trigger.ExitActions>
	 												<BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}"/>
	 											</Trigger.ExitActions>
	 											<Trigger.EnterActions>
	 												<BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}"/>
	 											</Trigger.EnterActions>
	 										</Trigger>
	 									</ControlTemplate.Triggers>
	 								</ControlTemplate>
	 							</Button.Template>
	 						</Button>
	 						<Custom:DatePickerTextBox x:Name="PART_TextBox" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="0" Grid.Row="0" Template="{DynamicResource NuclearDatePickerTextBox}"/>
	 						<Grid x:Name="PART_DisabledVisual" IsHitTestVisible="False" Opacity="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0">
	 							<Grid.ColumnDefinitions>
	 								<ColumnDefinition Width="*"/>
	 								<ColumnDefinition Width="Auto"/>
	 							</Grid.ColumnDefinitions>
	 							<Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Grid.Column="0" Grid.Row="0"/>
	 							<Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Margin="3,0,3,0" Width="19" Height="18" Grid.Column="1" Grid.Row="0"/>
	 							<Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False"/>
	 						</Grid>
	 					</Grid>
	 				</Border>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 <ControlTemplate x:Key="NuclearDatePickerTextBox" TargetType="{x:Type Custom:DatePickerTextBox}">
	 <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusedBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
	 	<Grid>
	 		<Grid.Resources>
	 			<SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
	 		</Grid.Resources>
			<Border x:Name="Border1" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" Padding="2" CornerRadius="2">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource WhiteColor}"/>
                </Border.Background>

                

            </Border>
           
	 		<Border x:Name="Border" Opacity="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="3,3,3,3" Padding="{TemplateBinding Padding}">
	 			<Grid x:Name="WatermarkContent" Margin="3,0,0,0">
	 				<Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1,1,1,1"/>
	 				<Border BorderBrush="{x:Null}" BorderThickness="1,1,1,1">
	 					<ContentControl x:Name="PART_Watermark" Content="Show Calendar" Padding="2,2,2,2" Focusable="False" IsHitTestVisible="False" Opacity="0" Style="{DynamicResource ContentControlStyle1}"/>
	 				</Border>
	 				<ScrollViewer Margin="0,0,0,0" x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
	 				<Border x:Name="FocusVisual" IsHitTestVisible="False" Opacity="0" BorderBrush="#FF45D6FA" CornerRadius="1,1,1,1"/>
	 			</Grid>
	 		</Border>
	 		<Border IsHitTestVisible="False" BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" Opacity="0" x:Name="border">
	 			<Border.BorderBrush>
	 				<SolidColorBrush Color="{DynamicResource BottomGradientMouseOver}"/>
	 			</Border.BorderBrush>
	 		</Border>
			 <Border BorderBrush="{DynamicResource HoverBrush}" BorderThickness="1,1,1,1" Margin="-1,-1,-1,-1" CornerRadius="3,3,3,3" Opacity="0" x:Name="HoverBorder" IsHitTestVisible="False"/>
            <Border Margin="-1,-1,-1,-1" x:Name="FocusedBorder" Opacity="0" BorderBrush="{DynamicResource HoverBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" IsHitTestVisible="False"/>
	 	</Grid>
	 	<ControlTemplate.Triggers>
	 		<Trigger Property="IsFocused" Value="True">
	 			<Trigger.ExitActions>
	 				<BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}"/>
	 			</Trigger.ExitActions>
	 			<Trigger.EnterActions>
	 				<BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}"/>
	 			</Trigger.EnterActions>
	 		</Trigger>
	 		<MultiTrigger>
	 			<MultiTrigger.ExitActions>
	 				<BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}"/>
	 			</MultiTrigger.ExitActions>
	 			<MultiTrigger.EnterActions>
	 				<BeginStoryboard Storyboard="{StaticResource HoverOn}"/>
	 			</MultiTrigger.EnterActions>
	 			<MultiTrigger.Conditions>
	 				<Condition Property="IsMouseOver" Value="True"/>
	 				<Condition Property="IsFocused" Value="False"/>
	 			</MultiTrigger.Conditions>
	 		</MultiTrigger>
	 	</ControlTemplate.Triggers>
	 </ControlTemplate>
	 <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}">
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type ContentControl}">
	 				<ContentPresenter/>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 </Style>
	 <Style TargetType="{x:Type Custom:DataGrid}">
	 	<Setter Property="Background" Value="#FFFFFF"/>
	 	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
	 	<Setter Property="BorderBrush" Value="#FF688CAF"/>
	 	<Setter Property="BorderThickness" Value="1,1,1,1"/>
	 	<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
	 	<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
	 	<Setter Property="Template">
	 		<Setter.Value>
	 			<ControlTemplate TargetType="{x:Type Custom:DataGrid}">
	 				<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
	 					<ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
	 						<ScrollViewer.Template>
	 							<ControlTemplate TargetType="{x:Type ScrollViewer}">
	 								<Grid>
	 									<Grid.ColumnDefinitions>
	 										<ColumnDefinition Width="Auto"/>
	 										<ColumnDefinition Width="*"/>
	 										<ColumnDefinition Width="Auto"/>
	 									</Grid.ColumnDefinitions>
	 									<Grid.RowDefinitions>
	 										<RowDefinition Height="Auto"/>
	 										<RowDefinition Height="*"/>
	 										<RowDefinition Height="Auto"/>
	 									</Grid.RowDefinitions>
	 									<Button Width="{Binding Path=CellsPanelHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}}" Focusable="False">
	 										<Button.Template>
	 											<ControlTemplate TargetType="{x:Type Button}">
	 												<Grid>
	 													<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
	 													<Polygon x:Name="Arrow" Fill="#FF000000" Stretch="Uniform" HorizontalAlignment="Right" Margin="8,8,3,3" VerticalAlignment="Bottom" Opacity="0.15" Points="0,10 10,10 10,0"/>
	 												</Grid>
	 												<ControlTemplate.Triggers>
	 													<Trigger Property="IsMouseOver" Value="True">
	 														<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
	 													</Trigger>
	 													<Trigger Property="IsPressed" Value="True">
	 														<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
	 													</Trigger>
	 													<Trigger Property="IsEnabled" Value="False">
	 														<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
	 													</Trigger>
	 												</ControlTemplate.Triggers>
	 											</ControlTemplate>
	 										</Button.Template>
	 										<Button.Visibility>
	 											<Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}">
	 												<Binding.ConverterParameter>
	 													<Custom:DataGridHeadersVisibility>All</Custom:DataGridHeadersVisibility>
	 												</Binding.ConverterParameter>
	 											</Binding>
	 										</Button.Visibility>
	 										<Button.Command>
	 											<RoutedCommand/>
	 										</Button.Command>
	 									</Button>
	 									<Custom:DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
	 										<Custom:DataGridColumnHeadersPresenter.Visibility>
	 											<Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}">
	 												<Binding.ConverterParameter>
	 													<Custom:DataGridHeadersVisibility>Column</Custom:DataGridHeadersVisibility>
	 												</Binding.ConverterParameter>
	 											</Binding>
	 										</Custom:DataGridColumnHeadersPresenter.Visibility>
	 									</Custom:DataGridColumnHeadersPresenter>
	 									<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
	 									<ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
	 									<Grid Grid.Column="1" Grid.Row="2">
	 										<Grid.ColumnDefinitions>
	 											<ColumnDefinition Width="{Binding Path=NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}}"/>
	 											<ColumnDefinition Width="*"/>
	 										</Grid.ColumnDefinitions>
	 										<ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
	 									</Grid>
	 								</Grid>
	 							</ControlTemplate>
	 						</ScrollViewer.Template>
	 						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
	 					</ScrollViewer>
	 				</Border>
	 			</ControlTemplate>
	 		</Setter.Value>
	 	</Setter>
	 	<Style.Triggers>
	 		<Trigger Property="IsGrouping" Value="True">
	 			<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
	 		</Trigger>
	 	</Style.Triggers>
	 </Style>


</ResourceDictionary>


