<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">

    <!--
  REUXABLES THEMES
  
  Copyright (C) 2007-2009 Nukeation Studios. All rights reserved.
  
  This file is protected by the End-User License Agreement provided at:
  http://reuxables.nukeation.com/files/license.txt
  
  THIS FILE MUST BE COMPILED WITH YOUR EXECUTABLE / ASSEMBLY BEFORE BEING DISTRIBUTED
  THIS NOTICE MUST REMAIN INTACT. DO NOT REMOVE!
  -->
    
    <Color x:Key="BlackColor">#FF000000</Color>
    <Color x:Key="WhiteColor">#FFFFFFFF</Color>

    <LinearGradientBrush x:Key="BaseBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF878787" Offset="0" />
        <GradientStop Color="#FF737373" Offset="0.402" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DarkBrush" Color="#FF000000" />

    <LinearGradientBrush x:Key="NormalBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF" Offset="0" />
        <GradientStop Color="#FFBCBCBC" Offset="0.594" />
        <GradientStop Color="#FFF3F3F3" Offset="0.473" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="MouseOverBrush" Color="#FFFF8000" />

    <SolidColorBrush x:Key="TranslucentBrush" Color="#3FFFFFFF" />

    <LinearGradientBrush x:Key="InsetBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFCBCBCB" Offset="0.004" />
        <GradientStop Color="#FFD8D8D8" Offset="1" />
        <GradientStop Color="#FF646464" Offset="0.522" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="InsetBrush2" Color="#FF373737" />

    <LinearGradientBrush x:Key="HoverOpacity" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF000000" Offset="0" />
        <GradientStop Color="#52FFFFFF" Offset="1" />
        <GradientStop Color="#EAD9D9D9" Offset="0.388" />
        <GradientStop Color="#FBF9F9F9" Offset="0.603" />
        <GradientStop Color="#FFE7E7E7" Offset="0.446" />
    </LinearGradientBrush>

    <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
    <SolidColorBrush x:Key="DisabledBorderBrush" Color="#AAA" />

    <SolidColorBrush x:Key="WindowBackgroundBrush" Color="#FF626262" />

    <SolidColorBrush x:Key="GlyphBrush" Color="{StaticResource WhiteColor}" />

    <SolidColorBrush x:Key="TextBrush" Color="{DynamicResource WhiteColor}" />

    <Style x:Key="NuclearButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="2" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style BasedOn="{x:Null}" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearButton}" />
    </Style>

    <ControlTemplate x:Key="NuclearButton" TargetType="{x:Type Button}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                <Grid Width="Auto" Height="Auto">
                    <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                </Grid>
            </Border>
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" />
            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True" />
            <Trigger Property="IsDefaulted" Value="True" />
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CheckBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <ControlTemplate x:Key="NuclearCheckBox" TargetType="{x:Type CheckBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#7F000000" />
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00898989" />
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#7F898989" />
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF898989" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00BDBDBD" />
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#7FBDBDBD" />
                    <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#7FBDBDBD" />
                    <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#FFBDBDBD" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#00CCCCCC" />
                    <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#7FCCCCCC" />
                    <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#7FCCCCCC" />
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#FFCCCCCC" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00FFFFFF" />
                    <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#7FFFFFFF" />
                    <SplineColorKeyFrame KeyTime="00:00:01.5000000" Value="#7FFFFFFF" />
                    <SplineColorKeyFrame KeyTime="00:00:01.6000000" Value="#FFFFFFFF" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00FFFFFF" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[4].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00CCCCCC" />
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00CCCCCC" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00BDBDBD" />
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#00BDBDBD" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#00898989" />
                    <SplineColorKeyFrame KeyTime="00:00:00.6000000" Value="#00898989" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="path" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.6000000" Value="#00000000" />
                    <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ThreeStateOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="ThreeStateOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ThreeState" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.5" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid Width="22" Height="21">
                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="3" RadiusY="3" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="2.5" RadiusY="2.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="1" RadiusY="1" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                    <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" x:Name="ButtonBase" Margin="4,4,4,4" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                        <Grid Width="Auto" Height="Auto">
                            <Border Margin="0,3,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="0.5,0.5,0.5,0.5" x:Name="DarkBorder" />
                            <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="0.1,0.1,0.1,0.1" />
                        </Grid>
                    </Border>
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Margin="4,4,4,4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                    <Rectangle Fill="{DynamicResource NormalBorderBrush}" Stroke="{x:Null}" x:Name="ThreeState" Margin="6,6,6,6" RadiusX="1" RadiusY="1" Opacity="0" />
                    <Path x:Name="path" Stretch="Fill" Stroke="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Top" RenderTransformOrigin="0.579226216727124,0.50000014550231" Data="M5.3780575,0 L7.8294313,2.7441231 11.450873,8.0827497 11.919026,8.8493227 14.019023,7.5131057 17.719252,5.5400914 22.05115,3.9532694 18.691134,7.4083007 15.57022,10.319636 13.77147,11.882588 14.085888,12.397431 16.603626,16.586224 18.623122,21.023358 20.376132,26.100001 16.64069,22.135558 13.65919,18.438469 10.889118,14.004199 10.878786,13.986612 7.6024437,15.717841 4.8041753,17.040179 0.091806889,18.340409 0,18.141341 4.0161839,14.310517 6.8337634,12.38895&#xa;9.0167246,10.817123 7.9543905,9.0088819 5.962121,3.7959269 5.1691307,0.10977665 z" Margin="-3.365,-1,4,-2" Height="Auto" Width="Auto">
                        <Path.OpacityMask>
                            <RadialGradientBrush GradientOrigin="0.56,0.416" Center="0.56,0.416" RadiusY="0.615" RadiusX="0.577">
                                <GradientStop Color="#00000000" Offset="0" />
                                <GradientStop Color="#00FFFFFF" Offset="1" />
                                <GradientStop Color="#00898989" Offset="0.472" />
                                <GradientStop Color="#00BDBDBD" Offset="0.689" />
                                <GradientStop Color="#00CCCCCC" Offset="0.85" />
                            </RadialGradientBrush>
                        </Path.OpacityMask>
                        <Path.Fill>
                            <LinearGradientBrush EndPoint="0.94,0.514" StartPoint="0.191,0.352">
                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                <GradientStop Color="#FFFFFFFF" Offset="1" />
                                <GradientStop Color="#FF4B4B4B" Offset="0.525" />
                                <GradientStop Color="#FEDCDCDC" Offset="0.38" />
                                <GradientStop Color="#FFB5B5B5" Offset="0.669" />
                            </LinearGradientBrush>
                        </Path.Fill>
                        <Path.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="76.358" />
                                <TranslateTransform X="0" Y="8.8817841970012523E-16" />
                            </TransformGroup>
                        </Path.RenderTransform>
                    </Path>
                    <Rectangle Stroke="{DynamicResource DisabledBorderBrush}" RadiusX="1" RadiusY="1" Margin="4,4,4,4" x:Name="HoverEffect_Copy" Fill="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />
                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="3,3,0,0" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="True" />
                    <Condition Property="IsThreeState" Value="True" />
                </MultiTrigger.Conditions>

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="{x:Null}" />
                    <Condition Property="IsThreeState" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>

                    <BeginStoryboard x:Name="ThreeStateOn_BeginStoryboard" Storyboard="{StaticResource ThreeStateOn}" />

                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>

                    <BeginStoryboard x:Name="ThreeStateOff_BeginStoryboard" Storyboard="{StaticResource ThreeStateOff}" />

                </MultiTrigger.ExitActions>

            </MultiTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" TargetName="HoverEffect_Copy" Value="0.4" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>

    <Style x:Key="RadioButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle Margin="15,0,0,0" Stroke="#60000000" StrokeThickness="1" StrokeDashArray="1 2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <ControlTemplate x:Key="NuclearRadioButton" TargetType="{x:Type RadioButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOn">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#7F000000" />
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.1000000" Value="#00717171" />
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#7F717171" />
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF717171" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00ABABAB" />
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#7FABABAB" />
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FFABABAB" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#00FFFFFF" />
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#7FFFFFFF" />
                    <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FFFFFFFF" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="CheckedOff">
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00FFFFFF" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.4000000" Value="#00ABABAB" />
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#00ABABAB" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#00717171" />
                    <SplineColorKeyFrame KeyTime="00:00:00.6000000" Value="#00717171" />
                </ColorAnimationUsingKeyFrames>
                <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="CheckMark" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                    <SplineColorKeyFrame KeyTime="00:00:00.6000000" Value="#00000000" />
                    <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#00000000" />
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>

        <BulletDecorator Background="Transparent">
            <BulletDecorator.Bullet>
                <Grid Width="20" Height="20">
                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="10" RadiusY="10" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="9" RadiusY="9" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="8" RadiusY="8" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                    <Border BorderThickness="2,2,2,2" CornerRadius="10,10,10,10" x:Name="ButtonBase" Margin="4,4,4,4" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                        <Grid Width="Auto" Height="Auto">
                            <Border Margin="0,3,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="10,10,10,10" x:Name="DarkBorder" />
                            <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="4,4,4,4" />
                            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        </Grid>
                    </Border>
                    <Border x:Name="CheckMark" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" Margin="6,6,6,6" Background="{DynamicResource NormalBorderBrush}" CornerRadius="10,10,10,10">
                        <Border.OpacityMask>
                            <RadialGradientBrush GradientOrigin="0.612,0.388" Center="0.612,0.388">
                                <GradientStop Color="#00000000" Offset="0" />
                                <GradientStop Color="#00FFFFFF" Offset="1" />
                                <GradientStop Color="#00717171" Offset="0.645" />
                                <GradientStop Color="#00ABABAB" Offset="0.842" />
                            </RadialGradientBrush>
                        </Border.OpacityMask>
                    </Border>
                    <Border x:Name="border" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="10,10,10,10" Margin="4,4,4,4" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />

                </Grid>
            </BulletDecorator.Bullet>
            <ContentPresenter RecognizesAccessKey="True" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="3,3,0,0" />
        </BulletDecorator>

        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsEnabled" Value="false">

                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                <Setter Property="Opacity" TargetName="border" Value="0.4" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="NuclearRepeatButton" d:IsControlPart="True" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">

        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <ContentPresenter HorizontalAlignment="Center" x:Name="ContentPresenter" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="true">

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">


                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,-3,0,-3" x:Name="Grid">
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="0,0.5,0.5,0.5" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="0,1,1,1" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="0,2,2,2" x:Name="Shadow3" Opacity="0.2" />
                        <Border x:Name="BaseBorder" Background="#FF000000" BorderBrush="{x:Null}" Margin="0,3,3,3" CornerRadius="0,3,3,0" />
                        <Border Margin="0,2,2,2" Background="{DynamicResource DarkBrush}" BorderBrush="#FF000000" BorderThickness="1,1,1,1" CornerRadius="0,4,4,0" />
                        <Border BorderThickness="0,2,2,2" CornerRadius="0,3,3,0" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Margin="0,2,2,2">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,7,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="0,2,2,0" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="0,1,1,1" CornerRadius="0,1,1,0" />
                            </Grid>
                        </Border>

                        <Border Background="{TemplateBinding Background}" CornerRadius="0,6,6,0" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Margin="0,2,2,2" x:Name="HoverEffect" />
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Left" Margin="2,0,0,0">
                            <Path HorizontalAlignment="Center" x:Name="arrow_Copy" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,4">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" />
                        </StackPanel>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="0,1,1,1" CornerRadius="0,3,3,0" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Margin="0,2,2,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style x:Key="NuclearHorizontalThumbStyle" d:IsControlPart="True" TargetType="{x:Type Thumb}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,-3,0,-3" x:Name="Grid">
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="0.5,0.5,0.5,0.5" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="0.8,0.8,0.8,0.8" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="1.3,1.3,1.3,1.3" x:Name="Shadow3" Opacity="0.2" />
                        <Border x:Name="BaseBorder" Background="#FF000000" BorderBrush="{x:Null}" Margin="3,3,0,3" CornerRadius="0,3,3,0" />
                        <Border BorderThickness="2,2,0,2" CornerRadius="3,0,0,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Margin="2,2,0,2">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,7,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,0,0,1" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="0,1,1,1" CornerRadius="1,0,0,1" />
                            </Grid>
                        </Border>

                        <Border Background="{TemplateBinding Background}" CornerRadius="4,0,0,4" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Margin="2,2,0,2" x:Name="HoverEffect" />
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Right" Margin="0,0,2,0">
                            <Path HorizontalAlignment="Center" x:Name="arrow_Copy" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,4">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Path HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" />
                        </StackPanel>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,0,1" CornerRadius="3,0,0,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Margin="2,2,0,2" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True" />
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style x:Key="NuclearScrollRepeatButtonStyle" d:IsControlPart="True" TargetType="{x:Type RepeatButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Background="{x:Null}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <RepeatButton x:Name="DecreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineUpCommand" Visibility="Collapsed">
                            <Grid>
                                <Path x:Name="DecreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 4 L 8 4 L 4 0 Z" />
                            </Grid>
                        </RepeatButton>

                        <Track Grid.Row="1" x:Name="PART_Track" Orientation="Vertical" IsDirectionReversed="true">
                            <Track.Thumb>
                                <Thumb x:Name="thumb" Style="{DynamicResource NuclearThumbStyle}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageDownCommand" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="ScrollBar.PageUpCommand" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <RepeatButton Grid.Row="2" x:Name="IncreaseRepeat" Style="{DynamicResource NuclearRepeatButton}" Command="ScrollBar.LineDownCommand" Visibility="Collapsed">
                            <Grid>
                                <Path x:Name="IncreaseArrow" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Data="M 0 0 L 4 4 L 8 0 Z" />
                            </Grid>
                        </RepeatButton>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Horizontal">

                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>

                            <Setter TargetName="PART_Track" Property="Orientation" Value="Vertical" />

                            <Setter Property="Command" Value="ScrollBar.LineLeftCommand" TargetName="DecreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.LineRightCommand" TargetName="IncreaseRepeat" />
                            <Setter Property="Command" Value="ScrollBar.PageLeftCommand" TargetName="PageDown" />
                            <Setter Property="Command" Value="ScrollBar.PageRightCommand" TargetName="PageUp" />
                            <Setter Property="Style" TargetName="thumb" Value="{DynamicResource NuclearHorizontalThumbStyle}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" Grid.Row="0" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" />

                        <ScrollBar Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="0" Grid.Row="1" x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Minimum="0" Maximum="{TemplateBinding ScrollableWidth}" AutomationProperties.AutomationId="HorizontalScrollBar" Margin="0,0,0,-21" />
                        <ScrollBar Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Grid.Row="0" x:Name="PART_VerticalScrollBar" Orientation="Vertical" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Minimum="0" Maximum="{TemplateBinding ScrollableHeight}" AutomationProperties.AutomationId="VerticalScrollBar" Margin="0,0,-21,0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Grid>



                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Margin="4,4,4,4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF878787" Offset="0" />
                                    <GradientStop Color="#FF737373" Offset="0.402" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                    <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                    <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                            <GradientStop Color="#FFD8D8D8" Offset="1" />
                                            <GradientStop Color="#FF646464" Offset="0.522" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid>
                                        <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                        <ScrollViewer Margin="1" Focusable="false" Background="{DynamicResource DarkBrush}">

                                            <StackPanel Margin="2" IsItemsHost="true" />

                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />

                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true" Margin="0,1,0,1">



                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder" />
                                <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="SelectedHoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder1" />
                                <Border x:Name="HoverTranslucentBorder1" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="SelectedHoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="4,4,0,4" />
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />

                    </Grid>
                    <ControlTemplate.Triggers>

                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedHoverOff_BeginStoryboard" Storyboard="{StaticResource SelectedHoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedHoverOn_BeginStoryboard" Storyboard="{StaticResource SelectedHoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>

                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>


    <ControlTemplate x:Key="NuclearTextBox" TargetType="{x:Type TextBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.65" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="TextGrid">
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF878787" Offset="0" />
                        <GradientStop Color="#FF737373" Offset="0.402" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                        <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Grid Width="Auto" Height="Auto">
                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                    <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder" BorderBrush="{DynamicResource InsetBrush}">
                        <Grid>
                            <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="{DynamicResource InsetBrush2}" />

                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" Background="{DynamicResource DarkBrush}" />
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="CharacterCasing" Value="Normal" />
            <MultiTrigger>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </MultiTrigger.ExitActions>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type PasswordBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.65" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FocusedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" x:Name="TextGrid">
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF878787" Offset="0" />
                                    <GradientStop Color="#FF737373" Offset="0.402" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                    <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                    <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder" BorderBrush="{DynamicResource InsetBrush}">
                                    <Grid>
                                        <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="{DynamicResource InsetBrush2}" />

                                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" Background="{DynamicResource DarkBrush}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsFocused" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2,-2,-2,-2" Opacity="0.1" x:Name="Shadow1" Grid.ColumnSpan="2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.15" x:Name="Shadow2" Grid.ColumnSpan="2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" Grid.ColumnSpan="2" />
            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Margin="0,0,0,0" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2">
                <Grid Width="Auto" Height="Auto">
                    <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="4,4,4,4" x:Name="DarkBorder" />
                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                </Grid>
            </Border>
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" />
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" Grid.ColumnSpan="2" />
            <Path Grid.Column="1" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" />
            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.ColumnSpan="2" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">

                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard1" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard1" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Grid Margin="3,0,0,0">
            <Border Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder" BorderBrush="{DynamicResource InsetBrush}">
                <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="{DynamicResource InsetBrush2}" />

            </Border>
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" VerticalAlignment="Center" Margin="5,0,0,0" />
        </Grid>

    </ControlTemplate>


    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <ControlTemplate x:Key="NuclearComboBox" TargetType="{x:Type ComboBox}">
        <Grid>
            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" Background="{DynamicResource MouseOverBrush}" />
            <ContentPresenter HorizontalAlignment="Left" Margin="7,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />

            <TextBox Visibility="Visible" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="5,0,23,0" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Stretch" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}" Opacity="0" Foreground="{DynamicResource TextBrush}" />

            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True" Margin="0,0,18,0">
                    <Border x:Name="DropDownBorder" Background="{DynamicResource DarkBrush}" BorderThickness="1" BorderBrush="{DynamicResource NormalBorderBrush}" />
                    <ScrollViewer x:Name="DropDownScrollViewer"  Margin="4,6,4,6" >
                        <Grid>
                            <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                            </Canvas>
                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Grid>
                    </ScrollViewer>

                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter Property="MinHeight" Value="95" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
            <Trigger Property="AllowsTransparency" SourceName="Popup" Value="true">
                <Setter Property="CornerRadius" Value="4" TargetName="DropDownBorder" />
                <Setter Property="Margin" Value="0,2,0,0" TargetName="DropDownBorder" />
            </Trigger>
            <Trigger Property="IsEditable" Value="true">
                <Setter Property="IsTabStop" Value="false" />
                <Setter Property="Visibility" Value="Visible" TargetName="PART_EditableTextBox" />
                <Setter Property="Visibility" Value="Hidden" TargetName="ContentSite" />
                <Setter Property="HorizontalAlignment" TargetName="PART_EditableTextBox" Value="Stretch" />
                <Setter Property="Margin" TargetName="PART_EditableTextBox" Value="3,0,18,0" />
                <Setter Property="Opacity" TargetName="PART_EditableTextBox" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style d:IsControlPart="True" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <ControlTemplate.Resources>

                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>

                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="true" Margin="0,1,0,1">
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="5,4,0,4" />
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />

                    </Grid>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style x:Key="ExpanderHeaderFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="0" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="-1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="False" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>



                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2,-2,-2,-2" Opacity="0.1" x:Name="Shadow1" Grid.ColumnSpan="2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.15" x:Name="Shadow2" Grid.ColumnSpan="2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" Grid.ColumnSpan="2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="4,4,4,4" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" />
                        <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,4,0,4" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        <Path Grid.Column="0" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.ColumnSpan="2" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>


                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>


                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>
    <Style x:Key="ExpanderRightHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="-1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="False" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="19" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.RowSpan="2">
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2,-2,-2,-2" Opacity="0.1" x:Name="Shadow1" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.15" x:Name="Shadow2" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
                            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                <Grid Width="Auto" Height="Auto">
                                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="4,4,4,4" x:Name="DarkBorder" />
                                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                </Grid>
                            </Border>
                            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />

                            <Path Grid.Column="0" HorizontalAlignment="Right" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5" Margin="0,0,8,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.ColumnSpan="2" />
                        </Grid>
                        <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="2,4,4,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True" d:LayoutOverrides="VerticalAlignment, VerticalMargin">
                            <ContentPresenter.LayoutTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>


                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>
    <Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="False" Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="19" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2,-2,-2,-2" Opacity="0.1" x:Name="Shadow1" Grid.ColumnSpan="2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.15" x:Name="Shadow2" Grid.ColumnSpan="2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" Grid.ColumnSpan="2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2" Margin="0,0,0,0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="4,4,4,4" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" />
                        <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,4,0,4" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                        <Path Grid.Column="0" HorizontalAlignment="Center" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="0" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.ColumnSpan="2" />


                        <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Left" Margin="4,2,0,2" VerticalAlignment="Center" Grid.Column="1" RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>


                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>
    <Style x:Key="ExpanderLeftHeaderStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="arrow" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="-1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid SnapsToDevicePixels="False" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="19" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Grid Grid.RowSpan="2">
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="-90" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2,-2,-2,-2" Opacity="0.1" x:Name="Shadow1" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.15" x:Name="Shadow2" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
                            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                <Grid Width="Auto" Height="Auto">
                                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="4,4,4,4" x:Name="DarkBorder" />
                                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                </Grid>
                            </Border>
                            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />

                            <Path Grid.Column="0" HorizontalAlignment="Right" x:Name="arrow" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5" Margin="0,0,8,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="-1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.ColumnSpan="2" Margin="0,0,-4,0" />
                        </Grid>
                        <ContentPresenter SnapsToDevicePixels="True" HorizontalAlignment="Center" Margin="4,4,2,0" VerticalAlignment="Top" Grid.Row="1" RecognizesAccessKey="True" d:LayoutOverrides="VerticalAlignment, VerticalMargin">
                            <ContentPresenter.LayoutTransform>
                                <TransformGroup>
                                    <TransformGroup.Children>
                                        <TransformCollection>
                                            <RotateTransform Angle="90" />
                                        </TransformCollection>
                                    </TransformGroup.Children>
                                </TransformGroup>
                            </ContentPresenter.LayoutTransform>
                        </ContentPresenter>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="CheckedOn_BeginStoryboard" Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>
    <Style TargetType="{x:Type Expander}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Expander}">
                    <Border SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3">
                        <DockPanel>
                            <ToggleButton FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontStretch="{TemplateBinding FontStretch}" FontStyle="{TemplateBinding FontStyle}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" FocusVisualStyle="{StaticResource ExpanderHeaderFocusVisual}" MinHeight="0" MinWidth="0" x:Name="HeaderSite" Style="{StaticResource ExpanderDownHeaderStyle}" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" DockPanel.Dock="Top" Panel.ZIndex="100" />
                            <Border Visibility="Collapsed" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" x:Name="border" Background="{x:Null}">
                                <Grid>
                                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                                    <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                                    <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FF878787" Offset="0" />
                                                <GradientStop Color="#FF737373" Offset="0.402" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                                <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Grid Width="Auto" Height="Auto">
                                            <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                            <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                            <Border Margin="4,0,4,0" Background="#FF000000" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                                <Border.BorderBrush>
                                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                        <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                        <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                        <GradientStop Color="#FF646464" Offset="0.522" />
                                                    </LinearGradientBrush>
                                                </Border.BorderBrush>
                                                <Grid>
                                                    <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                                    <ContentPresenter Focusable="false" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,1,1" x:Name="ExpandSite" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" DockPanel.Dock="Bottom" />
                                                </Grid>
                                            </Border>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />
                                </Grid>
                            </Border>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="true">
                            <Setter Property="Visibility" TargetName="border" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Down">
                            <Setter Property="Margin" TargetName="border" Value="0,-5,0,0" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Right" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Left" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderRightHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="-5,0,0,0" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Up">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Bottom" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderUpHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,-5" />
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Left">
                            <Setter Property="DockPanel.Dock" TargetName="ExpandSite" Value="Left" />
                            <Setter Property="DockPanel.Dock" TargetName="HeaderSite" Value="Right" />
                            <Setter Property="Style" TargetName="HeaderSite" Value="{StaticResource ExpanderLeftHeaderStyle}" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,-5,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

        <Style TargetType="{x:Type ProgressBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="IndeterminateOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.5" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.55" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.56" />
                            </DoubleAnimationUsingKeyFrames>
							
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.5" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.55" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="IndeterminateBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[3].(GradientStop.Offset)" RepeatBehavior="Forever">
                                <SplineDoubleKeyFrame KeyTime="00:00:02" Value="1.56" />
                            </DoubleAnimationUsingKeyFrames>
							
                        </Storyboard>
                        <Storyboard x:Key="ValueChangedOn">
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
							
							<ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[0].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:00.5000000" Value="sc#1, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="sc#1, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="sc#0, 0, 0, 0" />
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>
                            <ColorAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ValueChangedBorder_Vertical" Storyboard.TargetProperty="(UIElement.OpacityMask).(GradientBrush.GradientStops)[2].(GradientStop.Color)">
                                <SplineColorKeyFrame KeyTime="00:00:00.2000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.3000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.7000000" Value="#FF000000" />
                                <SplineColorKeyFrame KeyTime="00:00:00.9000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:01.1000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:01.3000000" Value="#00000000" />
                                <SplineColorKeyFrame KeyTime="00:00:02" Value="#00000000" />
                            </ColorAnimationUsingKeyFrames>

                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="Background">
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
                        <Border x:Name="PART_Track" CornerRadius="2">
                            <Grid>

                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                	<Border.LayoutTransform>
                                		<TransformGroup>
                                			<ScaleTransform/>
                                			<SkewTransform/>
                                			<RotateTransform/>
                                			<TranslateTransform/>
                                		</TransformGroup>
                                	</Border.LayoutTransform>

                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="4,4,4,4" x:Name="DarkBorder" />
                                        <Border HorizontalAlignment="Left" x:Name="PART_Indicator" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2">
                                            <Grid>
                                                <Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" StrokeThickness="0" x:Name="IndeterminateBorder">
                                                    <Rectangle.OpacityMask>
                                                        <LinearGradientBrush EndPoint="1,0.5" StartPoint="0.0,0.5">
                                                            <GradientStop Color="#00000000" Offset="-0.99" />
                                                            <GradientStop Color="#4D000000" Offset="-0.99" />
                                                            <GradientStop Color="#FF000000" Offset="-0.99" />
                                                            <GradientStop Color="#00000000" Offset="-0.99" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
												<Rectangle Fill="#FFFFFFFF" Stroke="{x:Null}" StrokeThickness="0" x:Name="IndeterminateBorder_Vertical" Visibility="Hidden">
                                                    <Rectangle.OpacityMask>
                                                        <LinearGradientBrush EndPoint="0.5,-0.914" StartPoint="0.5,1.914">
                                                            <GradientStop Color="#00000000" Offset="-0.99" />
                                                            <GradientStop Color="#4D000000" Offset="-0.99" />
                                                            <GradientStop Color="#FF000000" Offset="-0.99" />
                                                            <GradientStop Color="#00000000" Offset="-0.99" />
                                                        </LinearGradientBrush>
                                                    </Rectangle.OpacityMask>
                                                </Rectangle>
                                                <Border x:Name="ValueChangedBorder" CornerRadius="2,2,2,2">
                                                    <Border.OpacityMask>
                                                        <LinearGradientBrush EndPoint="0.996,0.5" StartPoint="0.005,0.5">
                                                            <GradientStop Color="#00000000" Offset="0" />
                                                            <GradientStop Color="#00000000" Offset="1" />
                                                            <GradientStop Color="#00000000" Offset="0.48" />
                                                        </LinearGradientBrush>
                                                    </Border.OpacityMask>
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="{DynamicResource WhiteColor}" Offset="0" />
                                                            <GradientStop Color="#00F9F9F9" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
												<Border x:Name="ValueChangedBorder_Vertical" CornerRadius="2,2,2,2" Visibility="Hidden">
                                                    <Border.OpacityMask>
                                                        <LinearGradientBrush EndPoint="0.5,-0.901" StartPoint="0.5,1.901">
                                                            <GradientStop Color="#00000000" Offset="0" />
                                                            <GradientStop Color="#00000000" Offset="1" />
                                                            <GradientStop Color="#00000000" Offset="0.48" />
                                                        </LinearGradientBrush>
                                                    </Border.OpacityMask>
                                                    <Border.Background>
                                                        <LinearGradientBrush EndPoint="0.953,0.5" StartPoint="0.323,0.5">
                                                            <GradientStop Color="{DynamicResource WhiteColor}" Offset="0" />
                                                            <GradientStop Color="#00F9F9F9" Offset="1" />
                                                        </LinearGradientBrush>
                                                    </Border.Background>
                                                </Border>
                                                <Border BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" Background="{DynamicResource MouseOverBrush}" Margin="-1,-1,-1,-1" Opacity="0.65" />
                                            </Grid>
                                        </Border>
                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                    </Grid>
                                </Border>
                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />
                            </Grid>
                        </Border>



                    </Grid>
                    <ControlTemplate.Triggers>
					<Trigger Property="Orientation" Value="Vertical">
								<Setter Property="LayoutTransform" TargetName="Background">
									<Setter.Value>
										<RotateTransform Angle="-90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="PART_Track">
									<Setter.Value>
										<RotateTransform Angle="90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="LayoutTransform" TargetName="PART_Indicator">
									<Setter.Value>
										<RotateTransform Angle="90"/>
									</Setter.Value>
								</Setter>
								<Setter Property="Visibility" TargetName="IndeterminateBorder_Vertical" Value="Visible"/>
								<Setter Property="Visibility" TargetName="ValueChangedBorder_Vertical" Value="Visible"/>
								<Setter Property="Visibility" TargetName="IndeterminateBorder" Value="Hidden"/>
								<Setter Property="Visibility" TargetName="ValueChangedBorder" Value="Hidden"/>
								<Setter Property="LayoutTransform" TargetName="ButtonBase">
									<Setter.Value>
										<TransformGroup>
											<ScaleTransform/>
											<SkewTransform/>
											<RotateTransform Angle="-90"/>
											<TranslateTransform/>
										</TransformGroup>
									</Setter.Value>
								</Setter>
							</Trigger>
                        <Trigger Property="IsEnabled" Value="False">

                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <ResumeStoryboard BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <PauseStoryboard BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False" />
                                <Condition Property="IsIndeterminate" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsIndeterminate" Value="True">
                            <Trigger.ExitActions>
                                <StopStoryboard BeginStoryboardName="IndeterminateOn_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource IndeterminateOn}" x:Name="IndeterminateOn_BeginStoryboard" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <EventTrigger RoutedEvent="RangeBase.ValueChanged">
                            <BeginStoryboard Storyboard="{StaticResource ValueChangedOn}" />
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearSliderThumb" d:IsControlPart="True" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border BorderBrush="{x:Null}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DarkBrush}" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,5,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDragging" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false" />
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid x:Name="GridRoot">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="0,2,0,2" Opacity="0.1" x:Name="Shadow1" Grid.Row="1" Height="7" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="0,2.5,0,2.5" Opacity="0.15" x:Name="Shadow2" Grid.Row="1" Height="7" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="0,3.2,0,3.2" x:Name="Shadow3" Opacity="0.2" Grid.Row="1" Height="7" />
                        <TickBar Visibility="Collapsed" x:Name="TopTick" Height="4" SnapsToDevicePixels="True" Placement="Top" Fill="{DynamicResource GlyphBrush}" />

                        <Border Grid.Row="1" Margin="0" x:Name="Bdr" Height="5" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1" />

                        <Track Grid.Row="1" x:Name="PART_Track">
                            <Track.Thumb>
                                <Thumb Style="{DynamicResource NuclearSliderThumb}" Width="18" Height="14" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{DynamicResource NuclearScrollRepeatButtonStyle}" Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                        </Track>

                        <TickBar Visibility="Collapsed" Grid.Row="2" x:Name="BottomTick" Height="4" SnapsToDevicePixels="True" Placement="Bottom" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TickPlacement" Value="TopLeft">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="BottomRight">
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="TickPlacement" Value="Both">
                            <Setter Property="Visibility" Value="Visible" TargetName="TopTick" />
                            <Setter Property="Visibility" Value="Visible" TargetName="BottomTick" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Bdr" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Bdr" />
                        </Trigger>

                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="GridRoot">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="Orientation" Value="Horizontal" />
                        </Trigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource DarkBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
    </Style>

    <Style TargetType="{x:Type TabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="grid" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local" Margin="0,0,0,-29">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0" />
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" x:Name="RowDefinition0" />
                            <RowDefinition Height="*" x:Name="RowDefinition1" />
                        </Grid.RowDefinitions>
                        <Border CornerRadius="2,2,0,0" x:Name="border" Panel.ZIndex="100">
                            <TabPanel x:Name="HeaderPanel" IsItemsHost="true" Panel.ZIndex="1" KeyboardNavigation.TabIndex="1" RenderTransformOrigin="0.5,0.5" Width="Auto" Height="Auto" Margin="15,33,0,0">
                                <TabPanel.LayoutTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.LayoutTransform>
                                <TabPanel.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </TabPanel.RenderTransform>

                            </TabPanel>
                        </Border>
                        <Border Grid.Row="0" x:Name="ContentPanel" BorderThickness="1" CornerRadius="2" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.TabIndex="2" Margin="4,29,4,4" Grid.RowSpan="2">
                            <Grid>




                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Margin="4,4,4,4">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF878787" Offset="0" />
                                            <GradientStop Color="#FF737373" Offset="0.402" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                            <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                        <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                    <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                    <GradientStop Color="#FF646464" Offset="0.522" />
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Grid>
                                                <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                                <ContentPresenter Margin="4,30,4,4" x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" />
                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />



                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="Auto" />
                            <Setter Property="Grid.Row" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,2,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,0,2,2" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="4,0,4,29" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,33" />
                            <Setter Property="Margin" TargetName="PART_SelectedContentHost" Value="4,0,4,30" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">

                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="Auto" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="0" />
                            <Setter Property="Margin" TargetName="border" Value="0,0,0,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="-40,0,0,0" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,10,0,0" />
                            <Setter Property="Margin" TargetName="PART_SelectedContentHost" Value="30,0,4,4" />
                            <Setter Property="Margin" TargetName="grid" Value="0,0,-29,0" />

                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0" />
                            <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0" />
                            <Setter Property="Width" TargetName="ColumnDefinition0" Value="*" />
                            <Setter Property="Width" TargetName="ColumnDefinition1" Value="Auto" />
                            <Setter Property="Height" TargetName="RowDefinition0" Value="*" />
                            <Setter Property="Height" TargetName="RowDefinition1" Value="0" />
                            <Setter Property="Grid.Column" TargetName="border" Value="1" />
                            <Setter Property="CornerRadius" TargetName="ContentPanel" Value="2,0,0,2" />
                            <Setter Property="CornerRadius" TargetName="border" Value="0,2,2,0" />
                            <Setter Property="Margin" TargetName="ContentPanel" Value="0,0,-40,0" />
                            <Setter Property="Margin" TargetName="PART_SelectedContentHost" Value="4,0,30,4" />
                            <Setter Property="Margin" TargetName="HeaderPanel" Value="0,5,0,0" />
                            <Setter Property="Margin" TargetName="grid" Value="-29,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.7" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedState" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid3" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="12" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid2" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="12" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="33" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid3" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="33" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="grid2" Storyboard.TargetProperty="(FrameworkElement.Height)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="grid" Margin="3,2,3,0">
                        <Grid.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Grid.LayoutTransform>
                        <Grid x:Name="grid1">



                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Opacity="0.1" x:Name="Shadow1" Margin="-1,-1,-1,-1" Visibility="Collapsed" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-0.5,-0.5,-0.5,-0.5" Opacity="0.15" x:Name="Shadow2" Visibility="Collapsed" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-0.3,-0.3,-0.3,-0.3" x:Name="Shadow3" Opacity="0.2" Visibility="Collapsed" />
                            <Grid x:Name="grid3" Height="33" VerticalAlignment="Top">
                                <Border BorderThickness="2,0,2,2" CornerRadius="0,0,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="0,0,2,2" x:Name="DarkBorder" />
                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,0,1,1" CornerRadius="0,0,1,1" />
                                    </Grid>
                                </Border>
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Rectangle Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="SelectedState" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Fill="{DynamicResource MouseOverBrush}" />
                                <ContentPresenter HorizontalAlignment="Center" Margin="12,6,12,6" x:Name="ContentSite" VerticalAlignment="Center" RecognizesAccessKey="True" ContentSource="Header" />
                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,0,0" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />


                            </Grid>
                            <Grid x:Name="grid2" Margin="0,-33,0,33" VerticalAlignment="Bottom" Height="0" Opacity="1">
                                <Border BorderThickness="2,2,2,0" CornerRadius="3,3,0,0" x:Name="SelectedBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Margin="0,0,0,0" VerticalAlignment="Bottom" Height="27" Opacity="1">
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,0,0" x:Name="DarkBorder1" />
                                        <Border x:Name="TranslucentBorder1" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,0" CornerRadius="1,1,0,0" />
                                    </Grid>
                                </Border>
                                <Border x:Name="border" Margin="0,0,0,0" Opacity="0.5" Background="{TemplateBinding Background}" BorderBrush="{x:Null}" BorderThickness="1,1,1,0" CornerRadius="4,4,0,0" Height="27" VerticalAlignment="Bottom" />
                                <ContentPresenter HorizontalAlignment="Center" Margin="12,10,12,9.04" x:Name="ContentSite_Copy" VerticalAlignment="Stretch" RecognizesAccessKey="True" ContentSource="Header" d:LayoutOverrides="Height" RenderTransformOrigin="0.5,0.5">
                                    <ContentPresenter.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1" ScaleY="1" />
                                            <SkewTransform AngleX="0" AngleY="0" />
                                            <RotateTransform Angle="0" />
                                            <TranslateTransform X="0" Y="0" />
                                        </TransformGroup>
                                    </ContentPresenter.RenderTransform>
                                </ContentPresenter>
                            </Grid>


                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="-90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="grid1" Value="0,0,0,-2" />
                            <Setter Property="Margin" TargetName="grid3" Value="0,27,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="90" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="grid1" Value="0,0,0,-3" />
                            <Setter Property="Margin" TargetName="grid3" Value="0,27,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="ContentSite">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="grid">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="grid1" Value="0,5,0,-2" />
                            <Setter Property="Margin" TargetName="DarkBorder" Value="0,0,0,10" />
                            <Setter Property="RenderTransform" TargetName="ContentSite_Copy">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Margin" TargetName="DarkBorder1" Value="0,0,0,10" />
                            <Setter Property="Height" TargetName="grid3" Value="25" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectOff_BeginStoryboard" Storyboard="{StaticResource SelectOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="SelectOn_BeginStoryboard" Storyboard="{StaticResource SelectOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Panel.ZIndex" Value="100" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" SourceName="grid" />
                                <Condition Property="Selector.IsSelected" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground" Value="#FFFFFFFF" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Grid>

                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Margin="4,4,4,4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF878787" Offset="0" />
                                    <GradientStop Color="#FF737373" Offset="0.402" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                    <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                    <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                            <GradientStop Color="#FFD8D8D8" Offset="1" />
                                            <GradientStop Color="#FF646464" Offset="0.522" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid>
                                        <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                        <ScrollViewer Focusable="False" Padding="4" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="False" Background="{DynamicResource DarkBrush}" Margin="0,0,1,0">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearTreeViewItemToggleButton" d:IsControlPart="True" TargetType="{x:Type ToggleButton}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CheckedTrue">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="180" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ExpandPath" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="90" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Width="15" Height="13" Background="Transparent">
                        <Path Visibility="Collapsed" HorizontalAlignment="Left" Margin="1,1,1,1" x:Name="IsExpandedPath" VerticalAlignment="Center" Fill="{DynamicResource GlyphBrush}" Data="M 0 4 L 8 4 L 4 8 Z" />

                        <Path Grid.Column="0" HorizontalAlignment="Right" x:Name="ExpandPath" VerticalAlignment="Center" Stroke="{DynamicResource TextBrush}" StrokeThickness="2" Data="M 1,1.5 L 4.5,5 L 8,1.5" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,0">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" ScaleY="-1" />
                                    <SkewTransform AngleX="0" AngleY="0" />
                                    <RotateTransform Angle="90" />
                                    <TranslateTransform X="0" Y="0" />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedTrue}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style d:IsControlPart="True" TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding" Value="1,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,1,0,1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="19" Width="Auto" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{DynamicResource NuclearTreeViewItemToggleButton}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press" />
                        <Border Grid.Column="1" x:Name="Selection_Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,7,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                    </Grid>
                                </Border>
                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,7,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder" />
                                        <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                    </Grid>
                                </Border>
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="SelectedHoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0" IsHitTestVisible="False">
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,7,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder1" />
                                        <Border x:Name="HoverTranslucentBorder1" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                    </Grid>
                                </Border>
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="SelectedHoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" IsHitTestVisible="False" />
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Header" ContentSource="Header" Margin="3,3,3,3" />
                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />
                            </Grid>

                        </Border>
                        <ItemsPresenter Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="1" x:Name="ItemsHost" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedHoverOff_BeginStoryboard" Storyboard="{StaticResource SelectedHoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedHoverOn_BeginStoryboard" Storyboard="{StaticResource SelectedHoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="False" />
                                <Condition Property="IsMouseOver" Value="True" SourceName="Selection_Border" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ItemsHost" />
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Visibility" Value="Hidden" TargetName="Expander" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="#FF042271" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Grid>



                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Margin="4,4,4,4">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF878787" Offset="0" />
                                    <GradientStop Color="#FF737373" Offset="0.402" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                    <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                    <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                            <GradientStop Color="#FFD8D8D8" Offset="1" />
                                            <GradientStop Color="#FF646464" Offset="0.522" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid>
                                        <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                        <ScrollViewer Padding="{TemplateBinding Padding}" Style="{DynamicResource ListViewScrollViewer}" Margin="0,0,0,0">
                                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </ScrollViewer>
                                    </Grid>
                                </Border>
                            </Grid>
                        </Border>
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />





                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Stroke="#8E6EA6F5" StrokeThickness="1" RadiusX="2" RadiusY="2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="0,0,0,1" />
        <Setter Property="Padding" Value="5,2,5,2" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,1,0,1">

                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder" />
                                <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="SelectedHoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder1" />
                                <Border x:Name="HoverTranslucentBorder1" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="SelectedHoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <GridViewRowPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,2,0,2" VerticalAlignment="Stretch" />
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />


                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>


                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="Selector.IsSelected" Value="False" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedHoverOff_BeginStoryboard" Storyboard="{StaticResource SelectedHoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard x:Name="SelectedHoverOn_BeginStoryboard" Storyboard="{StaticResource SelectedHoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="Selector.IsSelected" Value="True" />
                                <Condition Property="IsMouseOver" Value="True" />
                            </MultiTrigger.Conditions>

                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true" />
                                <Condition Property="Selector.IsSelectionActive" Value="false" />
                            </MultiTrigger.Conditions>


                        </MultiTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Selector.IsSelected" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="GridViewColumnHeaderGripper" TargetType="{x:Type Thumb}">
        <Setter Property="Canvas.Right" Value="-8.5" />
        <Setter Property="Width" Value="18" />
        <Setter Property="Height" Value="{Binding Path=ActualHeight, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Padding" Value="0,3,0,4" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}">
                        <Rectangle HorizontalAlignment="Center" Width="0.5">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Padding" Value="2,0,2,0" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid Margin="0,1,0,1">



                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" Margin="2,2,2,2" />
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />
                        <Canvas>
                            <Thumb x:Name="PART_HeaderGripper" Style="{StaticResource GridViewColumnHeaderGripper}" Margin="0,0,7,0" Width="Auto" HorizontalAlignment="Stretch" />
                        </Canvas>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Hidden" />

                        </Trigger>
                        <Trigger Property="Height" Value="Auto">
                            <Setter Property="MinHeight" Value="20" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="Role" Value="Padding">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Role" Value="Floating">
                            <Setter TargetName="PART_HeaderGripper" Property="Visibility" Value="Collapsed" />
                            <Setter Property="Background" Value="Yellow" />
                            <Setter Property="Foreground" Value="{DynamicResource MouseOverBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <Style x:Key="ListViewScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <DockPanel Margin="{TemplateBinding Padding}">
                            <ScrollViewer Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" DockPanel.Dock="Top">
                                <GridViewHeaderRowPresenter Margin="2,0,2,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" />
                            </ScrollViewer>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" KeyboardNavigation.DirectionalNavigation="Local" />
                        </DockPanel>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Row="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Value="{Binding Path=HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,-17" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Value="{Binding Path=VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,-19,0" />
                        <DockPanel Grid.Column="1" Grid.Row="1" LastChildFill="False">
                            <Rectangle Fill="{x:Null}" Width="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" DockPanel.Dock="Left" />
                            <Rectangle Fill="{x:Null}" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" DockPanel.Dock="Top" />
                        </DockPanel>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter" />
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="#D5DFE5" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="6" />
                        </Grid.RowDefinitions>
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" Grid.ColumnSpan="4" Grid.RowSpan="4" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.15" Grid.ColumnSpan="4" Grid.RowSpan="4" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" Opacity="0.2" Grid.ColumnSpan="4" Grid.RowSpan="4" />
                        <Border Grid.ColumnSpan="4" Grid.RowSpan="4" Background="{DynamicResource BaseBrush}" CornerRadius="4,4,4,4" BorderThickness="1,1,1,1" />
                        <Border Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderThickness="1,1,1,1" CornerRadius="4" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Grid>

                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF878787" Offset="0" />
                                            <GradientStop Color="#FF737373" Offset="0.402" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                            <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" />
                                        <Border Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                        <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                    <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                    <GradientStop Color="#FF646464" Offset="0.522" />
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Grid>
                                                <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737">
                                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="4,4,4,4" />
                                                </Border>


                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />
                            </Grid>
                        </Border>

                        <Border Grid.ColumnSpan="4" Grid.RowSpan="2" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" Margin="4,4,4,4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />

                        <Border x:Name="Header" Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Padding="3,1,3,0">
                            <Grid>

                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
                            </Grid>

                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
            </Setter.Value>
        </Setter>
    </Style>

    <LinearGradientBrush x:Key="ToolBarHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="ToolBarToggleButtonHorizontalBackground" EndPoint="0,1" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ToolBarButtonHover" Color="#FF8F8F8F" />
    <SolidColorBrush x:Key="ToolBarGripper" Color="#C6C3C6" />
    <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="PressedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border SnapsToDevicePixels="true" x:Name="Bd" CornerRadius="0,0,0,0">
                        <Grid>
                            <Border BorderThickness="0,2,2,2" CornerRadius="0,1,1,0" x:Name="ButtonBase">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF878787" Offset="0" />
                                        <GradientStop Color="#FF737373" Offset="0.402" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                                        <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                        <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Grid Width="Auto" Height="Auto">
                                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,1,1,0" />
                                    <Border Background="{x:Null}" CornerRadius="0,2,2,0" x:Name="InsetBorder" BorderThickness="1,0,0,0">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                <GradientStop Color="#FF646464" Offset="0.522" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Grid>
                                            <Border BorderThickness="0,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="7,2,2,2" VerticalAlignment="Bottom" Width="6" Height="7">
                                <Path Stroke="White" Data="M 1 1.5 L 6 1.5" />
                                <Path Stroke="{TemplateBinding Foreground}" Data="M 0 0.5 L 5 0.5" />
                                <Path Fill="White" Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" />
                                <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" />
                            </Canvas>

                            <Border Background="{TemplateBinding Background}" CornerRadius="0,3,3,0" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" x:Name="HoverEffect" />
                            <Border CornerRadius="0,3,3,0" Opacity="0" OpacityMask="{x:Null}" x:Name="DisabledBorder" Background="{DynamicResource DisabledBackgroundBrush}" BorderBrush="{DynamicResource DisabledBorderBrush}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
        
    <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFFDFDFD" />
    <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFFFFFFF" />
    <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border SnapsToDevicePixels="True" Background="Transparent" Padding="{TemplateBinding Padding}" CornerRadius="0,0,0,0">
                        <Rectangle>
                            <Rectangle.Fill>
                                <DrawingBrush TileMode="Tile" Viewbox="0,0,4,4" ViewboxUnits="Absolute" Viewport="0,0,4,4" ViewportUnits="Absolute">
                                    <DrawingBrush.Drawing>
                                        <DrawingGroup>
                                            <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z" />
                                            <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z" />
                                        </DrawingGroup>
                                    </DrawingBrush.Drawing>
                                </DrawingBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Cursor" Value="SizeAll" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarToggleButtonVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#ECECEC" Offset="0" />
        <GradientStop Color="#DDDDDD" Offset="0.5" />
        <GradientStop Color="#A0A0A0" Offset="1" />
    </LinearGradientBrush>
    <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border SnapsToDevicePixels="true" x:Name="Bd" Background="{TemplateBinding Background}" CornerRadius="0,0,3,3">
                        <Canvas SnapsToDevicePixels="true" HorizontalAlignment="Right" Margin="2,7,2,2" VerticalAlignment="Bottom" Width="7" Height="6">
                            <Path Stroke="White" Data="M 1.5 1 L 1.5 6" />
                            <Path Stroke="{TemplateBinding Foreground}" Data="M 0.5 0 L 0.5 5" />
                            <Path Fill="White" Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" />
                            <Path Fill="{TemplateBinding Foreground}" Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" />
                        </Canvas>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ToolBarVerticalBackground" EndPoint="1,0" StartPoint="0,0">
        <GradientStop Color="#FFFFFF" Offset="0" />
        <GradientStop Color="#FFFBFF" Offset="0.5" />
        <GradientStop Color="#F7F7F7" Offset="1" />
    </LinearGradientBrush>
    <Style TargetType="{x:Type ToolBar}">
        <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolBar}">
                    <Grid SnapsToDevicePixels="true" Margin="3,1,1,1" x:Name="Grid">
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="3" RadiusY="3" Margin="-1.5,-1.5,-1.5,-1.5" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="2" RadiusY="2" Margin="-1,-1,-1,-1" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="1" RadiusY="1" Margin="-0.5,-0.5,-0.5,-0.5" x:Name="Shadow3" Opacity="0.2" />
                        <Grid HorizontalAlignment="Right" x:Name="OverflowGrid" Margin="0,0,-2,0">
                            <ToggleButton IsEnabled="{TemplateBinding HasOverflowItems}" FocusVisualStyle="{x:Null}" x:Name="OverflowButton" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" ClickMode="Press" IsChecked="{Binding Path=IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Popup Focusable="false" AllowsTransparency="true" IsOpen="{Binding Path=IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" StaysOpen="False" x:Name="OverflowPopup">
                                <Border x:Name="Shdw">
                                    <Border BorderThickness="1,1,1,1" Background="{DynamicResource BaseBrush}">
                                        <ToolBarOverflowPanel Focusable="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" FocusVisualStyle="{x:Null}" Margin="2" x:Name="PART_ToolBarOverflowPanel" WrapWidth="200" KeyboardNavigation.DirectionalNavigation="Cycle" KeyboardNavigation.TabNavigation="Cycle" />
                                    </Border>
                                </Border>
                            </Popup>
                        </Grid>
                        <Border Margin="0,0,11,0" x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0" Padding="{TemplateBinding Padding}" Background="{x:Null}">
                            <Grid>

                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Grid Width="10">
                                        <Border BorderThickness="2,2,0,2" CornerRadius="1,0,0,1" x:Name="ButtonBase">
                                            <Border.Background>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FF878787" Offset="0" />
                                                    <GradientStop Color="#FF737373" Offset="0.402" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                    <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                                    <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Grid Width="Auto" Height="Auto">
                                                <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,0,1" CornerRadius="1,0,0,1" />
                                                <Border Background="{x:Null}" BorderThickness="0,0,1,0" CornerRadius="0,0,0,0" x:Name="InsetBorder">
                                                    <Border.BorderBrush>
                                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                            <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                            <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                            <GradientStop Color="#FF646464" Offset="0.522" />
                                                        </LinearGradientBrush>
                                                    </Border.BorderBrush>
                                                    <Grid>
                                                        <Border BorderThickness="0,0,1,0" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />


                                                    </Grid>
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,0,1" CornerRadius="1,1,1,1" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />
                                        <Thumb Padding="6,5,1,6" x:Name="ToolBarThumb" Style="{StaticResource ToolBarThumbStyle}" />
                                    </Grid>
                                    <Grid>
                                        <Border BorderBrush="{DynamicResource InsetBrush}" BorderThickness="0,1,0,1" Background="{DynamicResource DarkBrush}" />
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center" Margin="4,0,4,0" x:Name="ToolBarHeader" VerticalAlignment="Center" ContentSource="Header" />
                                    </Grid>
                                    <Grid>
                                        <ToolBarPanel SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0,1,2,2" x:Name="PART_ToolBarPanel" IsItemsHost="true" Background="{DynamicResource DarkBrush}" />
                                        <Border BorderBrush="{DynamicResource InsetBrush}" BorderThickness="0,1,0,1" />
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsOverflowOpen" Value="true">
                            <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false" />
                        </Trigger>
                        <Trigger Property="Header" Value="{x:Null}">
                            <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="ToolBarTray.IsLocked" Value="true">
                            <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                            <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5" />
                            <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true" />
                            <Setter Property="Background" TargetName="Shdw" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1" />
                            <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}" />
                            <Setter Property="Height" TargetName="ToolBarThumb" Value="10" />
                            <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto" />
                            <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0" />
                            <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1" />
                            <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4" />
                            <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top" />
                            <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top" />
                            <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch" />
                            <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom" />
                            <Setter Property="Placement" TargetName="OverflowPopup" Value="Right" />
                            <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11" />
                            <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
    </Style>

    <Style x:Key="{x:Static ToolBar.ButtonStyleKey}" TargetType="{x:Type Button}" BasedOn="{x:Null}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NuclearButtonFocusVisual}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearButton}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="MinHeight" Value="18" />
        <Setter Property="MinWidth" Value="50" />
    </Style>

    <Style x:Key="{x:Static ToolBar.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource RadioButtonFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearRadioButton}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style x:Key="{x:Static ToolBar.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="Template" Value="{DynamicResource NuclearCheckBox}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style x:Key="{x:Static ToolBar.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearComboBox}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontSize" Value="10" />
    </Style>

    <Style x:Key="{x:Static ToolBar.TextBoxStyleKey}" TargetType="{x:Type TextBox}">
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AllowDrop" Value="true" />
        <Setter Property="Template" Value="{DynamicResource NuclearTextBox}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="true" Margin="2" Stroke="Black" StrokeDashArray="1 2" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ToggleButton}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CheckedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CheckedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>

                        <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" CornerRadius="3,3,3,3" />



                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.5,-2.5,-2.5,-2.5" Opacity="0.1" x:Name="Shadow1" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
                        <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <Rectangle Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="Hover" Opacity="0" OpacityMask="{x:Null}">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{DynamicResource WhiteColor}" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" RecognizesAccessKey="True" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="4,4,4,4" />
                        <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />



                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="true">

                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">

                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="CheckedOff_BeginStoryboard" Storyboard="{StaticResource CheckedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CheckedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                            <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.4" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource DarkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Horizontal" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background" Value="{DynamicResource DarkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Grid>
                        <Border Margin="1" x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                        <StackPanel Background="{TemplateBinding Background}" IsItemsHost="True" ClipToBounds="True" Orientation="Vertical" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{DynamicResource DisabledBackgroundBrush}" TargetName="Border" />
                            <Setter Property="BorderBrush" Value="{DynamicResource DisabledBorderBrush}" TargetName="Border" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DropShadowBitmapEffect x:Key="PopupDropShadow" ShadowDepth="1.5" Softness="0.15" />

    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="HighlightOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HightlightOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="17" Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition x:Name="columnDefinition" Width="37"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition Width="14" />
                            </Grid.ColumnDefinitions>

                            <ContentPresenter Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" MinWidth="32" />

                            <Grid Visibility="Hidden" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight" />
                            </Grid>




                            <Border Grid.Column="0" Grid.ColumnSpan="5"  BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                                <Grid Width="Auto" Height="Auto">
                                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                </Grid>
                            </Border>
                            <ContentPresenter Grid.Column="1" x:Name="HeaderHost" RecognizesAccessKey="True" ContentSource="Header" Margin="4,2,4,2" />
                            <TextBlock Margin="{TemplateBinding Padding}" Grid.Column="3" Text="{TemplateBinding InputGestureText}"/>							
                            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.Column="1" />




                            <Grid Grid.Column="4" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z" />
                            </Grid>

                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" AllowsTransparency="true" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" VerticalOffset="-3">
                                <Grid x:Name="SubMenu">
                                    <Border x:Name="SubMenuBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderThickness="1" />

                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,4,0,4" />
                                </Grid>
                            </Popup>

                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>

                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                            <Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
                        </Trigger>

                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1" />
                            <Setter Property="Padding" Value="6,3,6,3" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                            <Setter Property="Width" TargetName="columnDefinition" Value="0"/>
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Grid.IsSharedSizeScope" Value="true" />
                        </Trigger>

                        <Trigger Property="Role" Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock" Value="Top" />
                            <Setter Property="Padding" Value="0,2,0,2" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                            <Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup" />
                        </Trigger>

                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel" />
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Icon" />
                        </Trigger>

                        <Trigger Property="AllowsTransparency" SourceName="SubMenuPopup" Value="true">
                            <Setter Property="Margin" Value="0,0,3,3" TargetName="SubMenu" />
                            <Setter Property="SnapsToDevicePixels" Value="true" TargetName="SubMenu" />
                            <Setter Property="BitmapEffect" Value="{DynamicResource PopupDropShadow}" TargetName="SubMenuBorder" />
                        </Trigger>

                        <Trigger Property="IsHighlighted" Value="true">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HightlightOff_BeginStoryboard" Storyboard="{StaticResource HightlightOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HighlightOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>