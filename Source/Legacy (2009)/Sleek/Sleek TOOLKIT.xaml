<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Custom="http://schemas.microsoft.com/wpf/2008/toolkit" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:System_Windows_Controls="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit" xmlns:System="clr-namespace:System;assembly=mscorlib" mc:Ignorable="d">

    <!--
  REUXABLES THEMES
  
  Copyright (C) 2007-2009 Nukeation Studios. All rights reserved.
  
  This file is protected by the End-User License Agreement provided at:
  http://reuxables.nukeation.com/files/license.txt
  
  THIS FILE MUST BE COMPILED WITH YOUR EXECUTABLE / ASSEMBLY BEFORE BEING DISTRIBUTED
  THIS NOTICE MUST REMAIN INTACT. DO NOT REMOVE!
  -->
    
    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

<ControlTemplate x:Key="SelectAllButtonTemplate" TargetType="{x:Type Button}">
	<ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Rectangle x:Name="Border" SnapsToDevicePixels="True" StrokeThickness="0" Fill="{DynamicResource NormalBrush}" />
            <Border SnapsToDevicePixels="True" Margin="1,1,1,0" BorderBrush="White" BorderThickness="0,1,0,0" IsHitTestVisible="False" />
			<Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                <Grid Width="Auto" Height="Auto">
                    <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                </Grid>
            </Border>
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
            <Polygon x:Name="Arrow" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="8,8,3,3" Fill="{DynamicResource GlyphBrush}" Stretch="Uniform" Points="0,10 10,10 10,0" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Arrow" Property="Visibility" Value="Collapsed" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="2" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Custom:DataGridColumnHeader}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridColumnHeader}">
                   <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="PressedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
			 <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="2">
                <Grid Width="Auto" Height="Auto">
                    <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                </Grid>
            </Border>
            <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="4" RadiusY="4" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="2" />
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="SortedBrush" Opacity="0" Grid.ColumnSpan="2" d:LayoutOverrides="GridBox" />
                        
						<ContentPresenter Margin="6,3,6,3" VerticalAlignment="Center" />
                        <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="1" Width="8" Height="6" Fill="White" Margin="0,0,8,0" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}" />
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="{x:Null}"/>
                        <MultiTrigger>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </MultiTrigger.ExitActions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="SortDirection" Value="{x:Null}" />
                            </MultiTrigger.Conditions>


                        </MultiTrigger>

                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Opacity" TargetName="SortedBrush" Value="0.35" />

                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter Property="Opacity" TargetName="SortedBrush" Value="0.35" />

                        </Trigger>
                        <Trigger Property="DisplayIndex" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_LeftHeaderGripper"/>
                        </Trigger>
						<Trigger Property="IsMouseOver" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </Trigger.EnterActions>
            </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
    </Style>


    <Style TargetType="{x:Type Custom:DataGridRow}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridRow}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder" />
                                <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />

                        <Border x:Name="DGR_Border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <Custom:SelectiveScrollingGrid>
                                <Custom:SelectiveScrollingGrid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
       </Custom:SelectiveScrollingGrid.ColumnDefinitions>
                                <Custom:SelectiveScrollingGrid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
       </Custom:SelectiveScrollingGrid.RowDefinitions>
                                <Custom:DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Custom:DataGridRowHeader x:Name="RowHeader" Custom:SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Grid.RowSpan="2" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static Custom:DataGridHeadersVisibility.Row}, Converter={x:Static Custom:DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type Custom:DataGrid}}}" />
                            </Custom:SelectiveScrollingGrid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter Property="BorderThickness" Value="3" />
                            <Setter Property="BorderBrush" Value="Red" />
                            <Setter Property="Foreground" Value="Blue" />
                            <Setter Property="FontSize" Value="16" />

                            <Setter Property="Background" TargetName="RowHeader" Value="Red" />
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="Blue" />
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Custom:DataGridCell}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridCell}">
                    <Border Background="Transparent" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Custom:DataGridRowHeader}">
    		<Setter Property="MinWidth" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGridRowHeader}">
                	<ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Custom:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{Binding HorizontalGridLinesBrush, RelativeSource={RelativeSource AncestorType={x:Type Custom:DataGrid}}}" BorderThickness="0,1,0,0" Margin="0,-1,0,0" Padding="{TemplateBinding Padding}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Opacity="0.2">
                       		<Grid>
                       			<Border BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder" />
                                <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
						<Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                       </Grid>
                        </Custom:DataGridHeaderBorder>
                        <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                    <Setter Property="Cursor" Value="SizeNS" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
                            <Thumb.Style>
                                <Style TargetType="{x:Type Thumb}">
                                    <Setter Property="Height" Value="8" />
                                    <Setter Property="Background" Value="#00FFFFFF" />
                                    <Setter Property="Cursor" Value="SizeNS" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type Thumb}">
                                                <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Thumb.Style>
                        </Thumb>
                    </Grid>
					<ControlTemplate.Triggers>
                         <Trigger Property="IsRowSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowHeaderBackgroundStyle" TargetType="{x:Type Custom:DataGridRowHeader}">
        <Setter Property="Background" Value="Gray" />
    </Style>


    <Style x:Key="NuclearCalendar" TargetType="{x:Type Custom:Calendar}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
		<Setter Property="CalendarButtonStyle" Value="{DynamicResource NuclearCalendarButton}" />
		<Setter Property="CalendarDayButtonStyle" Value="{DynamicResource NuclearCalendarDayButton}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:Calendar}">
                    <StackPanel HorizontalAlignment="Center" x:Name="PART_Root" Background="{x:Null}">
                        <Custom:CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Custom:Calendar}">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
		<Setter Property="CalendarButtonStyle" Value="{DynamicResource NuclearCalendarButton}" />
		<Setter Property="CalendarDayButtonStyle" Value="{DynamicResource NuclearCalendarDayButton}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:Calendar}">
                    <StackPanel HorizontalAlignment="Center" x:Name="PART_Root" Background="{x:Null}">
                        <Custom:CalendarItem x:Name="PART_CalendarItem" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
	
	    
    <Style TargetType="{x:Type Custom:CalendarItem}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="Margin" Value="0,3,0,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:CalendarItem}">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="DayTitleTemplate">
                            <TextBlock HorizontalAlignment="Center" Margin="0,6,0,6" VerticalAlignment="Center" FontFamily="Verdana" FontSize="9.5" FontWeight="Bold" Foreground="{DynamicResource TextBrush}" Text="{Binding}" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledColor" Color="#A5FFFFFF" />
                        </Grid.Resources>
                        <Border Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="1,1,1,1">

                            <Grid>

                                <Grid.Resources>
                                    <ControlTemplate x:Key="HeaderButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,4,1,9" x:Name="buttonContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="#FF333333" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="NextButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">
                                            <Rectangle Fill="#11E5EBF1" Stretch="Fill" Opacity="1" />
                                            <Grid>
                                                <Path Fill="{DynamicResource TextBrush}" Stretch="Fill" HorizontalAlignment="Right" Margin="0,-6,14,0" VerticalAlignment="Center" Width="6" Height="10" Data="M282.875,231.875L282.875,240.375 288.625,236z" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="PreviousButtonTemplate" TargetType="{x:Type Button}">
                                        <Grid Cursor="Hand">

                                            <Grid>
                                                <Path Fill="#FF333333" Stretch="Fill" HorizontalAlignment="Left" Margin="14,-6,0,0" VerticalAlignment="Center" Width="6" Height="10" Data="M288.75,232.25L288.75,240.625 283,236.625z" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>

                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Grid.ColumnSpan="3" Grid.RowSpan="2">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF878787" Offset="0" />
                                            <GradientStop Color="#FF737373" Offset="0.402" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border.BorderBrush>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FFFFFFFF" Offset="0" />
                                            <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                            <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                        </LinearGradientBrush>
                                    </Border.BorderBrush>
                                    <Grid Width="Auto" Height="Auto">
                                        <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                        <Border Margin="4,0,4,0" Background="#FF000000" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                            <Border.BorderBrush>
                                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                    <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                    <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                    <GradientStop Color="#FF646464" Offset="0.522" />
                                                </LinearGradientBrush>
                                            </Border.BorderBrush>
                                            <Grid>
                                                <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />


                                            </Grid>
                                        </Border>
                                    </Grid>
                                </Border>
                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" Grid.ColumnSpan="3" Grid.RowSpan="2" />
                                <Button HorizontalAlignment="Left" x:Name="PART_PreviousButton" Width="28" Height="20" Focusable="False" Grid.Column="0" Grid.Row="0" Margin="10,4,0,0">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="HoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="HoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid Cursor="Hand">
                                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                                    <Grid Width="Auto" Height="Auto">
                                                        <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                                    </Grid>
                                                </Border>
                                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                                <Path Fill="{DynamicResource TextBrush}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Height="10" Data="M288.75,232.25L288.75,240.625 283,236.625z" />
                                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />

                                            </Grid>


                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                                    <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button HorizontalAlignment="Center" x:Name="PART_HeaderButton" VerticalAlignment="Center" FontSize="10.5" FontWeight="Bold" Focusable="False" Grid.Column="1" Grid.Row="0" Margin="0,4,0,0">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="HoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="HoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid Cursor="Hand">

                                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                                    <Grid Width="Auto" Height="Auto">
                                                        <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                                    </Grid>
                                                </Border>
                                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="4,3,4,3" x:Name="buttonContent" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource TextBrush}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />

                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                                    <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Button HorizontalAlignment="Right" x:Name="PART_NextButton" Width="28" Height="20" Focusable="False" Grid.Column="2" Grid.Row="0" Margin="0,4,10,0">
                                    <Button.Template>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <ControlTemplate.Resources>
                                                <Storyboard x:Key="HoverOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="HoverOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOn">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                                <Storyboard x:Key="PressedOff">
                                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                        <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </ControlTemplate.Resources>
                                            <Grid Cursor="Hand">
                                                <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}">
                                                    <Grid Width="Auto" Height="Auto">
                                                        <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                                    </Grid>
                                                </Border>
                                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                                <Path Fill="{DynamicResource TextBrush}" Stretch="Fill" HorizontalAlignment="Center" VerticalAlignment="Center" Width="6" Height="10" Data="M282.875,231.875L282.875,240.375 288.625,236z" />
                                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" />

                                            </Grid>



                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOff}" x:Name="HoverOff_BeginStoryboard" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Trigger.ExitActions>
                                                        <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                                                    </Trigger.ExitActions>
                                                    <Trigger.EnterActions>
                                                        <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                                                    </Trigger.EnterActions>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="{DynamicResource DisabledForegroundBrush}" />
                                                    <Setter Property="Opacity" TargetName="DisabledBorder" Value="0.3" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <Grid Margin="6,-1,6,6" x:Name="PART_MonthView" Visibility="Visible" Grid.ColumnSpan="3" Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                </Grid>
                                <Grid Margin="6,3,7,6" x:Name="PART_YearView" Visibility="Hidden" Grid.ColumnSpan="3" Grid.Row="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                </Grid>
                            </Grid>

                        </Border>
                        <Rectangle Fill="#A5FFFFFF" Stretch="Fill" Stroke="#A5FFFFFF" StrokeThickness="1" RadiusX="2" RadiusY="2" x:Name="PART_DisabledVisual" Opacity="0" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" TargetName="PART_DisabledVisual" Value="Visible" />
                        </Trigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:Calendar}}}" Value="Year">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:Calendar}}}" Value="Decade">
                            <Setter Property="Visibility" TargetName="PART_MonthView" Value="Hidden" />
                            <Setter Property="Visibility" TargetName="PART_YearView" Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearCalendarButton" TargetType="{x:Type Custom:CalendarButton}">
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="MinWidth" Value="40" />
        <Setter Property="MinHeight" Value="42" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:CalendarButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder" />
                                <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="SelectedHoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="HoverDarkBorder1" />
                                <Border x:Name="HoverTranslucentBorder1" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle RadiusX="1" RadiusY="1" x:Name="CalendarButtonFocusVisual" IsHitTestVisible="False" Visibility="Collapsed" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,0,1,1" x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource TextBrush}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>
                            <Setter Property="Visibility" TargetName="CalendarButtonFocusVisual" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NuclearCalendarDayButton" TargetType="{x:Type Custom:CalendarDayButton}">
        <Setter Property="Background" Value="{DynamicResource MouseOverBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}" />
        <Setter Property="MinWidth" Value="5" />
        <Setter Property="MinHeight" Value="5" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:CalendarDayButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="SelectedOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Base" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOn">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="SelectedHoverOff">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="SelectedHoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid>
                        <Rectangle RadiusX="2" RadiusY="2" x:Name="TodayBackground" Opacity="0" Fill="{DynamicResource GlyphBrush}" />
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="Base" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="1,1,1,1" x:Name="DarkBorder" />
                                <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="HoverBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Opacity="0">
                            <Grid Width="Auto" Height="Auto">
                                <Border Margin="0,6,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="1,1,1,1" x:Name="HoverDarkBorder" />
                                <Border x:Name="HoverTranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                            </Grid>
                        </Border>
                        <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />

                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,1,5,1" x:Name="NormalText" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource TextBrush}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" />
                        <Path Fill="#FF000000" Stretch="Fill" HorizontalAlignment="Stretch" Margin="3,3,3,3" x:Name="Blackout" VerticalAlignment="Stretch" Opacity="0" RenderTransformOrigin="0.5,0.5" Data="M8.1772461,11.029181L10.433105,11.029181 11.700684,12.801641 12.973633,11.029181 15.191895,11.029181 12.844727,13.999395 15.21875,17.060919 12.962891,17.060919 11.673828,15.256231 10.352539,17.060919 8.1396484,17.060919 10.519043,14.042364z" />
                        <Rectangle Stroke="#FF45D6FA" RadiusX="1" RadiusY="1" x:Name="DayButtonFocusVisual" IsHitTestVisible="False" Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="HoverOn_BeginStoryboard" Storyboard="{StaticResource HoverOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="SelectedOff_BeginStoryboard" Storyboard="{StaticResource SelectedOff}" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource SelectedOn}" />
                            </Trigger.EnterActions>

                        </Trigger>
                        <Trigger Property="IsToday" Value="True">
                            <Setter Property="Opacity" TargetName="TodayBackground" Value="0.5" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type Custom:DatePicker}">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="IsTodayHighlighted" Value="True" />
        <Setter Property="SelectedDateFormat" Value="Short" />
        <Setter Property="Background" Value="#00FFFFFF" />
        <Setter Property="Padding" Value="2,2,2,2" />
		<Setter Property="CalendarStyle" Value="{DynamicResource NuclearCalendar}" />
        <Setter Property="BorderBrush" Value="{DynamicResource NormalBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DatePicker}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" x:Name="PART_Root" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.Resources>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="19" Height="18" Background="#11FFFFFF">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                                <ColumnDefinition Width="20*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*" />
                                                <RowDefinition Height="19*" />
                                                <RowDefinition Height="19*" />
                                                <RowDefinition Height="19*" />
                                            </Grid.RowDefinitions>
                                            <Border Margin="-1,-1,-1,-1" x:Name="Highlight" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#FF45D6FA" BorderThickness="1,1,1,1" CornerRadius="0,0,1,1" />
                                            <Border Margin="0,-1,0,0" x:Name="Background" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Background="#FF1F3B53" BorderBrush="#FFFFFFFF" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5" />
                                            <Border Margin="0,-1,0,0" x:Name="BackgroundGradient" Opacity="1" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" BorderBrush="#BF000000" BorderThickness="1,1,1,1" CornerRadius="0.5,0.5,0.5,0.5">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint="0.7,1" StartPoint="0.7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375" />
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625" />
                                                        <GradientStop Color="#C6FFFFFF" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle StrokeThickness="1" Grid.ColumnSpan="4" Grid.RowSpan="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD" />
                                                        <GradientStop Color="#FFAFCFEA" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949" />
                                                        <GradientStop Color="#FF9F9F9F" Offset="1" />
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Fill="#FF2F2F2F" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" />
                                            <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="3" Height="3" Grid.ColumnSpan="4" />
                                            <Border x:Name="DisabledVisual" Opacity="0" Grid.ColumnSpan="4" Grid.Row="0" Grid.RowSpan="4" BorderBrush="#B2FFFFFF" BorderThickness="1,1,1,1" CornerRadius="0,0,0.5,0.5" />
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF" />
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button HorizontalAlignment="Left" Margin="3,0,3,0" x:Name="PART_Button" VerticalAlignment="Stretch" Width="20" Foreground="{TemplateBinding Foreground}" Focusable="False" Grid.Column="1" Grid.Row="0">
                                <Button.Template>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <ControlTemplate.Resources>
                                            <Storyboard x:Key="HoverOn">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="HoverOff">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="PressedOn">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0.5" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                            <Storyboard x:Key="PressedOff">
                                                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="ButtonBase" Storyboard.TargetProperty="(UIElement.Opacity)">
                                                    <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="1" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </ControlTemplate.Resources>
                                        <Grid>
                                            <Grid FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center" Width="20" Height="21" Background="#11FFFFFF">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                    <ColumnDefinition Width="20*" />
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="23*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                    <RowDefinition Height="19*" />
                                                </Grid.RowDefinitions>
                                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" Grid.ColumnSpan="5" Grid.RowSpan="4" />
                                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" Grid.ColumnSpan="5" Grid.RowSpan="4" />
                                                <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" Grid.ColumnSpan="5" Grid.RowSpan="4" />
                                                <Border BorderThickness="2,2,2,2" CornerRadius="2,2,2,2" x:Name="ButtonBase" Background="{DynamicResource BaseBrush}" BorderBrush="{DynamicResource NormalBorderBrush}" Grid.ColumnSpan="5" Grid.RowSpan="4">
                                                    <Grid Width="Auto" Height="Auto">
                                                        <Border Margin="0,8,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                                        <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="{DynamicResource TranslucentBrush}" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                                    </Grid>
                                                </Border>
                                                <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="6" RadiusY="6" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" Grid.ColumnSpan="5" Grid.RowSpan="4" />
                                                <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" Grid.RowSpan="4" Grid.ColumnSpan="4" />
                                                <Path Fill="{DynamicResource TextBrush}" Stretch="Fill" HorizontalAlignment="Center" Margin="4,3,4,3" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Grid.Column="0" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3" Data="M11.426758,8.4305077L11.749023,8.4305077 11.749023,16.331387 10.674805,16.331387 10.674805,10.299648 9.0742188,11.298672 9.0742188,10.294277C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077z M14.65086,8.4305077L18.566387,8.4305077 18.566387,9.3435936 15.671368,9.3435936 15.671368,11.255703C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 15.560365,16.438808 14.951641,16.234707 14.468243,15.826504L14.881817,14.929531C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 15.83071,11.873379 15.399232,12.079271 15.016094,12.491055L14.65086,12.238613z" />
                                                <Ellipse Fill="#FFFFFFFF" StrokeThickness="0" HorizontalAlignment="Center" VerticalAlignment="Center" Width="3" Height="3" Grid.ColumnSpan="4" />
                                            </Grid>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                                                </Trigger.ExitActions>
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                                                </Trigger.EnterActions>
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Trigger.ExitActions>
                                                    <BeginStoryboard x:Name="PressedOff_BeginStoryboard" Storyboard="{StaticResource PressedOff}" />
                                                </Trigger.ExitActions>
                                                <Trigger.EnterActions>
                                                    <BeginStoryboard x:Name="PressedOn_BeginStoryboard" Storyboard="{StaticResource PressedOn}" />
                                                </Trigger.EnterActions>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                            <Custom:DatePickerTextBox x:Name="PART_TextBox" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Grid.Column="0" Grid.Row="0" Template="{DynamicResource NuclearDatePickerTextBox}" Foreground="{DynamicResource TextBrush}" Background="{DynamicResource MouseOverBrush}" />
                            <Grid x:Name="PART_DisabledVisual" IsHitTestVisible="False" Opacity="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Grid.Column="0" Grid.Row="0" />
                                <Rectangle Fill="#A5FFFFFF" RadiusX="1" RadiusY="1" Margin="3,0,3,0" Width="19" Height="18" Grid.Column="1" Grid.Row="0" />
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" StaysOpen="False" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="NuclearDatePickerTextBox" TargetType="{x:Type Custom:DatePickerTextBox}">
        <ControlTemplate.Resources>
            <Storyboard x:Key="HoverOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.45" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="HoverOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="HoverEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOn">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.0800000" Value="0.22" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2500000" Value="0.65" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="FocusedOff">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="FocusEffect" Storyboard.TargetProperty="(UIElement.Opacity)">
                    <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0.15" />
                    <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0" />
                </DoubleAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <Grid>
            <Grid.Resources>
                <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA" />
            </Grid.Resources>


            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="-2.4,-2.4,-2.4,-2.4" Opacity="0.1" x:Name="Shadow1" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="-1.8,-1.8,-1.8,-1.8" Opacity="0.15" x:Name="Shadow2" />
            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="-1,-1,-1,-1" x:Name="Shadow3" Opacity="0.2" />
            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase">
                <Border.Background>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FF878787" Offset="0" />
                        <GradientStop Color="#FF737373" Offset="0.402" />
                    </LinearGradientBrush>
                </Border.Background>
                <Border.BorderBrush>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                        <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                        <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                    </LinearGradientBrush>
                </Border.BorderBrush>
                <Grid Width="Auto" Height="Auto">
                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                    <Border Margin="4,0,4,0" Background="{DynamicResource DarkBrush}" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder" BorderBrush="{DynamicResource InsetBrush}">
                        <Grid>
                            <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="{DynamicResource InsetBrush2}" />

                            <Border x:Name="ContentElement" BorderBrush="{x:Null}" BorderThickness="1,1,1,1" />
                            <Border BorderBrush="{x:Null}" BorderThickness="1,1,1,1">
                                <ContentControl x:Name="PART_Watermark" Content="Show Calendar" Padding="2,2,2,2" Focusable="False" IsHitTestVisible="False" Opacity="0" Style="{DynamicResource ContentControlStyle1}" />
                            </Border>
                            <ScrollViewer Margin="0,0,0,0" x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />

                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />

        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Trigger.ExitActions>
                    <BeginStoryboard x:Name="FocusedOff_BeginStoryboard" Storyboard="{StaticResource FocusedOff}" />
                </Trigger.ExitActions>
                <Trigger.EnterActions>
                    <BeginStoryboard x:Name="FocusedOn_BeginStoryboard" Storyboard="{StaticResource FocusedOn}" />
                </Trigger.EnterActions>

            </Trigger>
            <MultiTrigger>
                <MultiTrigger.ExitActions>
                    <BeginStoryboard x:Name="HoverOff_BeginStoryboard" Storyboard="{StaticResource HoverOff}" />
                </MultiTrigger.ExitActions>
                <MultiTrigger.EnterActions>
                    <BeginStoryboard Storyboard="{StaticResource HoverOn}" />
                </MultiTrigger.EnterActions>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsFocused" Value="False" />
                </MultiTrigger.Conditions>

            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="ContentControlStyle1" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <ContentPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Custom:DataGrid}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="#FF688CAF" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Custom:DataGrid}">
                    <Border SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="6" RadiusY="6" Margin="2,2,2,2" Opacity="0.1" x:Name="Shadow1" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="5.5" RadiusY="5.5" Margin="2.5,2.5,2.5,2.5" Opacity="0.15" x:Name="Shadow2" />
                            <Rectangle Fill="#FF000000" Stroke="{x:Null}" StrokeThickness="0" RadiusX="4" RadiusY="4" Margin="3.2,3.2,3.2,3.2" x:Name="Shadow3" Opacity="0.2" />
                            <Border BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" x:Name="ButtonBase" Margin="4,4,4,4">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FF878787" Offset="0" />
                                        <GradientStop Color="#FF737373" Offset="0.402" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#FFFFFFFF" Offset="0" />
                                        <GradientStop Color="#FFBCBCBC" Offset="0.594" />
                                        <GradientStop Color="#FFF3F3F3" Offset="0.473" />
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Grid Width="Auto" Height="Auto">
                                    <Border Margin="0,10,0,0" Background="{DynamicResource DarkBrush}" CornerRadius="2,2,2,2" x:Name="DarkBorder" />
                                    <Border x:Name="TranslucentBorder" Opacity="1" BorderBrush="#3FFFFFFF" BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" />
                                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="HoverEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                    <Rectangle Fill="{TemplateBinding Background}" Stroke="{x:Null}" RadiusX="2" RadiusY="2" x:Name="FocusEffect" Opacity="0" OpacityMask="{DynamicResource HoverOpacity}" />
                                    <Border Margin="4,0,4,0" Background="#FF000000" BorderThickness="1,1,1,1" CornerRadius="2,2,2,2" x:Name="InsetBorder">
                                        <Border.BorderBrush>
                                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                                <GradientStop Color="#FFCBCBCB" Offset="0.004" />
                                                <GradientStop Color="#FFD8D8D8" Offset="1" />
                                                <GradientStop Color="#FF646464" Offset="0.522" />
                                            </LinearGradientBrush>
                                        </Border.BorderBrush>
                                        <Grid>
                                            <Border BorderThickness="1,1,1,1" CornerRadius="1,1,1,1" BorderBrush="#FF373737" />

                                            <ScrollViewer x:Name="DG_ScrollViewer" Focusable="False" Margin="4,0,4,0">
                                                <ScrollViewer.Template>
                                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                                        <Grid>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition Width="*" />
                                                                <ColumnDefinition Width="Auto" />
                                                            </Grid.ColumnDefinitions>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="*" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <Button Template="{StaticResource SelectAllButtonTemplate}" Command="{x:Static Custom:DataGrid.SelectAllCommand}" Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Custom:DataGrid}}, Path=CellsPanelHorizontalOffset}" Focusable="false" Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Custom:DataGrid}}, 
											Path=HeadersVisibility, Converter={x:Static Custom:DataGrid.HeadersVisibilityConverter},
											 ConverterParameter={x:Static Custom:DataGridHeadersVisibility.All}}" />
                                                            <Custom:DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1">
                                                                <Custom:DataGridColumnHeadersPresenter.Visibility>
                                                                    <Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}">
                                                                        <Binding.ConverterParameter>
                                                                            <Custom:DataGridHeadersVisibility>Column</Custom:DataGridHeadersVisibility>
                                                                        </Binding.ConverterParameter>
                                                                    </Binding>
                                                                </Custom:DataGridColumnHeadersPresenter.Visibility>
                                                            </Custom:DataGridColumnHeadersPresenter>
                                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Grid.ColumnSpan="2" Grid.Row="1" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" />
                                                            <ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,-27,0" />
                                                            <Grid Grid.Column="1" Grid.Row="2">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type Custom:DataGrid}}}" />
                                                                    <ColumnDefinition Width="*" />
                                                                </Grid.ColumnDefinitions>
                                                                <ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,0,-18" />
                                                            </Grid>
                                                        </Grid>
                                                    </ControlTemplate>
                                                </ScrollViewer.Template>
                                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </Grid>
                                    </Border>
                                </Grid>
                            </Border>
                            <Border x:Name="DisabledBorder" BorderBrush="{DynamicResource DisabledBorderBrush}" BorderThickness="1,1,1,1" Margin="4,4,4,4" CornerRadius="3,3,3,3" Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" IsHitTestVisible="False" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
            </Trigger>
        </Style.Triggers>
    </Style>


	<Style TargetType="{x:Type System_Windows_Controls:AutoCompleteBox}">
		<Setter Property="IsTabStop" Value="False"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="BorderBrush">
			<Setter.Value>
				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
					<GradientStop Color="#FFA3AEB9" Offset="0"/>
					<GradientStop Color="#FF8399A9" Offset="0.375"/>
					<GradientStop Color="#FF718597" Offset="0.375"/>
					<GradientStop Color="#FF617584" Offset="1"/>
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Background" Value="{DynamicResource MouseOverBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="MinWidth" Value="45"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type System_Windows_Controls:AutoCompleteBox}">
					<Grid Opacity="{TemplateBinding Opacity}">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="PopupStates">
								<VisualStateGroup.Transitions>
									<VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.1" Storyboard="{x:Null}" To="PopupOpened"/>
									<VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.2" Storyboard="{x:Null}" To="PopupClosed"/>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="PopupOpened">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.1" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PopupBorder"/>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="PopupClosed">
									<Storyboard>
										<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PopupBorder"/>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<DiscreteObjectKeyFrame.Value>
													<System:Boolean>True</System:Boolean>
												</DiscreteObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<TextBox x:Name="Text" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" IsTabStop="True" Margin="0" Padding="{TemplateBinding Padding}" />
						<Border x:Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="1" CornerRadius="1" Visibility="Collapsed">
							<Border.ToolTip>
								<ToolTip x:Name="validationTooltip" Placement="Right">
									<ToolTip.Triggers>
										<EventTrigger RoutedEvent="FrameworkElement.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<DiscreteObjectKeyFrame.Value>
																<System:Boolean>True</System:Boolean>
															</DiscreteObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</ToolTip.Triggers>
									<ToolTip.Template>
										<ControlTemplate TargetType="{x:Type ToolTip}">
											<Grid x:Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
												<Grid.RenderTransform>
													<TranslateTransform X="-25"/>
												</Grid.RenderTransform>
												<VisualStateManager.VisualStateGroups>
													<VisualStateGroup x:Name="OpenStates">
														<VisualStateGroup.Transitions>
															<VisualTransition From="{x:Null}" GeneratedDuration="0" Storyboard="{x:Null}" To="{x:Null}"/>
															<VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.2" To="Open">
																<Storyboard>
																	<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation"/>
																	<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
																</Storyboard>
															</VisualTransition>
														</VisualStateGroup.Transitions>
														<VisualState x:Name="Closed">
															<Storyboard>
																<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
															</Storyboard>
														</VisualState>
														<VisualState x:Name="Open">
															<Storyboard>
																<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="Translation"/>
																<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root"/>
															</Storyboard>
														</VisualState>
													</VisualStateGroup>
												</VisualStateManager.VisualStateGroups>
												<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4"/>
												<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3"/>
												<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2"/>
												<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1"/>
												<Border Background="#FFDC000C" CornerRadius="2">
													<TextBlock Foreground="White" MaxWidth="250" Margin="8,4" TextWrapping="Wrap" Text="{Binding (Validation.Errors)[0].ErrorContent}"/>
												</Border>
											</Grid>
										</ControlTemplate>
									</ToolTip.Template>
								</ToolTip>
							</Border.ToolTip>
							<Grid Background="Transparent" HorizontalAlignment="Right" Height="12" Margin="1,-4,-4,0" VerticalAlignment="Top" Width="12">
								<Path Data="M1,0L6,0A2,2,90,0,1,8,2L8,7z" Fill="#FFDC000C" Margin="1,3,0,0"/>
								<Path Data="M0,0L2,0 8,6 8,8" Fill="White" Margin="1,3,0,0"/>
							</Grid>
						</Border>
						<Popup x:Name="Popup">
							<Grid Opacity="{TemplateBinding Opacity}">
								<Border x:Name="PopupBorder" BorderThickness="0" HorizontalAlignment="Stretch" Opacity="0">
									<Border.RenderTransform>
										<TranslateTransform X="1" Y="1"/>
									</Border.RenderTransform>
									<Border CornerRadius="0" HorizontalAlignment="Stretch" Opacity="1" Padding="0" Margin="-3">
										
										<Border.RenderTransform>
											<TransformGroup>
												<TranslateTransform X="-1" Y="-1"/>
											</TransformGroup>
										</Border.RenderTransform>
										<ListBox x:Name="Selector" BorderThickness="0" Foreground="{TemplateBinding Foreground}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ItemTemplate="{TemplateBinding ItemTemplate}" ItemContainerStyle="{TemplateBinding ItemContainerStyle}" ScrollViewer.VerticalScrollBarVisibility="Auto"/>
									</Border>
								</Border>
							</Grid>
						</Popup>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>