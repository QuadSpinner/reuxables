<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!--  Global Resources  -->
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Resources/Palette.xaml" />
		<ResourceDictionary Source="../Resources/Variables.xaml" />
		<ResourceDictionary Source="../Internal/Consolidated.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<!--  Styles  -->

	<Style x:Key="ComboBoxToggle" TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth" Value="0" />
		<Setter Property="MinHeight" Value="0" />
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<DockPanel Background="{TemplateBinding Background}" LastChildFill="False" SnapsToDevicePixels="True">
						<Border x:Name="Border"
						        Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        DockPanel.Dock="Right">
							<Path x:Name="Arrow"
							      Margin="0,0,2,0"
							      HorizontalAlignment="Center"
							      VerticalAlignment="Center"
							      Data="M 0 0 L 4 4 L 8 0 Z"
							      Fill="{StaticResource Dark3}" />
						</Border>
					</DockPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border x:Name="MainBorder"
		        Background="{TemplateBinding Background}"
		        BorderBrush="{TemplateBinding BorderBrush}"
		        BorderThickness="{TemplateBinding BorderThickness}"
		        CornerRadius="{StaticResource CornerRadius}"
		        SnapsToDevicePixels="True">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="Disabled" />
					<VisualState x:Name="ReadOnly" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_ContentHost" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="PART_ContentHost"
			        Margin="2"
			        Background="{TemplateBinding Background}"
			        Focusable="False"
			        Padding="2" />
		</Border>
	</ControlTemplate>

	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="MinWidth" Value="65" />
		<Setter Property="Template" Value="{DynamicResource ComboBoxTemplate}" />
		<Setter Property="Background" Value="{StaticResource White1}" />
		<Setter Property="BorderBrush" Value="{StaticResource Blue3}" />
		<Setter Property="Foreground" Value="{StaticResource Dark3}" />
		<Setter Property="BorderThickness" Value="1" />
	</Style>


	<ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="grid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Unfocused" />
					<VisualState x:Name="Focused">
						<Storyboard />
					</VisualState>
					<VisualState x:Name="FocusedDropDown" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="EditStates">
					<VisualState x:Name="Editable">
						<Storyboard>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
							</ObjectAnimationUsingKeyFrames>

						</Storyboard>
					</VisualState>
					<VisualState x:Name="Uneditable" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="ValidationStates">
					<VisualState x:Name="Valid" />
					<VisualState x:Name="InvalidFocused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="InvalidBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="1" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
					</VisualState>
					<VisualState x:Name="InvalidUnfocused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="InvalidBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<ContentPresenter x:Name="ContentSite"
			                  Grid.Column="1"
			                  Margin="{TemplateBinding Padding}"
			                  HorizontalAlignment="Left"
			                  VerticalAlignment="Center"
			                  Content="{TemplateBinding SelectionBoxItem}"
			                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
			                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
			                  IsHitTestVisible="False" />
			<TextBox x:Name="PART_EditableTextBox"
			         Grid.Column="1"
			         Margin="1,1,0,1"
			         HorizontalAlignment="Stretch"
			         VerticalAlignment="Stretch"
			         Background="{StaticResource White1}"
			         BorderBrush="{StaticResource Dark7}"
			         BorderThickness="{TemplateBinding BorderThickness}"
			         Focusable="True"
			         IsReadOnly="{TemplateBinding IsReadOnly}"
			         Style="{x:Null}"
			         Template="{DynamicResource ComboBoxTextBox}"
			         Visibility="Hidden" />
			<Popup x:Name="Popup"
			       Grid.Column="1"
			       AllowsTransparency="True"
			       Focusable="False"
			       IsOpen="{TemplateBinding IsDropDownOpen}"
			       Placement="Bottom"
			       PopupAnimation="Slide">
				<Grid x:Name="DropDown"
				      MinWidth="{TemplateBinding ActualWidth}"
				      MaxHeight="{TemplateBinding MaxDropDownHeight}"
				      SnapsToDevicePixels="True">
					<Border Background="{StaticResource ComboBoxPopupBrush}" CornerRadius="{StaticResource CornerRadius}" />
					<Border x:Name="DropDownBorder"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="1"
					        CornerRadius="{StaticResource CornerRadius}" />
					<ScrollViewer x:Name="DropDownScrollViewer" Margin="6" HorizontalContentAlignment="Stretch">
						<Grid>
							<Canvas Width="0"
							        Height="0"
							        HorizontalAlignment="Left"
							        VerticalAlignment="Top">
								<Rectangle x:Name="OpaqueRect"
								           Width="{Binding ActualWidth,
								                           ElementName=DropDownBorder}"
								           Height="{Binding ActualHeight,
								                            ElementName=DropDownBorder}"
								           Fill="{Binding Background,
								                          ElementName=DropDownBorder}" />
							</Canvas>
							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</ScrollViewer>
				</Grid>
			</Popup>
			<ToggleButton x:Name="ToggleButton"
			              Grid.Column="1"
			              ClickMode="Press"
			              Focusable="false"
			              Foreground="{TemplateBinding Foreground}"
			              IsChecked="{Binding IsDropDownOpen,
			                                  Mode=TwoWay,
			                                  RelativeSource={RelativeSource TemplatedParent}}"
			              Style="{DynamicResource ComboBoxToggle}" />
			<TextBlock HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
			           VerticalAlignment="Center"
			           FontSize="10"
			           FontWeight="Bold"
			           Text="{TemplateBinding Tag}"
			           TextWrapping="Wrap" />
			<Border x:Name="InvalidBorder"
			        Grid.ColumnSpan="2"
			        BorderBrush="{StaticResource Red4}"
			        BorderThickness="{TemplateBinding BorderThickness}"
			        CornerRadius="{StaticResource CornerRadius}"
			        Opacity="0" />
		</Grid>
	</ControlTemplate>



	<ControlTemplate x:Key="ComboBoxItemTemplate" TargetType="{x:Type ComboBoxItem}">
		<Grid x:Name="grid" SnapsToDevicePixels="true">
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Main" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="1" />
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource White1}" />


							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.6" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="SelectionStates">
					<VisualState x:Name="Unselected" />
					<VisualState x:Name="Selected">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SelectBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="1" />
							</DoubleAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
								<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource White1}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
					<VisualState x:Name="SelectedUnfocused" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Unfocused" />
					<VisualState x:Name="Focused">
						<Storyboard />
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="ValidationStates">
					<VisualState x:Name="Valid" />
					<VisualState x:Name="InvalidFocused">
						<Storyboard />
					</VisualState>
					<VisualState x:Name="InvalidUnfocused" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border x:Name="Main"
			        Background="{TemplateBinding Background}"
			        CornerRadius="{StaticResource CornerRadius}"
			        Opacity="0" />
			<Border x:Name="SelectBorder"
			        Background="{TemplateBinding Background}"
			        CornerRadius="{StaticResource CornerRadius}"
			        Opacity="0" />
			<ContentPresenter x:Name="contentPresenter"
			                  Margin="{TemplateBinding Padding}"
			                  HorizontalAlignment="Left"
			                  VerticalAlignment="Center" />
		</Grid>
	</ControlTemplate>


	<Style TargetType="{x:Type ComboBoxItem}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="Foreground" Value="{StaticResource Dark3}" />
		<Setter Property="Template" Value="{DynamicResource ComboBoxItemTemplate}" />
		<Setter Property="Background" Value="{StaticResource Blue3}" />
		<Setter Property="Padding" Value="4,7,4,7" />
	</Style>


	<Style x:Key="IconComboBox" TargetType="{x:Type ComboBox}">
		<Setter Property="SnapsToDevicePixels" Value="true" />
		<Setter Property="MinWidth" Value="65" />
		<Setter Property="Template" Value="{DynamicResource IconComboBoxTemplate}" />
		<Setter Property="Background" Value="{StaticResource White1}" />
		<Setter Property="BorderBrush" Value="{StaticResource Blue3}" />
		<Setter Property="Foreground" Value="{StaticResource Dark3}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Tag" Value="&#x260e;" />
	</Style>


	<ControlTemplate x:Key="IconComboBoxTemplate" TargetType="{x:Type ComboBox}">
		<Grid x:Name="grid">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.7" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="grid" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
				<VisualStateGroup x:Name="FocusStates">
					<VisualState x:Name="Unfocused" />
					<VisualState x:Name="Focused">
						<Storyboard />
					</VisualState>
					<VisualState x:Name="FocusedDropDown" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="EditStates">
					<VisualState x:Name="Editable">
						<Storyboard />
					</VisualState>
					<VisualState x:Name="Uneditable" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="ValidationStates">
					<VisualState x:Name="Valid" />
					<VisualState x:Name="InvalidFocused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="InvalidBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="1" />
							</DoubleAnimationUsingKeyFrames>

						</Storyboard>
					</VisualState>
					<VisualState x:Name="InvalidUnfocused">
						<Storyboard>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="InvalidBorder" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>

			<Popup x:Name="Popup"
			       Grid.Column="1"
			       AllowsTransparency="True"
			       Focusable="False"
			       IsOpen="{TemplateBinding IsDropDownOpen}"
			       Placement="Bottom"
			       PopupAnimation="Slide">
				<Grid x:Name="DropDown"
				      MinWidth="{TemplateBinding ActualWidth}"
				      MaxHeight="{TemplateBinding MaxDropDownHeight}"
				      SnapsToDevicePixels="True">
					<Border Background="{StaticResource ComboBoxPopupBrush}" CornerRadius="{StaticResource CornerRadius}" />
					<Border x:Name="DropDownBorder"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="1"
					        CornerRadius="{StaticResource CornerRadius}" />
					<ScrollViewer x:Name="DropDownScrollViewer" Margin="6" HorizontalContentAlignment="Stretch">
						<Grid>
							<Canvas Width="0"
							        Height="0"
							        HorizontalAlignment="Left"
							        VerticalAlignment="Top">
								<Rectangle x:Name="OpaqueRect"
								           Width="{Binding ActualWidth,
								                           ElementName=DropDownBorder}"
								           Height="{Binding ActualHeight,
								                            ElementName=DropDownBorder}"
								           Fill="{Binding Background,
								                          ElementName=DropDownBorder}" />
							</Canvas>
							<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Grid>
					</ScrollViewer>
				</Grid>
			</Popup>

			<Border x:Name="InvalidBorder"
			        Grid.ColumnSpan="2"
			        BorderBrush="{StaticResource Red4}"
			        BorderThickness="{TemplateBinding BorderThickness}"
			        CornerRadius="{StaticResource CornerRadius}"
			        Opacity="0" />
			<ContentPresenter x:Name="ContentSite"
			                  Grid.Column="1"
			                  Margin="0,0,20,0"
			                  HorizontalAlignment="Right"
			                  VerticalAlignment="Center"
			                  Content="{TemplateBinding Tag}"
			                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
			                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
			                  IsHitTestVisible="False" />
			<ToggleButton x:Name="ToggleButton"
			              Grid.Column="1"
			              Margin="30,0,0,0"
			              HorizontalAlignment="Right"
			              ClickMode="Press"
			              Focusable="false"
			              Foreground="{TemplateBinding Foreground}"
			              IsChecked="{Binding IsDropDownOpen,
			                                  Mode=TwoWay,
			                                  RelativeSource={RelativeSource TemplatedParent}}"
			              Style="{DynamicResource ComboBoxToggle}" />
		</Grid>
	</ControlTemplate>


</ResourceDictionary>