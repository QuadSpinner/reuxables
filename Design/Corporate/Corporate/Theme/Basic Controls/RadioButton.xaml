<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
	<!--  Global Resources  -->
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Resources/Palette.xaml" />
		<ResourceDictionary Source="../Resources/Variables.xaml" />
		<ResourceDictionary Source="../Internal/Consolidated.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<!--  Styles  -->

	<Style TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{StaticResource White1}" />
		<Setter Property="BorderBrush" Value="{StaticResource Dark4}" />
		<Setter Property="Foreground" Value="{StaticResource Dark4}" />

		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="7" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid x:Name="templateRoot"
					      HorizontalAlignment="Stretch"
					      VerticalAlignment="Stretch"
					      Background="Transparent"
					      SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RectangleHover" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="templateRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.4" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused">
									<Storyboard />
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RectangleChecked" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource White1}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RectangleInvalid" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RectangleInvalid" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle x:Name="MainRectangle"
						           Margin="-1,0,0,0"
						           Fill="{TemplateBinding Background}"
						           Stroke="{TemplateBinding BorderBrush}"
						           StrokeThickness="{TemplateBinding BorderThickness}" />
						<Rectangle x:Name="RectangleChecked"
						           Margin="-1,0,0,0"
						           Fill="{StaticResource Blue3}"
						           Opacity="0"
						           Stroke="{TemplateBinding BorderBrush}"
						           StrokeThickness="{TemplateBinding BorderThickness}" />

						<Rectangle x:Name="RectangleHover"
						           Fill="{StaticResource Blue5}"
						           Opacity="0"
						           Stroke="{TemplateBinding BorderBrush}"
						           StrokeThickness="{TemplateBinding BorderThickness}" />
						<Rectangle x:Name="RectangleInvalid"
						           Margin="2"
						           Opacity="0"
						           Stroke="{StaticResource Red3}"
						           StrokeThickness="{TemplateBinding BorderThickness}" />
						<ContentPresenter x:Name="contentPresenter"
						                  Margin="{TemplateBinding Padding}"
						                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						                  Focusable="False"
						                  RecognizesAccessKey="True"
						                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="IconRadio" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Foreground" Value="{StaticResource Dark3}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="FontSize" Value="24" />
		<Setter Property="Padding" Value="7,2,7,2" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid x:Name="templateRoot"
					      HorizontalAlignment="Stretch"
					      VerticalAlignment="Stretch"
					      Background="Transparent"
					      SnapsToDevicePixels="True">
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="templateRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0.4" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused">
									<Storyboard />
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>

										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(TextElement.Foreground)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource Blue3}" />
										</ObjectAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RectangleInvalid" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>

									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="RectangleInvalid" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1" />
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border x:Name="RectangleInvalid"
						        Margin="2"
						        BorderBrush="{StaticResource Red3}"
						        BorderThickness="{TemplateBinding BorderThickness}"
						        CornerRadius="{StaticResource CornerRadius}"
						        Opacity="0" />
						<ContentPresenter x:Name="contentPresenter"
						                  Margin="{TemplateBinding Padding}"
						                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
						                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
						                  Focusable="False"
						                  Opacity="0.7"
						                  RecognizesAccessKey="True"
						                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>