<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<!--  Global Resources  -->
	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="../Resources/Palette.xaml" />
		<ResourceDictionary Source="../Resources/Variables.xaml" />
		<ResourceDictionary Source="../Internal/Consolidated.xaml" />
	</ResourceDictionary.MergedDictionaries>
	<!--  Styles  -->


	<Style TargetType="{x:Type Menu}">
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border Background="{TemplateBinding Background}"
					        BorderBrush="{TemplateBinding BorderBrush}"
					        BorderThickness="{TemplateBinding BorderThickness}"
					        Padding="{TemplateBinding Padding}"
					        SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter" />

	<Style x:Key="MenuScroll" BasedOn="{x:Null}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="HorizontalScrollBarVisibility" Value="Hidden" />
		<Setter Property="VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Border Grid.Row="1" Grid.Column="0">
							<ScrollContentPresenter Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" />
						</Border>
						<RepeatButton Grid.Row="0"
						              Grid.Column="0"
						              Command="{x:Static ScrollBar.LineUpCommand}"
						              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
						              Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="0" FallbackValue="Visibility.Collapsed">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Grid Margin="0,2,0,2">
								<Path x:Name="DecreaseArrow"
								      Data="M 0 4 L 8 4 L 4 0 Z"
								      Fill="{StaticResource White1}"
								      StrokeThickness="1" />
							</Grid>
						</RepeatButton>
						<RepeatButton Grid.Row="2"
						              Grid.Column="0"
						              Command="{x:Static ScrollBar.LineDownCommand}"
						              CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
						              Focusable="false">
							<RepeatButton.Visibility>
								<MultiBinding Converter="{StaticResource MenuScrollingVisibilityConverter}" ConverterParameter="100" FallbackValue="Visibility.Collapsed">
									<Binding Path="ComputedVerticalScrollBarVisibility" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="VerticalOffset" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ExtentHeight" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="ViewportHeight" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</RepeatButton.Visibility>
							<Grid Margin="0,2,0,2">
								<Path x:Name="IncreaseArrow"
								      Data="M 0 0 L 4 4 L 8 0 Z"
								      Fill="{StaticResource White1}"
								      StrokeThickness="1" />
							</Grid>
						</RepeatButton>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Padding" Value="2,1,2,1" />
		<Setter Property="MinHeight" Value="28" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{StaticResource Dark4}" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,0,0,0">
						<Grid x:Name="grid" Margin="0,0,0,0" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="IconColumn"
								                  Width="Auto"
								                  MinWidth="26"
								                  SharedSizeGroup="MenuItemIconColumnGroup" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition x:Name="columnDefinition" Width="37" />
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
								<ColumnDefinition Width="14" />
							</Grid.ColumnDefinitions>
							<ContentPresenter x:Name="Icon"
							                  Margin="4,0,4,0"
							                  VerticalAlignment="Center"
							                  ContentSource="Icon" />
							<Grid x:Name="GlyphPanel"
							      Margin="4,0,6,0"
							      VerticalAlignment="Center"
							      Visibility="Hidden">
								<Path x:Name="GlyphPanelpath"
								      VerticalAlignment="Center"
								      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
								      Fill="{TemplateBinding Foreground}"
								      FlowDirection="LeftToRight" />
							</Grid>
							<ContentPresenter x:Name="HeaderHost"
							                  Grid.Column="1"
							                  Margin="{TemplateBinding Padding}"
							                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							                  ContentSource="Header"
							                  RecognizesAccessKey="True" />
							<TextBlock Grid.Column="3"
							           Margin="{TemplateBinding Padding}"
							           VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							           Text="{TemplateBinding InputGestureText}" />
							<Grid x:Name="ArrowPanel" Grid.Column="4" VerticalAlignment="Center">
								<Path x:Name="ArrowPanelPath"
								      VerticalAlignment="Center"
								      Data="M0,0 L0,8 L4,4 z"
								      Fill="{TemplateBinding Foreground}" />
							</Grid>
							<Popup x:Name="SubMenuPopup"
							       AllowsTransparency="true"
							       Focusable="false"
							       IsOpen="{Binding IsSubmenuOpen,
							                        RelativeSource={RelativeSource TemplatedParent}}"
							       Placement="Right"
							       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
								<Grid x:Name="SubMenu">
									<Border x:Name="SubMenuBorder"
									        Background="{StaticResource Dark3}"
									        BorderBrush="{StaticResource Dark2}"
									        BorderThickness="1" />
									<ScrollViewer CanContentScroll="True" Style="{DynamicResource MenuScroll}">
										<ItemsPresenter x:Name="ItemsPresenter"
										                Grid.IsSharedSizeScope="true"
										                KeyboardNavigation.DirectionalNavigation="Cycle"
										                KeyboardNavigation.TabNavigation="Cycle"
										                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Margin" Value="0,1,0,1" />
							<Setter TargetName="IconColumn" Property="MinWidth" Value="0" />
							<Setter TargetName="SubMenuPopup" Property="Placement" Value="Bottom" />
							<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="HeaderHost" Property="Margin" Value="3,1,0,1" />
							<Setter TargetName="columnDefinition" Property="Width" Value="0" />
						</Trigger>
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Margin" Value="0,1,0,1" />
							<Setter TargetName="IconColumn" Property="MinWidth" Value="0" />
							<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="GlyphPanel" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="HeaderHost" Property="Margin" Value="3,1,0,1" />
							<Setter TargetName="columnDefinition" Property="Width" Value="0" />
						</Trigger>
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter Property="DockPanel.Dock" Value="Top" />
							<Setter Property="Padding" Value="5,0,0,0" />
						</Trigger>
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="DockPanel.Dock" Value="Top" />
							<Setter Property="Padding" Value="5,0,0,0" />
							<Setter TargetName="ArrowPanel" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter TargetName="SubMenuPopup" Property="PopupAnimation" Value="None" />
						</Trigger>
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
							<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger SourceName="SubMenuPopup" Property="AllowsTransparency" Value="true">
							<Setter TargetName="SubMenu" Property="Margin" Value="0,0,3,3" />
							<Setter TargetName="SubMenu" Property="SnapsToDevicePixels" Value="true" />
						</Trigger>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter TargetName="Border" Property="Background" Value="{StaticResource Blue1}" />
							<Setter Property="Foreground" Value="{StaticResource White1}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="grid" Property="Opacity" Value="0.3" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHighlighted" Value="True" />
								<Condition Property="Role" Value="TopLevelHeader" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="Transparent" />
								</Setter.Value>
							</Setter>
							<Setter Property="Foreground" Value="{StaticResource Dark3}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsHighlighted" Value="True" />
								<Condition Property="Role" Value="TopLevelItem" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Border" Property="Background">
								<Setter.Value>
									<SolidColorBrush Color="Transparent" />
								</Setter.Value>
							</Setter>
							<Setter Property="Foreground" Value="{StaticResource Dark3}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1" />
		<Setter Property="Margin" Value="0,2,0,2" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="FontFamily" Value="{StaticResource DefaultFont}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{StaticResource Dark5}" BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>